
(set-info :smt-lib-version 2.6)
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 211))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(assert
  (let ((let0 (ff.mul (as ff200 FF0) x2 x2 x2)))
  (let ((let1 (ff.mul (as ff53 FF0) x1 x2 x3)))
  (let ((let2 (ff.mul (as ff103 FF0) x4 x6)))
  (let ((let3 (ff.mul (as ff98 FF0) x6 x6)))
  (let ((let4 (ff.mul (as ff23 FF0) x4 x7)))
  (let ((let5 (ff.add let0 let1 let2 let3 let4)))
  (let ((let6 (= let5 (as ff0 FF0))))
  (let ((let7 (ff.mul (as ff46 FF0) x6 x6 x6)))
  (let ((let8 (ff.mul (as ff6 FF0) x4 x6 x7)))
  (let ((let9 (ff.mul (as ff3 FF0) x0 x1)))
  (let ((let10 (ff.mul (as ff2 FF0) x0 x3)))
  (let ((let11 (ff.mul (as ff121 FF0) x2)))
  (let ((let12 (ff.add let7 let8 let9 let10 let11)))
  (let ((let13 (= let12 (as ff0 FF0))))
  (let ((let14 (ff.mul (as ff138 FF0) x0 x1 x4)))
  (let ((let15 (ff.mul (as ff18 FF0) x1 x2 x5)))
  (let ((let16 (ff.mul (as ff18 FF0) x2 x4 x5)))
  (let ((let17 (ff.mul (as ff86 FF0) x0 x6 x6)))
  (let ((let18 (ff.mul (as ff34 FF0) x7 x7 x7)))
  (let ((let19 (ff.add let14 let15 let16 let17 let18)))
  (let ((let20 (= let19 (as ff0 FF0))))
  (let ((let21 (ff.mul (as ff148 FF0) x3 x5 x6)))
  (let ((let22 (ff.mul (as ff15 FF0) x0 x1 x7)))
  (let ((let23 (ff.mul (as ff37 FF0) x2 x5)))
  (let ((let24 (ff.mul (as ff3 FF0) x5 x5)))
  (let ((let25 (ff.mul (as ff23 FF0) x1 x7)))
  (let ((let26 (as ff85 FF0)))
  (let ((let27 (ff.add let21 let22 let23 let24 let25 let26)))
  (let ((let28 (= let27 (as ff0 FF0))))
  (let ((let29 (and let6 let13 let20 let28)))
  let29
))))))))))))))))))))))))))))))
)
(check-sat)
