
(set-info :smt-lib-version 2.6)
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 13))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(assert
  (let ((let0 (ff.mul (as ff4 FF0) x0 x3 x5)))
  (let ((let1 (ff.mul (as ff8 FF0) x1 x5 x5)))
  (let ((let2 (ff.mul (as ff11 FF0) x2 x5 x7)))
  (let ((let3 (ff.mul (as ff6 FF0) x1 x1)))
  (let ((let4 (ff.mul (as ff6 FF0) x2 x5)))
  (let ((let5 (ff.add let0 let1 let2 let3 let4)))
  (let ((let6 (= let5 (as ff0 FF0))))
  (let ((let7 (ff.mul (as ff4 FF0) x0 x2 x5)))
  (let ((let8 (ff.mul x3 x4 x5)))
  (let ((let9 (ff.mul x2 x3 x7)))
  (let ((let10 (ff.add let7 let8 let9)))
  (let ((let11 (= let10 (as ff0 FF0))))
  (let ((let12 (ff.mul (as ff6 FF0) x1 x1 x2)))
  (let ((let13 (ff.mul (as ff12 FF0) x2 x3 x6)))
  (let ((let14 (ff.mul (as ff6 FF0) x3 x3)))
  (let ((let15 (ff.mul (as ff4 FF0) x0 x6)))
  (let ((let16 (ff.mul x2 x7)))
  (let ((let17 (as ff1 FF0)))
  (let ((let18 (ff.add let12 let13 let14 let15 let16 let17)))
  (let ((let19 (= let18 (as ff0 FF0))))
  (let ((let20 (ff.mul (as ff4 FF0) x0 x3 x4)))
  (let ((let21 (ff.mul (as ff11 FF0) x2 x4 x7)))
  (let ((let22 (ff.mul (as ff10 FF0) x4 x7 x7)))
  (let ((let23 (ff.mul (as ff10 FF0) x3 x6)))
  (let ((let24 (ff.add let20 let21 let22 let23)))
  (let ((let25 (= let24 (as ff0 FF0))))
  (let ((let26 (and let6 let11 let19 let25)))
  let26
)))))))))))))))))))))))))))
)
(check-sat)
