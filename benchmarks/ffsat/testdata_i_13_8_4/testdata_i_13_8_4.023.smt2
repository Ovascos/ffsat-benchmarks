
(set-info :smt-lib-version 2.6)
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 13))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(assert
  (let ((let0 (ff.mul (as ff10 FF0) x2 x5 x5)))
  (let ((let1 (ff.mul (as ff2 FF0) x0 x5 x7)))
  (let ((let2 (ff.mul (as ff7 FF0) x2 x5 x7)))
  (let ((let3 (ff.mul (as ff7 FF0) x3 x4)))
  (let ((let4 (ff.mul (as ff9 FF0) x4 x7)))
  (let ((let5 (as ff1 FF0)))
  (let ((let6 (ff.add let0 let1 let2 let3 let4 let5)))
  (let ((let7 (= let6 (as ff0 FF0))))
  (let ((let8 (ff.mul (as ff6 FF0) x5 x5 x6)))
  (let ((let9 (ff.mul (as ff6 FF0) x3 x6 x6)))
  (let ((let10 (ff.mul (as ff12 FF0) x5 x6 x6)))
  (let ((let11 (ff.mul (as ff7 FF0) x0 x2 x7)))
  (let ((let12 (ff.mul (as ff3 FF0) x2 x4 x7)))
  (let ((let13 (as ff1 FF0)))
  (let ((let14 (ff.add let8 let9 let10 let11 let12 let13)))
  (let ((let15 (= let14 (as ff0 FF0))))
  (let ((let16 (ff.mul (as ff9 FF0) x1 x2 x5)))
  (let ((let17 (ff.mul (as ff4 FF0) x1 x2 x7)))
  (let ((let18 (ff.mul (as ff6 FF0) x2 x7 x7)))
  (let ((let19 (ff.mul x6 x6)))
  (let ((let20 (as ff1 FF0)))
  (let ((let21 (ff.add let16 let17 let18 let19 let20)))
  (let ((let22 (= let21 (as ff0 FF0))))
  (let ((let23 (ff.mul x5 x5 x6)))
  (let ((let24 (ff.mul (as ff4 FF0) x1 x6 x7)))
  (let ((let25 (ff.mul x2 x2)))
  (let ((let26 (ff.mul (as ff7 FF0) x0 x3)))
  (let ((let27 (ff.mul (as ff2 FF0) x3 x5)))
  (let ((let28 (as ff1 FF0)))
  (let ((let29 (ff.add let23 let24 let25 let26 let27 let28)))
  (let ((let30 (= let29 (as ff0 FF0))))
  (let ((let31 (and let7 let15 let22 let30)))
  let31
))))))))))))))))))))))))))))))))
)
(check-sat)
