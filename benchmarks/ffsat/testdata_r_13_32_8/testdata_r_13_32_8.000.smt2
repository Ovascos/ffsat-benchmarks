
(set-info :smt-lib-version 2.6)
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 13))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(declare-fun x8 () FF0)
(declare-fun x9 () FF0)
(declare-fun x10 () FF0)
(declare-fun x11 () FF0)
(declare-fun x12 () FF0)
(declare-fun x13 () FF0)
(declare-fun x14 () FF0)
(declare-fun x15 () FF0)
(declare-fun x16 () FF0)
(declare-fun x17 () FF0)
(declare-fun x18 () FF0)
(declare-fun x19 () FF0)
(declare-fun x20 () FF0)
(declare-fun x21 () FF0)
(declare-fun x22 () FF0)
(declare-fun x23 () FF0)
(declare-fun x24 () FF0)
(declare-fun x25 () FF0)
(declare-fun x26 () FF0)
(declare-fun x27 () FF0)
(declare-fun x28 () FF0)
(declare-fun x29 () FF0)
(declare-fun x30 () FF0)
(declare-fun x31 () FF0)
(assert
  (let ((let0 (ff.mul x8 x15)))
  (let ((let1 (ff.mul (as ff8 FF0) x8)))
  (let ((let2 (ff.mul (as ff4 FF0) x15)))
  (let ((let3 (as ff6 FF0)))
  (let ((let4 (ff.add let0 let1 let2 let3)))
  (let ((let5 (= let4 (as ff0 FF0))))
  (let ((let6 (ff.mul x21 x21)))
  (let ((let7 (ff.mul (as ff11 FF0) x21)))
  (let ((let8 (as ff2 FF0)))
  (let ((let9 (ff.add let6 let7 let8)))
  (let ((let10 (= let9 (as ff0 FF0))))
  (let ((let11 (ff.mul x13 x13 x13)))
  (let ((let12 (ff.mul (as ff12 FF0) x13 x13)))
  (let ((let13 (ff.mul (as ff3 FF0) x13)))
  (let ((let14 (as ff5 FF0)))
  (let ((let15 (ff.add let11 let12 let13 let14)))
  (let ((let16 (= let15 (as ff0 FF0))))
  (let ((let17 (ff.mul x2 x2 x8 x28)))
  (let ((let18 (ff.mul (as ff6 FF0) x2 x2 x28)))
  (let ((let19 (ff.mul (as ff5 FF0) x2 x8 x28)))
  (let ((let20 (ff.mul (as ff4 FF0) x2 x28)))
  (let ((let21 (ff.mul (as ff12 FF0) x8 x28)))
  (let ((let22 (ff.mul (as ff7 FF0) x28)))
  (let ((let23 (ff.add let17 let18 let19 let20 let21 let22)))
  (let ((let24 (= let23 (as ff0 FF0))))
  (let ((let25 (ff.mul x17 x17)))
  (let ((let26 (as ff4 FF0)))
  (let ((let27 (ff.add let25 let26)))
  (let ((let28 (= let27 (as ff0 FF0))))
  (let ((let29 (ff.mul x25 x25 x25 x30 x30 x30)))
  (let ((let30 (ff.mul (as ff9 FF0) x25 x25 x25 x30 x30)))
  (let ((let31 (ff.mul (as ff6 FF0) x25 x25 x30 x30 x30)))
  (let ((let32 (ff.mul (as ff9 FF0) x25 x25 x25 x30)))
  (let ((let33 (ff.mul (as ff2 FF0) x25 x25 x30 x30)))
  (let ((let34 (ff.mul (as ff4 FF0) x25 x30 x30 x30)))
  (let ((let35 (ff.mul (as ff8 FF0) x25 x25 x25)))
  (let ((let36 (ff.mul (as ff2 FF0) x25 x25 x30)))
  (let ((let37 (ff.mul (as ff10 FF0) x25 x30 x30)))
  (let ((let38 (ff.mul (as ff11 FF0) x30 x30 x30)))
  (let ((let39 (ff.mul (as ff9 FF0) x25 x25)))
  (let ((let40 (ff.mul (as ff10 FF0) x25 x30)))
  (let ((let41 (ff.mul (as ff8 FF0) x30 x30)))
  (let ((let42 (ff.mul (as ff6 FF0) x25)))
  (let ((let43 (ff.mul (as ff8 FF0) x30)))
  (let ((let44 (as ff10 FF0)))
  (let ((let45 (ff.add let29 let30 let31 let32 let33 let34 let35 let36 let37 let38 let39 let40 let41 let42 let43 let44)))
  (let ((let46 (= let45 (as ff0 FF0))))
  (let ((let47 (ff.mul x4 x19 x19)))
  (let ((let48 (ff.mul (as ff6 FF0) x4 x19)))
  (let ((let49 (ff.mul (as ff11 FF0) x19 x19)))
  (let ((let50 (ff.mul (as ff5 FF0) x4)))
  (let ((let51 x19))
  (let ((let52 (as ff3 FF0)))
  (let ((let53 (ff.add let47 let48 let49 let50 let51 let52)))
  (let ((let54 (= let53 (as ff0 FF0))))
  (let ((let55 x3))
  (let ((let56 (as ff3 FF0)))
  (let ((let57 (ff.add let55 let56)))
  (let ((let58 (= let57 (as ff0 FF0))))
  (let ((let59 (and let5 let10 let16 let24 let28 let46 let54 let58)))
  let59
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
