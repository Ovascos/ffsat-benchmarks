
(set-info :smt-lib-version 2.6)
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 13))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(declare-fun x8 () FF0)
(declare-fun x9 () FF0)
(declare-fun x10 () FF0)
(declare-fun x11 () FF0)
(declare-fun x12 () FF0)
(declare-fun x13 () FF0)
(declare-fun x14 () FF0)
(declare-fun x15 () FF0)
(declare-fun x16 () FF0)
(declare-fun x17 () FF0)
(declare-fun x18 () FF0)
(declare-fun x19 () FF0)
(declare-fun x20 () FF0)
(declare-fun x21 () FF0)
(declare-fun x22 () FF0)
(declare-fun x23 () FF0)
(declare-fun x24 () FF0)
(declare-fun x25 () FF0)
(declare-fun x26 () FF0)
(declare-fun x27 () FF0)
(declare-fun x28 () FF0)
(declare-fun x29 () FF0)
(declare-fun x30 () FF0)
(declare-fun x31 () FF0)
(assert
  (let ((let0 (ff.mul x4 x4 x4 x28 x28 x28)))
  (let ((let1 (ff.mul (as ff4 FF0) x4 x4 x4 x28 x28)))
  (let ((let2 (ff.mul (as ff4 FF0) x4 x4 x28 x28 x28)))
  (let ((let3 (ff.mul x4 x4 x4 x28)))
  (let ((let4 (ff.mul (as ff3 FF0) x4 x4 x28 x28)))
  (let ((let5 (ff.mul (as ff5 FF0) x4 x28 x28 x28)))
  (let ((let6 (ff.mul (as ff7 FF0) x4 x4 x4)))
  (let ((let7 (ff.mul (as ff4 FF0) x4 x4 x28)))
  (let ((let8 (ff.mul (as ff7 FF0) x4 x28 x28)))
  (let ((let9 (ff.mul (as ff2 FF0) x4 x4)))
  (let ((let10 (ff.mul (as ff5 FF0) x4 x28)))
  (let ((let11 (ff.mul (as ff9 FF0) x4)))
  (let ((let12 (ff.add let0 let1 let2 let3 let4 let5 let6 let7 let8 let9 let10 let11)))
  (let ((let13 (= let12 (as ff0 FF0))))
  (let ((let14 (ff.mul x15 x20 x20 x20 x22)))
  (let ((let15 (ff.mul (as ff2 FF0) x15 x20 x20 x20)))
  (let ((let16 (ff.mul (as ff12 FF0) x15 x20 x20 x22)))
  (let ((let17 (ff.mul (as ff12 FF0) x20 x20 x20 x22)))
  (let ((let18 (ff.mul (as ff11 FF0) x15 x20 x20)))
  (let ((let19 (ff.mul (as ff11 FF0) x20 x20 x20)))
  (let ((let20 (ff.mul (as ff6 FF0) x15 x20 x22)))
  (let ((let21 (ff.mul x20 x20 x22)))
  (let ((let22 (ff.mul (as ff12 FF0) x15 x20)))
  (let ((let23 (ff.mul (as ff2 FF0) x20 x20)))
  (let ((let24 (ff.mul (as ff7 FF0) x20 x22)))
  (let ((let25 x20))
  (let ((let26 (ff.add let14 let15 let16 let17 let18 let19 let20 let21 let22 let23 let24 let25)))
  (let ((let27 (= let26 (as ff0 FF0))))
  (let ((let28 (ff.mul x7 x15 x20 x20 x20)))
  (let ((let29 (ff.mul (as ff10 FF0) x7 x15 x20 x20)))
  (let ((let30 (ff.mul (as ff6 FF0) x15 x20 x20 x20)))
  (let ((let31 (ff.mul (as ff3 FF0) x7 x15 x20)))
  (let ((let32 (ff.mul (as ff8 FF0) x15 x20 x20)))
  (let ((let33 (ff.mul (as ff7 FF0) x7 x15)))
  (let ((let34 (ff.mul (as ff5 FF0) x15 x20)))
  (let ((let35 (ff.mul (as ff3 FF0) x15)))
  (let ((let36 (ff.add let28 let29 let30 let31 let32 let33 let34 let35)))
  (let ((let37 (= let36 (as ff0 FF0))))
  (let ((let38 (ff.mul x4 x8 x8 x8)))
  (let ((let39 (ff.mul (as ff7 FF0) x8 x8 x8)))
  (let ((let40 (ff.mul (as ff8 FF0) x4)))
  (let ((let41 (as ff4 FF0)))
  (let ((let42 (ff.add let38 let39 let40 let41)))
  (let ((let43 (= let42 (as ff0 FF0))))
  (let ((let44 (ff.mul x20 x20 x20)))
  (let ((let45 (as ff5 FF0)))
  (let ((let46 (ff.add let44 let45)))
  (let ((let47 (= let46 (as ff0 FF0))))
  (let ((let48 (ff.mul x10 x10)))
  (let ((let49 (ff.mul (as ff5 FF0) x10)))
  (let ((let50 (as ff7 FF0)))
  (let ((let51 (ff.add let48 let49 let50)))
  (let ((let52 (= let51 (as ff0 FF0))))
  (let ((let53 (ff.mul x16 x16)))
  (let ((let54 (ff.mul (as ff6 FF0) x16)))
  (let ((let55 (ff.add let53 let54)))
  (let ((let56 (= let55 (as ff0 FF0))))
  (let ((let57 (ff.mul x3 x3 x3 x20)))
  (let ((let58 (ff.mul (as ff8 FF0) x3 x3 x3)))
  (let ((let59 (ff.mul (as ff5 FF0) x3 x3 x20)))
  (let ((let60 (ff.mul x3 x3)))
  (let ((let61 (ff.mul (as ff10 FF0) x20)))
  (let ((let62 (as ff2 FF0)))
  (let ((let63 (ff.add let57 let58 let59 let60 let61 let62)))
  (let ((let64 (= let63 (as ff0 FF0))))
  (let ((let65 (and let13 let27 let37 let43 let47 let52 let56 let64)))
  let65
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
