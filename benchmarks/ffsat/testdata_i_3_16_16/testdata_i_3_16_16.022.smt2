
(set-info :smt-lib-version 2.6)
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(declare-fun x8 () FF0)
(declare-fun x9 () FF0)
(declare-fun x10 () FF0)
(declare-fun x11 () FF0)
(declare-fun x12 () FF0)
(declare-fun x13 () FF0)
(declare-fun x14 () FF0)
(declare-fun x15 () FF0)
(assert
  (let ((let0 (ff.mul (as ff2 FF0) x7 x7 x11)))
  (let ((let1 (= let0 (as ff0 FF0))))
  (let ((let2 (ff.mul (as ff2 FF0) x5 x8 x11)))
  (let ((let3 (ff.mul (as ff2 FF0) x2 x9 x11)))
  (let ((let4 (ff.mul x3 x13)))
  (let ((let5 (as ff1 FF0)))
  (let ((let6 (ff.add let2 let3 let4 let5)))
  (let ((let7 (= let6 (as ff0 FF0))))
  (let ((let8 (ff.mul x1 x9 x9)))
  (let ((let9 (ff.mul x2 x4 x10)))
  (let ((let10 (ff.mul (as ff2 FF0) x10 x10 x10)))
  (let ((let11 (ff.mul (as ff2 FF0) x0 x10 x13)))
  (let ((let12 (ff.mul x7 x7 x15)))
  (let ((let13 (as ff2 FF0)))
  (let ((let14 (ff.add let8 let9 let10 let11 let12 let13)))
  (let ((let15 (= let14 (as ff0 FF0))))
  (let ((let16 (ff.mul x2 x10)))
  (let ((let17 (ff.mul (as ff2 FF0) x2 x12)))
  (let ((let18 (ff.add let16 let17)))
  (let ((let19 (= let18 (as ff0 FF0))))
  (let ((let20 (ff.mul (as ff2 FF0) x3 x4 x13)))
  (let ((let21 (ff.mul (as ff2 FF0) x9 x14 x15)))
  (let ((let22 (ff.mul x1 x12)))
  (let ((let23 (ff.add let20 let21 let22)))
  (let ((let24 (= let23 (as ff0 FF0))))
  (let ((let25 (ff.mul x0 x4 x8)))
  (let ((let26 (ff.mul x2 x3 x12)))
  (let ((let27 (ff.mul x4 x8 x15)))
  (let ((let28 (ff.add let25 let26 let27)))
  (let ((let29 (= let28 (as ff0 FF0))))
  (let ((let30 (ff.mul (as ff2 FF0) x2 x5 x7)))
  (let ((let31 (ff.mul x3 x9 x12)))
  (let ((let32 (ff.mul x13 x14 x15)))
  (let ((let33 x4))
  (let ((let34 (ff.add let30 let31 let32 let33)))
  (let ((let35 (= let34 (as ff0 FF0))))
  (let ((let36 (ff.mul x10 x10 x13)))
  (let ((let37 (ff.mul (as ff2 FF0) x9 x13 x15)))
  (let ((let38 (ff.add let36 let37)))
  (let ((let39 (= let38 (as ff0 FF0))))
  (let ((let40 (ff.mul (as ff2 FF0) x3 x6 x7)))
  (let ((let41 (ff.mul x4 x6 x12)))
  (let ((let42 (ff.add let40 let41)))
  (let ((let43 (= let42 (as ff0 FF0))))
  (let ((let44 (ff.mul x3 x8 x11)))
  (let ((let45 (ff.mul x3 x4 x12)))
  (let ((let46 (ff.mul (as ff2 FF0) x4 x9 x12)))
  (let ((let47 (ff.mul (as ff2 FF0) x10 x12 x14)))
  (let ((let48 (ff.add let44 let45 let46 let47)))
  (let ((let49 (= let48 (as ff0 FF0))))
  (let ((let50 (ff.mul (as ff2 FF0) x6 x10 x10)))
  (let ((let51 (ff.mul (as ff2 FF0) x2 x7 x15)))
  (let ((let52 (ff.add let50 let51)))
  (let ((let53 (= let52 (as ff0 FF0))))
  (let ((let54 (ff.mul (as ff2 FF0) x0 x2 x9)))
  (let ((let55 (ff.mul x5 x5 x12)))
  (let ((let56 (ff.add let54 let55)))
  (let ((let57 (= let56 (as ff0 FF0))))
  (let ((let58 (ff.mul (as ff2 FF0) x0 x6 x6)))
  (let ((let59 (ff.mul x1 x1 x15)))
  (let ((let60 (as ff2 FF0)))
  (let ((let61 (ff.add let58 let59 let60)))
  (let ((let62 (= let61 (as ff0 FF0))))
  (let ((let63 (ff.mul x0 x0 x1)))
  (let ((let64 (ff.mul x3 x4 x8)))
  (let ((let65 (ff.mul (as ff2 FF0) x9 x15 x15)))
  (let ((let66 (ff.mul x6 x13)))
  (let ((let67 (as ff1 FF0)))
  (let ((let68 (ff.add let63 let64 let65 let66 let67)))
  (let ((let69 (= let68 (as ff0 FF0))))
  (let ((let70 (ff.mul x1 x6 x10)))
  (let ((let71 (ff.mul x5 x13 x13)))
  (let ((let72 (ff.mul x11 x13 x13)))
  (let ((let73 (ff.add let70 let71 let72)))
  (let ((let74 (= let73 (as ff0 FF0))))
  (let ((let75 (ff.mul x3 x3 x4)))
  (let ((let76 (ff.mul (as ff2 FF0) x0 x3 x12)))
  (let ((let77 (ff.mul (as ff2 FF0) x0 x10 x12)))
  (let ((let78 (ff.mul (as ff2 FF0) x1 x9 x13)))
  (let ((let79 (ff.add let75 let76 let77 let78)))
  (let ((let80 (= let79 (as ff0 FF0))))
  (let ((let81 (and let1 let7 let15 let19 let24 let29 let35 let39 let43 let49 let53 let57 let62 let69 let74 let80)))
  let81
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
