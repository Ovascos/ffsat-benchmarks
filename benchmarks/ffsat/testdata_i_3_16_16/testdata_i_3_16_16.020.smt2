
(set-info :smt-lib-version 2.6)
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(declare-fun x8 () FF0)
(declare-fun x9 () FF0)
(declare-fun x10 () FF0)
(declare-fun x11 () FF0)
(declare-fun x12 () FF0)
(declare-fun x13 () FF0)
(declare-fun x14 () FF0)
(declare-fun x15 () FF0)
(assert
  (let ((let0 (ff.mul x3 x4 x6)))
  (let ((let1 (ff.mul x0 x8 x15)))
  (let ((let2 (ff.mul x7 x10 x15)))
  (let ((let3 (ff.mul (as ff2 FF0) x3 x11)))
  (let ((let4 (ff.add let0 let1 let2 let3)))
  (let ((let5 (= let4 (as ff0 FF0))))
  (let ((let6 (ff.mul x8 x9 x14)))
  (let ((let7 (ff.mul x2 x14 x14)))
  (let ((let8 (ff.mul x0 x12)))
  (let ((let9 (ff.mul (as ff2 FF0) x6 x15)))
  (let ((let10 (ff.add let6 let7 let8 let9)))
  (let ((let11 (= let10 (as ff0 FF0))))
  (let ((let12 (ff.mul (as ff2 FF0) x1 x6 x6)))
  (let ((let13 (ff.mul x0 x6 x13)))
  (let ((let14 (ff.add let12 let13)))
  (let ((let15 (= let14 (as ff0 FF0))))
  (let ((let16 (ff.mul x1 x3 x3)))
  (let ((let17 (ff.mul (as ff2 FF0) x0 x0 x15)))
  (let ((let18 (ff.mul (as ff2 FF0) x2 x5 x15)))
  (let ((let19 (ff.add let16 let17 let18)))
  (let ((let20 (= let19 (as ff0 FF0))))
  (let ((let21 (ff.mul x3 x7 x7)))
  (let ((let22 (ff.mul x1 x6 x10)))
  (let ((let23 (ff.add let21 let22)))
  (let ((let24 (= let23 (as ff0 FF0))))
  (let ((let25 (ff.mul x3 x7 x14)))
  (let ((let26 (ff.mul (as ff2 FF0) x3 x6 x15)))
  (let ((let27 (ff.mul (as ff2 FF0) x1 x15)))
  (let ((let28 (ff.add let25 let26 let27)))
  (let ((let29 (= let28 (as ff0 FF0))))
  (let ((let30 (ff.mul (as ff2 FF0) x3 x7 x7)))
  (let ((let31 (ff.mul x5 x9 x10)))
  (let ((let32 (ff.mul (as ff2 FF0) x1 x9 x11)))
  (let ((let33 (ff.mul (as ff2 FF0) x2 x11 x14)))
  (let ((let34 (as ff1 FF0)))
  (let ((let35 (ff.add let30 let31 let32 let33 let34)))
  (let ((let36 (= let35 (as ff0 FF0))))
  (let ((let37 (ff.mul x2 x2 x10)))
  (let ((let38 (ff.mul x0 x7 x10)))
  (let ((let39 (ff.mul x2 x6 x11)))
  (let ((let40 (ff.mul (as ff2 FF0) x10 x12)))
  (let ((let41 (ff.mul x6 x15)))
  (let ((let42 (ff.add let37 let38 let39 let40 let41)))
  (let ((let43 (= let42 (as ff0 FF0))))
  (let ((let44 (ff.mul (as ff2 FF0) x2 x7)))
  (let ((let45 (ff.mul (as ff2 FF0) x4 x10)))
  (let ((let46 (ff.mul (as ff2 FF0) x0 x12)))
  (let ((let47 (ff.add let44 let45 let46)))
  (let ((let48 (= let47 (as ff0 FF0))))
  (let ((let49 (ff.mul x4 x5 x9)))
  (let ((let50 (ff.mul x8 x9 x10)))
  (let ((let51 (ff.mul (as ff2 FF0) x4 x6 x14)))
  (let ((let52 (ff.mul (as ff2 FF0) x8 x13 x14)))
  (let ((let53 (ff.add let49 let50 let51 let52)))
  (let ((let54 (= let53 (as ff0 FF0))))
  (let ((let55 (ff.mul x0 x6 x8)))
  (let ((let56 (ff.mul x0 x1 x9)))
  (let ((let57 (ff.mul x5 x7 x13)))
  (let ((let58 (ff.mul x5 x14 x15)))
  (let ((let59 (ff.add let55 let56 let57 let58)))
  (let ((let60 (= let59 (as ff0 FF0))))
  (let ((let61 (ff.mul (as ff2 FF0) x5 x7 x9)))
  (let ((let62 (ff.mul x2 x8 x15)))
  (let ((let63 (ff.add let61 let62)))
  (let ((let64 (= let63 (as ff0 FF0))))
  (let ((let65 (ff.mul x4 x6 x12)))
  (let ((let66 (ff.mul (as ff2 FF0) x2 x13 x14)))
  (let ((let67 (ff.mul (as ff2 FF0) x10 x13 x14)))
  (let ((let68 (ff.mul x3 x12 x15)))
  (let ((let69 (ff.add let65 let66 let67 let68)))
  (let ((let70 (= let69 (as ff0 FF0))))
  (let ((let71 (ff.mul x4 x4 x12)))
  (let ((let72 (ff.mul (as ff2 FF0) x11 x13 x13)))
  (let ((let73 (ff.mul x2 x11)))
  (let ((let74 (ff.mul (as ff2 FF0) x8 x11)))
  (let ((let75 (ff.add let71 let72 let73 let74)))
  (let ((let76 (= let75 (as ff0 FF0))))
  (let ((let77 (ff.mul x8 x11 x13)))
  (let ((let78 (ff.mul (as ff2 FF0) x3 x12 x15)))
  (let ((let79 (ff.mul x11 x11)))
  (let ((let80 (ff.add let77 let78 let79)))
  (let ((let81 (= let80 (as ff0 FF0))))
  (let ((let82 (ff.mul (as ff2 FF0) x2 x5 x8)))
  (let ((let83 (ff.mul x8 x10 x14)))
  (let ((let84 (ff.mul x4 x8 x15)))
  (let ((let85 (as ff2 FF0)))
  (let ((let86 (ff.add let82 let83 let84 let85)))
  (let ((let87 (= let86 (as ff0 FF0))))
  (let ((let88 (and let5 let11 let15 let20 let24 let29 let36 let43 let48 let54 let60 let64 let70 let76 let81 let87)))
  let88
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
