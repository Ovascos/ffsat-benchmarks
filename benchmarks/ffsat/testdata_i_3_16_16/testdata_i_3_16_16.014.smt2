
(set-info :smt-lib-version 2.6)
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(declare-fun x8 () FF0)
(declare-fun x9 () FF0)
(declare-fun x10 () FF0)
(declare-fun x11 () FF0)
(declare-fun x12 () FF0)
(declare-fun x13 () FF0)
(declare-fun x14 () FF0)
(declare-fun x15 () FF0)
(assert
  (let ((let0 (ff.mul x6 x14 x14)))
  (let ((let1 (ff.mul (as ff2 FF0) x6 x9)))
  (let ((let2 x1))
  (let ((let3 (ff.add let0 let1 let2)))
  (let ((let4 (= let3 (as ff0 FF0))))
  (let ((let5 (ff.mul (as ff2 FF0) x0 x1 x5)))
  (let ((let6 (ff.mul x2 x8 x12)))
  (let ((let7 (ff.mul (as ff2 FF0) x7 x10 x15)))
  (let ((let8 (ff.mul x5 x11)))
  (let ((let9 (ff.mul (as ff2 FF0) x13)))
  (let ((let10 (ff.add let5 let6 let7 let8 let9)))
  (let ((let11 (= let10 (as ff0 FF0))))
  (let ((let12 (ff.mul (as ff2 FF0) x5 x5 x5)))
  (let ((let13 (ff.mul x9 x12 x12)))
  (let ((let14 (ff.mul (as ff2 FF0) x4 x7 x14)))
  (let ((let15 (ff.mul x10 x12 x14)))
  (let ((let16 (ff.add let12 let13 let14 let15)))
  (let ((let17 (= let16 (as ff0 FF0))))
  (let ((let18 (ff.mul x7 x11 x12)))
  (let ((let19 (ff.mul x1 x5)))
  (let ((let20 (ff.mul (as ff2 FF0) x2 x8)))
  (let ((let21 (ff.add let18 let19 let20)))
  (let ((let22 (= let21 (as ff0 FF0))))
  (let ((let23 (ff.mul (as ff2 FF0) x0 x2 x5)))
  (let ((let24 (ff.mul (as ff2 FF0) x0 x1 x13)))
  (let ((let25 (ff.mul (as ff2 FF0) x0 x1)))
  (let ((let26 (ff.mul (as ff2 FF0) x2 x12)))
  (let ((let27 (ff.add let23 let24 let25 let26)))
  (let ((let28 (= let27 (as ff0 FF0))))
  (let ((let29 (ff.mul x8 x8 x13)))
  (let ((let30 (ff.mul x4 x12 x15)))
  (let ((let31 (ff.mul (as ff2 FF0) x1 x13 x15)))
  (let ((let32 (ff.mul x3 x9)))
  (let ((let33 (ff.add let29 let30 let31 let32)))
  (let ((let34 (= let33 (as ff0 FF0))))
  (let ((let35 (ff.mul (as ff2 FF0) x1 x2 x7)))
  (let ((let36 (ff.mul x3 x6 x11)))
  (let ((let37 (ff.mul (as ff2 FF0) x1 x9 x15)))
  (let ((let38 (ff.add let35 let36 let37)))
  (let ((let39 (= let38 (as ff0 FF0))))
  (let ((let40 (ff.mul x0 x4 x14)))
  (let ((let41 (as ff1 FF0)))
  (let ((let42 (ff.add let40 let41)))
  (let ((let43 (= let42 (as ff0 FF0))))
  (let ((let44 (ff.mul (as ff2 FF0) x7 x9 x12)))
  (let ((let45 (ff.mul (as ff2 FF0) x0 x0)))
  (let ((let46 (ff.mul x8 x12)))
  (let ((let47 (ff.add let44 let45 let46)))
  (let ((let48 (= let47 (as ff0 FF0))))
  (let ((let49 (ff.mul (as ff2 FF0) x2 x5 x9)))
  (let ((let50 (ff.mul (as ff2 FF0) x5 x10 x14)))
  (let ((let51 (ff.mul x5 x15 x15)))
  (let ((let52 (ff.mul (as ff2 FF0) x0 x5)))
  (let ((let53 (ff.add let49 let50 let51 let52)))
  (let ((let54 (= let53 (as ff0 FF0))))
  (let ((let55 (ff.mul x3 x3 x3)))
  (let ((let56 (ff.mul (as ff2 FF0) x2 x3 x10)))
  (let ((let57 (ff.mul x12 x12 x15)))
  (let ((let58 (ff.add let55 let56 let57)))
  (let ((let59 (= let58 (as ff0 FF0))))
  (let ((let60 (ff.mul x2 x4 x6)))
  (let ((let61 (ff.mul (as ff2 FF0) x12 x12 x12)))
  (let ((let62 (ff.mul x2 x5 x13)))
  (let ((let63 (ff.mul x2 x6 x13)))
  (let ((let64 (ff.add let60 let61 let62 let63)))
  (let ((let65 (= let64 (as ff0 FF0))))
  (let ((let66 (ff.mul x6 x7 x7)))
  (let ((let67 (ff.mul x5 x8 x11)))
  (let ((let68 (ff.mul x3 x11 x11)))
  (let ((let69 (ff.add let66 let67 let68)))
  (let ((let70 (= let69 (as ff0 FF0))))
  (let ((let71 (ff.mul (as ff2 FF0) x3 x3 x8)))
  (let ((let72 (ff.mul (as ff2 FF0) x5 x11 x13)))
  (let ((let73 (ff.mul (as ff2 FF0) x3 x10 x14)))
  (let ((let74 (ff.add let71 let72 let73)))
  (let ((let75 (= let74 (as ff0 FF0))))
  (let ((let76 (ff.mul (as ff2 FF0) x0 x7 x11)))
  (let ((let77 (ff.mul x6 x6 x13)))
  (let ((let78 (ff.mul x0 x4 x14)))
  (let ((let79 (ff.mul x6 x15 x15)))
  (let ((let80 (ff.add let76 let77 let78 let79)))
  (let ((let81 (= let80 (as ff0 FF0))))
  (let ((let82 (ff.mul x1 x1 x2)))
  (let ((let83 (ff.mul x1 x4 x10)))
  (let ((let84 (ff.mul (as ff2 FF0) x8 x12 x13)))
  (let ((let85 (ff.mul (as ff2 FF0) x9 x13 x13)))
  (let ((let86 (ff.add let82 let83 let84 let85)))
  (let ((let87 (= let86 (as ff0 FF0))))
  (let ((let88 (and let4 let11 let17 let22 let28 let34 let39 let43 let48 let54 let59 let65 let70 let75 let81 let87)))
  let88
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
