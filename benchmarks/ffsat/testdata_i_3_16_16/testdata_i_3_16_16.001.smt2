
(set-info :smt-lib-version 2.6)
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(declare-fun x8 () FF0)
(declare-fun x9 () FF0)
(declare-fun x10 () FF0)
(declare-fun x11 () FF0)
(declare-fun x12 () FF0)
(declare-fun x13 () FF0)
(declare-fun x14 () FF0)
(declare-fun x15 () FF0)
(assert
  (let ((let0 (ff.mul x10 x10 x13)))
  (let ((let1 (ff.mul (as ff2 FF0) x3 x12 x14)))
  (let ((let2 (ff.mul x3 x11 x15)))
  (let ((let3 (ff.mul x3 x12 x15)))
  (let ((let4 (ff.add let0 let1 let2 let3)))
  (let ((let5 (= let4 (as ff0 FF0))))
  (let ((let6 (ff.mul (as ff2 FF0) x2 x3 x10)))
  (let ((let7 (ff.mul (as ff2 FF0) x4 x8)))
  (let ((let8 (ff.add let6 let7)))
  (let ((let9 (= let8 (as ff0 FF0))))
  (let ((let10 (ff.mul (as ff2 FF0) x1 x8 x9)))
  (let ((let11 (ff.mul x12 x13 x14)))
  (let ((let12 (ff.mul (as ff2 FF0) x8 x11 x15)))
  (let ((let13 (ff.add let10 let11 let12)))
  (let ((let14 (= let13 (as ff0 FF0))))
  (let ((let15 (ff.mul x0 x3 x3)))
  (let ((let16 (ff.mul (as ff2 FF0) x3 x3 x4)))
  (let ((let17 (ff.mul x4 x7 x7)))
  (let ((let18 (ff.mul x3 x7 x8)))
  (let ((let19 (ff.add let15 let16 let17 let18)))
  (let ((let20 (= let19 (as ff0 FF0))))
  (let ((let21 (ff.mul x5 x5 x5)))
  (let ((let22 (ff.mul (as ff2 FF0) x3 x8 x11)))
  (let ((let23 (ff.mul (as ff2 FF0) x2 x10 x14)))
  (let ((let24 (ff.add let21 let22 let23)))
  (let ((let25 (= let24 (as ff0 FF0))))
  (let ((let26 (ff.mul x6 x9 x13)))
  (let ((let27 (ff.mul x7 x9 x13)))
  (let ((let28 (ff.mul x0 x12 x13)))
  (let ((let29 (ff.mul x2 x5 x15)))
  (let ((let30 (ff.add let26 let27 let28 let29)))
  (let ((let31 (= let30 (as ff0 FF0))))
  (let ((let32 (ff.mul x0 x4 x13)))
  (let ((let33 (ff.mul (as ff2 FF0) x9 x14 x15)))
  (let ((let34 (ff.add let32 let33)))
  (let ((let35 (= let34 (as ff0 FF0))))
  (let ((let36 (ff.mul (as ff2 FF0) x0 x3 x10)))
  (let ((let37 (ff.mul x9 x14 x15)))
  (let ((let38 (ff.add let36 let37)))
  (let ((let39 (= let38 (as ff0 FF0))))
  (let ((let40 (ff.mul x4 x6 x8)))
  (let ((let41 (= let40 (as ff0 FF0))))
  (let ((let42 (ff.mul (as ff2 FF0) x2 x4 x11)))
  (let ((let43 (ff.mul x5 x9 x13)))
  (let ((let44 (ff.mul x8 x10 x13)))
  (let ((let45 (ff.mul x2 x13 x15)))
  (let ((let46 (ff.add let42 let43 let44 let45)))
  (let ((let47 (= let46 (as ff0 FF0))))
  (let ((let48 (ff.mul x7 x7 x9)))
  (let ((let49 (ff.mul x1 x5 x11)))
  (let ((let50 (ff.mul (as ff2 FF0) x0 x10 x11)))
  (let ((let51 (ff.mul x0 x2 x15)))
  (let ((let52 (ff.mul (as ff2 FF0) x1)))
  (let ((let53 (ff.add let48 let49 let50 let51 let52)))
  (let ((let54 (= let53 (as ff0 FF0))))
  (let ((let55 (ff.mul (as ff2 FF0) x1 x4 x9)))
  (let ((let56 (ff.mul x7 x14 x14)))
  (let ((let57 (ff.mul x11 x11)))
  (let ((let58 (ff.add let55 let56 let57)))
  (let ((let59 (= let58 (as ff0 FF0))))
  (let ((let60 (ff.mul (as ff2 FF0) x1 x4 x10)))
  (let ((let61 (ff.mul (as ff2 FF0) x7 x15 x15)))
  (let ((let62 (ff.mul (as ff2 FF0) x15 x15 x15)))
  (let ((let63 (ff.mul (as ff2 FF0) x4 x15)))
  (let ((let64 (ff.add let60 let61 let62 let63)))
  (let ((let65 (= let64 (as ff0 FF0))))
  (let ((let66 (ff.mul (as ff2 FF0) x8 x8 x13)))
  (let ((let67 (ff.mul (as ff2 FF0) x1 x10 x13)))
  (let ((let68 (ff.mul x0 x10 x15)))
  (let ((let69 (ff.mul x11 x14)))
  (let ((let70 (ff.add let66 let67 let68 let69)))
  (let ((let71 (= let70 (as ff0 FF0))))
  (let ((let72 (ff.mul (as ff2 FF0) x1 x8 x10)))
  (let ((let73 (ff.mul (as ff2 FF0) x7 x11 x11)))
  (let ((let74 (ff.add let72 let73)))
  (let ((let75 (= let74 (as ff0 FF0))))
  (let ((let76 (ff.mul x0 x11 x11)))
  (let ((let77 (ff.mul x6 x6 x14)))
  (let ((let78 (ff.mul (as ff2 FF0) x1 x13 x15)))
  (let ((let79 (ff.add let76 let77 let78)))
  (let ((let80 (= let79 (as ff0 FF0))))
  (let ((let81 (and let5 let9 let14 let20 let25 let31 let35 let39 let41 let47 let54 let59 let65 let71 let75 let80)))
  let81
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
