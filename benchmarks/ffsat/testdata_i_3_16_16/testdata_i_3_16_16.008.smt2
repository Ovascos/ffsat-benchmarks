
(set-info :smt-lib-version 2.6)
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(declare-fun x8 () FF0)
(declare-fun x9 () FF0)
(declare-fun x10 () FF0)
(declare-fun x11 () FF0)
(declare-fun x12 () FF0)
(declare-fun x13 () FF0)
(declare-fun x14 () FF0)
(declare-fun x15 () FF0)
(assert
  (let ((let0 (ff.mul x5 x7 x8)))
  (let ((let1 (ff.mul (as ff2 FF0) x8 x9 x10)))
  (let ((let2 (ff.mul x2 x10 x10)))
  (let ((let3 (ff.mul (as ff2 FF0) x4 x5 x12)))
  (let ((let4 (ff.add let0 let1 let2 let3)))
  (let ((let5 (= let4 (as ff0 FF0))))
  (let ((let6 (ff.mul x2 x4 x6)))
  (let ((let7 (ff.mul x9 x10 x13)))
  (let ((let8 (ff.mul (as ff2 FF0) x10 x11 x13)))
  (let ((let9 (ff.mul x8 x13 x14)))
  (let ((let10 (ff.mul x3 x11 x15)))
  (let ((let11 (ff.add let6 let7 let8 let9 let10)))
  (let ((let12 (= let11 (as ff0 FF0))))
  (let ((let13 (ff.mul (as ff2 FF0) x2 x2 x3)))
  (let ((let14 (ff.mul (as ff2 FF0) x2 x3 x3)))
  (let ((let15 (ff.mul x0 x15)))
  (let ((let16 (ff.add let13 let14 let15)))
  (let ((let17 (= let16 (as ff0 FF0))))
  (let ((let18 (ff.mul x0 x1 x10)))
  (let ((let19 (ff.mul (as ff2 FF0) x3 x11 x13)))
  (let ((let20 (ff.add let18 let19)))
  (let ((let21 (= let20 (as ff0 FF0))))
  (let ((let22 (ff.mul (as ff2 FF0) x6 x6 x6)))
  (let ((let23 (ff.mul (as ff2 FF0) x1 x11)))
  (let ((let24 (ff.mul (as ff2 FF0) x1 x15)))
  (let ((let25 (ff.add let22 let23 let24)))
  (let ((let26 (= let25 (as ff0 FF0))))
  (let ((let27 (ff.mul (as ff2 FF0) x11 x14 x14)))
  (let ((let28 (ff.mul x3 x13)))
  (let ((let29 (ff.mul (as ff2 FF0) x5 x15)))
  (let ((let30 (as ff1 FF0)))
  (let ((let31 (ff.add let27 let28 let29 let30)))
  (let ((let32 (= let31 (as ff0 FF0))))
  (let ((let33 (ff.mul (as ff2 FF0) x2 x2 x15)))
  (let ((let34 (ff.mul (as ff2 FF0) x1)))
  (let ((let35 (ff.add let33 let34)))
  (let ((let36 (= let35 (as ff0 FF0))))
  (let ((let37 (ff.mul (as ff2 FF0) x1 x6 x6)))
  (let ((let38 (= let37 (as ff0 FF0))))
  (let ((let39 (ff.mul (as ff2 FF0) x0 x3 x11)))
  (let ((let40 (ff.mul (as ff2 FF0) x4 x14 x15)))
  (let ((let41 (ff.mul (as ff2 FF0) x8 x15)))
  (let ((let42 (ff.mul (as ff2 FF0) x12 x15)))
  (let ((let43 (ff.add let39 let40 let41 let42)))
  (let ((let44 (= let43 (as ff0 FF0))))
  (let ((let45 (ff.mul (as ff2 FF0) x4 x4 x10)))
  (let ((let46 (ff.mul (as ff2 FF0) x1 x3)))
  (let ((let47 (as ff1 FF0)))
  (let ((let48 (ff.add let45 let46 let47)))
  (let ((let49 (= let48 (as ff0 FF0))))
  (let ((let50 (ff.mul x3 x4 x11)))
  (let ((let51 (ff.mul (as ff2 FF0) x11 x14 x14)))
  (let ((let52 (as ff1 FF0)))
  (let ((let53 (ff.add let50 let51 let52)))
  (let ((let54 (= let53 (as ff0 FF0))))
  (let ((let55 (ff.mul x2 x8 x10)))
  (let ((let56 (ff.mul x4 x6 x14)))
  (let ((let57 (ff.mul x13 x14 x14)))
  (let ((let58 (ff.mul x0 x9 x15)))
  (let ((let59 (ff.add let55 let56 let57 let58)))
  (let ((let60 (= let59 (as ff0 FF0))))
  (let ((let61 (ff.mul x1 x4 x5)))
  (let ((let62 (ff.mul x3 x4 x14)))
  (let ((let63 (ff.add let61 let62)))
  (let ((let64 (= let63 (as ff0 FF0))))
  (let ((let65 (ff.mul x0 x3 x6)))
  (let ((let66 (ff.mul (as ff2 FF0) x2 x4 x7)))
  (let ((let67 (ff.mul x1 x4 x11)))
  (let ((let68 (ff.mul (as ff2 FF0) x3 x6 x12)))
  (let ((let69 (as ff2 FF0)))
  (let ((let70 (ff.add let65 let66 let67 let68 let69)))
  (let ((let71 (= let70 (as ff0 FF0))))
  (let ((let72 (ff.mul x1 x9 x12)))
  (let ((let73 (ff.mul (as ff2 FF0) x4 x4 x14)))
  (let ((let74 (ff.add let72 let73)))
  (let ((let75 (= let74 (as ff0 FF0))))
  (let ((let76 (ff.mul x2 x5 x9)))
  (let ((let77 (ff.mul (as ff2 FF0) x0 x12 x15)))
  (let ((let78 (ff.add let76 let77)))
  (let ((let79 (= let78 (as ff0 FF0))))
  (let ((let80 (and let5 let12 let17 let21 let26 let32 let36 let38 let44 let49 let54 let60 let64 let71 let75 let79)))
  let80
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
