
(set-info :smt-lib-version 2.6)
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(declare-fun x8 () FF0)
(declare-fun x9 () FF0)
(declare-fun x10 () FF0)
(declare-fun x11 () FF0)
(declare-fun x12 () FF0)
(declare-fun x13 () FF0)
(declare-fun x14 () FF0)
(declare-fun x15 () FF0)
(assert
  (let ((let0 (ff.mul (as ff2 FF0) x4 x8 x10)))
  (let ((let1 (ff.mul (as ff2 FF0) x6 x8 x14)))
  (let ((let2 (ff.mul x5 x13 x15)))
  (let ((let3 (ff.mul (as ff2 FF0) x2)))
  (let ((let4 (ff.add let0 let1 let2 let3)))
  (let ((let5 (= let4 (as ff0 FF0))))
  (let ((let6 (ff.mul x0 x3 x12)))
  (let ((let7 (ff.mul (as ff2 FF0) x5 x9 x12)))
  (let ((let8 (ff.add let6 let7)))
  (let ((let9 (= let8 (as ff0 FF0))))
  (let ((let10 (ff.mul (as ff2 FF0) x0 x6 x7)))
  (let ((let11 (ff.mul x2 x7)))
  (let ((let12 (ff.mul x10 x14)))
  (let ((let13 (ff.add let10 let11 let12)))
  (let ((let14 (= let13 (as ff0 FF0))))
  (let ((let15 (ff.mul (as ff2 FF0) x2 x3 x14)))
  (let ((let16 (ff.mul (as ff2 FF0) x0 x0 x15)))
  (let ((let17 (ff.add let15 let16)))
  (let ((let18 (= let17 (as ff0 FF0))))
  (let ((let19 (ff.mul (as ff2 FF0) x10 x11 x11)))
  (let ((let20 (ff.mul (as ff2 FF0) x8 x9 x15)))
  (let ((let21 (ff.mul x15 x15)))
  (let ((let22 (ff.add let19 let20 let21)))
  (let ((let23 (= let22 (as ff0 FF0))))
  (let ((let24 (ff.mul (as ff2 FF0) x8 x9 x14)))
  (let ((let25 (= let24 (as ff0 FF0))))
  (let ((let26 (ff.mul (as ff2 FF0) x3 x5 x10)))
  (let ((let27 (ff.mul (as ff2 FF0) x0 x0 x15)))
  (let ((let28 (ff.mul (as ff2 FF0) x2 x9 x15)))
  (let ((let29 (as ff1 FF0)))
  (let ((let30 (ff.add let26 let27 let28 let29)))
  (let ((let31 (= let30 (as ff0 FF0))))
  (let ((let32 (ff.mul x0 x6 x9)))
  (let ((let33 (ff.mul x3 x15 x15)))
  (let ((let34 (ff.mul x12 x14)))
  (let ((let35 (ff.add let32 let33 let34)))
  (let ((let36 (= let35 (as ff0 FF0))))
  (let ((let37 (ff.mul x6 x6 x8)))
  (let ((let38 (ff.mul (as ff2 FF0) x2 x9 x11)))
  (let ((let39 (ff.mul x12 x14 x14)))
  (let ((let40 (ff.add let37 let38 let39)))
  (let ((let41 (= let40 (as ff0 FF0))))
  (let ((let42 (ff.mul (as ff2 FF0) x6 x11 x12)))
  (let ((let43 (ff.mul x1 x9 x13)))
  (let ((let44 (ff.mul x5 x5 x14)))
  (let ((let45 (ff.add let42 let43 let44)))
  (let ((let46 (= let45 (as ff0 FF0))))
  (let ((let47 (ff.mul (as ff2 FF0) x2 x3 x6)))
  (let ((let48 (ff.mul x1 x2 x8)))
  (let ((let49 (ff.mul x5 x8 x10)))
  (let ((let50 (ff.mul (as ff2 FF0) x3 x3 x13)))
  (let ((let51 (ff.mul (as ff2 FF0) x2 x10)))
  (let ((let52 (ff.add let47 let48 let49 let50 let51)))
  (let ((let53 (= let52 (as ff0 FF0))))
  (let ((let54 (ff.mul (as ff2 FF0) x0 x5 x8)))
  (let ((let55 (ff.mul (as ff2 FF0) x9 x9 x14)))
  (let ((let56 (ff.mul (as ff2 FF0) x1 x14 x15)))
  (let ((let57 (ff.mul (as ff2 FF0) x0 x5)))
  (let ((let58 (ff.add let54 let55 let56 let57)))
  (let ((let59 (= let58 (as ff0 FF0))))
  (let ((let60 (ff.mul (as ff2 FF0) x2 x2 x4)))
  (let ((let61 (ff.mul x0 x5 x12)))
  (let ((let62 (ff.mul (as ff2 FF0) x2 x8)))
  (let ((let63 (ff.mul (as ff2 FF0) x8 x15)))
  (let ((let64 (as ff1 FF0)))
  (let ((let65 (ff.add let60 let61 let62 let63 let64)))
  (let ((let66 (= let65 (as ff0 FF0))))
  (let ((let67 (ff.mul x1 x1 x8)))
  (let ((let68 (ff.mul (as ff2 FF0) x0 x6 x12)))
  (let ((let69 (ff.mul x3 x14 x15)))
  (let ((let70 (ff.mul (as ff2 FF0) x14 x14)))
  (let ((let71 (as ff1 FF0)))
  (let ((let72 (ff.add let67 let68 let69 let70 let71)))
  (let ((let73 (= let72 (as ff0 FF0))))
  (let ((let74 (ff.mul x8 x10 x11)))
  (let ((let75 (ff.mul (as ff2 FF0) x7 x14 x14)))
  (let ((let76 (ff.mul (as ff2 FF0) x12 x15 x15)))
  (let ((let77 (ff.add let74 let75 let76)))
  (let ((let78 (= let77 (as ff0 FF0))))
  (let ((let79 (and let5 let9 let14 let18 let23 let25 let31 let36 let41 let46 let53 let59 let66 let73 let78)))
  let79
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
