
(set-info :smt-lib-version 2.6)
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(declare-fun x8 () FF0)
(declare-fun x9 () FF0)
(declare-fun x10 () FF0)
(declare-fun x11 () FF0)
(declare-fun x12 () FF0)
(declare-fun x13 () FF0)
(declare-fun x14 () FF0)
(declare-fun x15 () FF0)
(assert
  (let ((let0 (ff.mul (as ff2 FF0) x1 x1 x6)))
  (let ((let1 (ff.mul (as ff2 FF0) x3 x8 x12)))
  (let ((let2 (ff.mul x6 x12 x12)))
  (let ((let3 (ff.add let0 let1 let2)))
  (let ((let4 (= let3 (as ff0 FF0))))
  (let ((let5 (ff.mul x6 x11 x11)))
  (let ((let6 (ff.mul (as ff2 FF0) x8 x8 x15)))
  (let ((let7 (ff.mul (as ff2 FF0) x3 x4)))
  (let ((let8 (ff.mul x5 x9)))
  (let ((let9 (ff.add let5 let6 let7 let8)))
  (let ((let10 (= let9 (as ff0 FF0))))
  (let ((let11 (ff.mul x7 x7 x7)))
  (let ((let12 (ff.mul x0 x6 x15)))
  (let ((let13 (as ff1 FF0)))
  (let ((let14 (ff.add let11 let12 let13)))
  (let ((let15 (= let14 (as ff0 FF0))))
  (let ((let16 (ff.mul (as ff2 FF0) x3 x4 x4)))
  (let ((let17 (ff.mul x1 x11 x11)))
  (let ((let18 (ff.mul (as ff2 FF0) x10 x10 x12)))
  (let ((let19 (ff.add let16 let17 let18)))
  (let ((let20 (= let19 (as ff0 FF0))))
  (let ((let21 (ff.mul (as ff2 FF0) x1 x3 x8)))
  (let ((let22 (ff.mul x1 x11 x11)))
  (let ((let23 (ff.mul (as ff2 FF0) x1 x14)))
  (let ((let24 (ff.add let21 let22 let23)))
  (let ((let25 (= let24 (as ff0 FF0))))
  (let ((let26 (ff.mul (as ff2 FF0) x8 x8 x15)))
  (let ((let27 (as ff1 FF0)))
  (let ((let28 (ff.add let26 let27)))
  (let ((let29 (= let28 (as ff0 FF0))))
  (let ((let30 (ff.mul (as ff2 FF0) x0 x0 x3)))
  (let ((let31 (ff.mul x9 x13 x15)))
  (let ((let32 (ff.mul x10 x14 x15)))
  (let ((let33 (ff.mul (as ff2 FF0) x8 x11)))
  (let ((let34 (ff.add let30 let31 let32 let33)))
  (let ((let35 (= let34 (as ff0 FF0))))
  (let ((let36 (ff.mul x0 x0 x2)))
  (let ((let37 (= let36 (as ff0 FF0))))
  (let ((let38 (ff.mul x0 x2 x2)))
  (let ((let39 (ff.mul (as ff2 FF0) x2 x3 x12)))
  (let ((let40 (ff.mul x9 x11 x14)))
  (let ((let41 (ff.mul x8 x12 x15)))
  (let ((let42 (ff.add let38 let39 let40 let41)))
  (let ((let43 (= let42 (as ff0 FF0))))
  (let ((let44 (ff.mul x0 x0 x7)))
  (let ((let45 (ff.mul (as ff2 FF0) x5 x7 x9)))
  (let ((let46 (ff.mul x2 x5 x13)))
  (let ((let47 (ff.mul (as ff2 FF0) x2 x14 x15)))
  (let ((let48 (as ff1 FF0)))
  (let ((let49 (ff.add let44 let45 let46 let47 let48)))
  (let ((let50 (= let49 (as ff0 FF0))))
  (let ((let51 (ff.mul (as ff2 FF0) x1 x1 x3)))
  (let ((let52 (ff.mul (as ff2 FF0) x2 x8 x11)))
  (let ((let53 (ff.mul (as ff2 FF0) x0 x11 x13)))
  (let ((let54 (ff.mul x0 x8)))
  (let ((let55 (ff.add let51 let52 let53 let54)))
  (let ((let56 (= let55 (as ff0 FF0))))
  (let ((let57 (ff.mul (as ff2 FF0) x6 x7 x12)))
  (let ((let58 (ff.mul (as ff2 FF0) x8 x12 x12)))
  (let ((let59 (ff.mul x2 x4 x14)))
  (let ((let60 (ff.mul (as ff2 FF0) x2)))
  (let ((let61 (ff.add let57 let58 let59 let60)))
  (let ((let62 (= let61 (as ff0 FF0))))
  (let ((let63 (ff.mul (as ff2 FF0) x5 x7 x10)))
  (let ((let64 (ff.mul x3 x9 x12)))
  (let ((let65 (ff.mul (as ff2 FF0) x6 x10 x13)))
  (let ((let66 (ff.add let63 let64 let65)))
  (let ((let67 (= let66 (as ff0 FF0))))
  (let ((let68 (ff.mul x5 x8 x13)))
  (let ((let69 (ff.mul x0 x10 x14)))
  (let ((let70 (ff.mul (as ff2 FF0) x2 x3)))
  (let ((let71 (ff.mul (as ff2 FF0) x0)))
  (let ((let72 (as ff2 FF0)))
  (let ((let73 (ff.add let68 let69 let70 let71 let72)))
  (let ((let74 (= let73 (as ff0 FF0))))
  (let ((let75 (ff.mul (as ff2 FF0) x0 x9 x13)))
  (let ((let76 (ff.mul x2 x3 x14)))
  (let ((let77 (ff.mul (as ff2 FF0) x3 x3)))
  (let ((let78 (ff.mul (as ff2 FF0) x3 x14)))
  (let ((let79 (ff.add let75 let76 let77 let78)))
  (let ((let80 (= let79 (as ff0 FF0))))
  (let ((let81 (ff.mul (as ff2 FF0) x1 x5 x6)))
  (let ((let82 (ff.mul x3 x8 x9)))
  (let ((let83 (ff.mul (as ff2 FF0) x1 x12 x12)))
  (let ((let84 (ff.add let81 let82 let83)))
  (let ((let85 (= let84 (as ff0 FF0))))
  (let ((let86 (and let4 let10 let15 let20 let25 let29 let35 let37 let43 let50 let56 let62 let67 let74 let80 let85)))
  let86
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
