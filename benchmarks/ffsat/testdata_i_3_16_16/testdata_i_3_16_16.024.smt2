
(set-info :smt-lib-version 2.6)
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(declare-fun x8 () FF0)
(declare-fun x9 () FF0)
(declare-fun x10 () FF0)
(declare-fun x11 () FF0)
(declare-fun x12 () FF0)
(declare-fun x13 () FF0)
(declare-fun x14 () FF0)
(declare-fun x15 () FF0)
(assert
  (let ((let0 (ff.mul (as ff2 FF0) x10 x11 x11)))
  (let ((let1 (ff.mul x2 x10 x12)))
  (let ((let2 (ff.mul (as ff2 FF0) x11 x12)))
  (let ((let3 (ff.mul (as ff2 FF0) x11 x15)))
  (let ((let4 (ff.add let0 let1 let2 let3)))
  (let ((let5 (= let4 (as ff0 FF0))))
  (let ((let6 (ff.mul x0 x5 x9)))
  (let ((let7 (ff.mul x1 x8 x11)))
  (let ((let8 (ff.mul x0 x13 x14)))
  (let ((let9 (ff.mul x5 x13 x15)))
  (let ((let10 (ff.mul x0 x1)))
  (let ((let11 (ff.add let6 let7 let8 let9 let10)))
  (let ((let12 (= let11 (as ff0 FF0))))
  (let ((let13 (ff.mul x8 x8 x8)))
  (let ((let14 (ff.mul (as ff2 FF0) x9 x11 x11)))
  (let ((let15 (ff.mul (as ff2 FF0) x10)))
  (let ((let16 (ff.add let13 let14 let15)))
  (let ((let17 (= let16 (as ff0 FF0))))
  (let ((let18 (ff.mul (as ff2 FF0) x0 x2 x2)))
  (let ((let19 (= let18 (as ff0 FF0))))
  (let ((let20 (ff.mul (as ff2 FF0) x1 x1 x13)))
  (let ((let21 (ff.mul x3 x7 x13)))
  (let ((let22 (ff.add let20 let21)))
  (let ((let23 (= let22 (as ff0 FF0))))
  (let ((let24 (ff.mul (as ff2 FF0) x2 x4 x4)))
  (let ((let25 (ff.mul (as ff2 FF0) x5 x6 x7)))
  (let ((let26 (ff.mul x9 x9 x14)))
  (let ((let27 (ff.mul x1 x10 x15)))
  (let ((let28 (ff.add let24 let25 let26 let27)))
  (let ((let29 (= let28 (as ff0 FF0))))
  (let ((let30 (ff.mul x4 x8 x9)))
  (let ((let31 (ff.mul x8 x9 x12)))
  (let ((let32 (ff.mul (as ff2 FF0) x12 x12 x13)))
  (let ((let33 (ff.add let30 let31 let32)))
  (let ((let34 (= let33 (as ff0 FF0))))
  (let ((let35 (ff.mul (as ff2 FF0) x0 x3 x5)))
  (let ((let36 (ff.mul x0 x0 x9)))
  (let ((let37 (ff.mul (as ff2 FF0) x12 x12 x15)))
  (let ((let38 (ff.mul x2 x15)))
  (let ((let39 (ff.add let35 let36 let37 let38)))
  (let ((let40 (= let39 (as ff0 FF0))))
  (let ((let41 (ff.mul (as ff2 FF0) x1 x3 x7)))
  (let ((let42 (ff.mul (as ff2 FF0) x7 x7 x10)))
  (let ((let43 (ff.mul (as ff2 FF0) x5 x10 x10)))
  (let ((let44 (ff.mul (as ff2 FF0) x8 x8 x15)))
  (let ((let45 (ff.mul (as ff2 FF0) x6)))
  (let ((let46 (ff.add let41 let42 let43 let44 let45)))
  (let ((let47 (= let46 (as ff0 FF0))))
  (let ((let48 (ff.mul (as ff2 FF0) x1 x1 x3)))
  (let ((let49 (ff.mul x0 x3 x12)))
  (let ((let50 (ff.mul (as ff2 FF0) x12 x13 x14)))
  (let ((let51 (ff.mul x4 x4 x15)))
  (let ((let52 (ff.mul x1 x2)))
  (let ((let53 (ff.add let48 let49 let50 let51 let52)))
  (let ((let54 (= let53 (as ff0 FF0))))
  (let ((let55 (ff.mul x1 x7 x12)))
  (let ((let56 (ff.mul x9 x12 x12)))
  (let ((let57 (ff.mul x6 x12 x14)))
  (let ((let58 (ff.mul (as ff2 FF0) x5 x8)))
  (let ((let59 x6))
  (let ((let60 (ff.add let55 let56 let57 let58 let59)))
  (let ((let61 (= let60 (as ff0 FF0))))
  (let ((let62 (ff.mul (as ff2 FF0) x0 x6 x9)))
  (let ((let63 (ff.mul x0 x3 x15)))
  (let ((let64 (ff.mul x0 x7 x15)))
  (let ((let65 (ff.mul x5 x9 x15)))
  (let ((let66 (ff.mul (as ff2 FF0) x11 x14)))
  (let ((let67 (ff.add let62 let63 let64 let65 let66)))
  (let ((let68 (= let67 (as ff0 FF0))))
  (let ((let69 (ff.mul x0 x0 x4)))
  (let ((let70 (ff.mul x3 x4 x4)))
  (let ((let71 (ff.mul x1 x6 x6)))
  (let ((let72 (ff.mul (as ff2 FF0) x2 x2)))
  (let ((let73 (as ff1 FF0)))
  (let ((let74 (ff.add let69 let70 let71 let72 let73)))
  (let ((let75 (= let74 (as ff0 FF0))))
  (let ((let76 (ff.mul x3 x5 x11)))
  (let ((let77 (ff.mul (as ff2 FF0) x2 x5 x12)))
  (let ((let78 (ff.mul x7 x8 x13)))
  (let ((let79 (ff.mul x5 x9 x13)))
  (let ((let80 (ff.mul x10 x12)))
  (let ((let81 (ff.add let76 let77 let78 let79 let80)))
  (let ((let82 (= let81 (as ff0 FF0))))
  (let ((let83 (ff.mul (as ff2 FF0) x2 x2 x2)))
  (let ((let84 (ff.mul (as ff2 FF0) x1 x7 x8)))
  (let ((let85 (ff.mul (as ff2 FF0) x0 x9 x15)))
  (let ((let86 (ff.mul (as ff2 FF0) x1 x10 x15)))
  (let ((let87 (ff.mul x0 x10)))
  (let ((let88 (as ff2 FF0)))
  (let ((let89 (ff.add let83 let84 let85 let86 let87 let88)))
  (let ((let90 (= let89 (as ff0 FF0))))
  (let ((let91 (ff.mul x2 x8 x10)))
  (let ((let92 (ff.mul (as ff2 FF0) x3 x4 x12)))
  (let ((let93 (ff.mul (as ff2 FF0) x3 x5 x14)))
  (let ((let94 (ff.mul x10 x15)))
  (let ((let95 (ff.add let91 let92 let93 let94)))
  (let ((let96 (= let95 (as ff0 FF0))))
  (let ((let97 (and let5 let12 let17 let19 let23 let29 let34 let40 let47 let54 let61 let68 let75 let82 let90 let96)))
  let97
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
