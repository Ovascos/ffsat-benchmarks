
(set-info :smt-lib-version 2.6)
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(declare-fun x8 () FF0)
(declare-fun x9 () FF0)
(declare-fun x10 () FF0)
(declare-fun x11 () FF0)
(declare-fun x12 () FF0)
(declare-fun x13 () FF0)
(declare-fun x14 () FF0)
(declare-fun x15 () FF0)
(assert
  (let ((let0 (ff.mul (as ff2 FF0) x8 x8 x10)))
  (let ((let1 (ff.mul (as ff2 FF0) x5 x6 x12)))
  (let ((let2 (ff.mul (as ff2 FF0) x5 x12 x12)))
  (let ((let3 (ff.mul x8 x12 x12)))
  (let ((let4 (ff.mul x2 x11)))
  (let ((let5 (as ff2 FF0)))
  (let ((let6 (ff.add let0 let1 let2 let3 let4 let5)))
  (let ((let7 (= let6 (as ff0 FF0))))
  (let ((let8 (ff.mul x4 x7 x7)))
  (let ((let9 (ff.mul x1 x5 x8)))
  (let ((let10 (ff.mul x0 x1 x9)))
  (let ((let11 (ff.mul (as ff2 FF0) x0 x6 x14)))
  (let ((let12 (ff.mul (as ff2 FF0) x11 x13)))
  (let ((let13 (ff.add let8 let9 let10 let11 let12)))
  (let ((let14 (= let13 (as ff0 FF0))))
  (let ((let15 (ff.mul (as ff2 FF0) x1 x1 x10)))
  (let ((let16 (ff.mul x2 x6 x11)))
  (let ((let17 (ff.mul (as ff2 FF0) x7 x7)))
  (let ((let18 (ff.mul x9 x10)))
  (let ((let19 (ff.add let15 let16 let17 let18)))
  (let ((let20 (= let19 (as ff0 FF0))))
  (let ((let21 (ff.mul (as ff2 FF0) x3 x6 x9)))
  (let ((let22 (ff.mul x0 x10 x11)))
  (let ((let23 (ff.mul x11 x11 x13)))
  (let ((let24 (ff.mul (as ff2 FF0) x2 x14 x14)))
  (let ((let25 (ff.add let21 let22 let23 let24)))
  (let ((let26 (= let25 (as ff0 FF0))))
  (let ((let27 (ff.mul (as ff2 FF0) x5 x5 x5)))
  (let ((let28 (ff.mul x8 x12 x13)))
  (let ((let29 (as ff1 FF0)))
  (let ((let30 (ff.add let27 let28 let29)))
  (let ((let31 (= let30 (as ff0 FF0))))
  (let ((let32 (ff.mul (as ff2 FF0) x1 x6 x9)))
  (let ((let33 (ff.mul (as ff2 FF0) x1 x3 x12)))
  (let ((let34 (ff.mul (as ff2 FF0) x2 x3 x14)))
  (let ((let35 (ff.add let32 let33 let34)))
  (let ((let36 (= let35 (as ff0 FF0))))
  (let ((let37 (ff.mul (as ff2 FF0) x1 x1 x7)))
  (let ((let38 (ff.mul x0 x3 x7)))
  (let ((let39 (ff.mul x0 x5 x8)))
  (let ((let40 (ff.mul x7 x8 x11)))
  (let ((let41 (ff.mul (as ff2 FF0) x5 x11 x12)))
  (let ((let42 (ff.add let37 let38 let39 let40 let41)))
  (let ((let43 (= let42 (as ff0 FF0))))
  (let ((let44 (ff.mul (as ff2 FF0) x4 x4 x5)))
  (let ((let45 (ff.mul x4 x5 x7)))
  (let ((let46 (ff.mul x1 x4 x9)))
  (let ((let47 (ff.mul (as ff2 FF0) x2 x15 x15)))
  (let ((let48 (ff.add let44 let45 let46 let47)))
  (let ((let49 (= let48 (as ff0 FF0))))
  (let ((let50 (ff.mul (as ff2 FF0) x4 x9 x13)))
  (let ((let51 (ff.mul x7 x15 x15)))
  (let ((let52 (ff.add let50 let51)))
  (let ((let53 (= let52 (as ff0 FF0))))
  (let ((let54 (ff.mul (as ff2 FF0) x1 x2 x9)))
  (let ((let55 (ff.mul x0 x6 x10)))
  (let ((let56 (ff.mul x1 x1 x11)))
  (let ((let57 (ff.mul x3 x8 x13)))
  (let ((let58 (ff.mul (as ff2 FF0) x2 x13)))
  (let ((let59 (ff.add let54 let55 let56 let57 let58)))
  (let ((let60 (= let59 (as ff0 FF0))))
  (let ((let61 (ff.mul (as ff2 FF0) x3 x8 x9)))
  (let ((let62 (ff.mul (as ff2 FF0) x8 x11 x14)))
  (let ((let63 (ff.mul x7 x14 x14)))
  (let ((let64 (ff.mul (as ff2 FF0) x10 x11 x15)))
  (let ((let65 (ff.add let61 let62 let63 let64)))
  (let ((let66 (= let65 (as ff0 FF0))))
  (let ((let67 (ff.mul (as ff2 FF0) x4 x6 x8)))
  (let ((let68 (ff.mul (as ff2 FF0) x1 x1 x12)))
  (let ((let69 (ff.mul (as ff2 FF0) x11 x15)))
  (let ((let70 (ff.add let67 let68 let69)))
  (let ((let71 (= let70 (as ff0 FF0))))
  (let ((let72 (ff.mul x1 x10 x12)))
  (let ((let73 (ff.mul x0 x9)))
  (let ((let74 (ff.add let72 let73)))
  (let ((let75 (= let74 (as ff0 FF0))))
  (let ((let76 (ff.mul x0 x2 x7)))
  (let ((let77 (ff.mul (as ff2 FF0) x8 x8 x12)))
  (let ((let78 (ff.mul x9 x9 x12)))
  (let ((let79 (ff.mul (as ff2 FF0) x0 x6 x14)))
  (let ((let80 (ff.add let76 let77 let78 let79)))
  (let ((let81 (= let80 (as ff0 FF0))))
  (let ((let82 (ff.mul (as ff2 FF0) x7 x7 x8)))
  (let ((let83 (ff.mul x0 x0 x11)))
  (let ((let84 (ff.mul (as ff2 FF0) x0 x11 x12)))
  (let ((let85 (ff.mul (as ff2 FF0) x10 x13 x13)))
  (let ((let86 (as ff2 FF0)))
  (let ((let87 (ff.add let82 let83 let84 let85 let86)))
  (let ((let88 (= let87 (as ff0 FF0))))
  (let ((let89 (ff.mul x0 x0 x2)))
  (let ((let90 (ff.mul x0 x2 x4)))
  (let ((let91 (ff.mul x3 x13 x14)))
  (let ((let92 (ff.mul x10 x14 x14)))
  (let ((let93 (ff.add let89 let90 let91 let92)))
  (let ((let94 (= let93 (as ff0 FF0))))
  (let ((let95 (and let7 let14 let20 let26 let31 let36 let43 let49 let53 let60 let66 let71 let75 let81 let88 let94)))
  let95
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
