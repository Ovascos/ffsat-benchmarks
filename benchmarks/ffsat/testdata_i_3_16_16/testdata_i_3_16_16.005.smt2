
(set-info :smt-lib-version 2.6)
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(declare-fun x8 () FF0)
(declare-fun x9 () FF0)
(declare-fun x10 () FF0)
(declare-fun x11 () FF0)
(declare-fun x12 () FF0)
(declare-fun x13 () FF0)
(declare-fun x14 () FF0)
(declare-fun x15 () FF0)
(assert
  (let ((let0 (ff.mul (as ff2 FF0) x0 x1 x6)))
  (let ((let1 (ff.mul x0 x1 x9)))
  (let ((let2 (ff.mul x0 x8 x12)))
  (let ((let3 (ff.mul (as ff2 FF0) x6 x6)))
  (let ((let4 (as ff2 FF0)))
  (let ((let5 (ff.add let0 let1 let2 let3 let4)))
  (let ((let6 (= let5 (as ff0 FF0))))
  (let ((let7 (ff.mul (as ff2 FF0) x2 x4 x11)))
  (let ((let8 (ff.mul x5 x9 x12)))
  (let ((let9 (ff.mul (as ff2 FF0) x2 x12 x13)))
  (let ((let10 (ff.add let7 let8 let9)))
  (let ((let11 (= let10 (as ff0 FF0))))
  (let ((let12 (ff.mul x9 x11 x15)))
  (let ((let13 (= let12 (as ff0 FF0))))
  (let ((let14 (ff.mul (as ff2 FF0) x3 x8 x8)))
  (let ((let15 (ff.mul (as ff2 FF0) x1 x11 x11)))
  (let ((let16 (ff.mul (as ff2 FF0) x1 x3 x12)))
  (let ((let17 (ff.mul x0 x5 x13)))
  (let ((let18 (ff.mul (as ff2 FF0) x1 x5 x15)))
  (let ((let19 (ff.add let14 let15 let16 let17 let18)))
  (let ((let20 (= let19 (as ff0 FF0))))
  (let ((let21 (ff.mul (as ff2 FF0) x0 x2 x4)))
  (let ((let22 (ff.mul x0 x2 x8)))
  (let ((let23 (ff.mul x0 x5 x10)))
  (let ((let24 (ff.mul (as ff2 FF0) x0 x13 x14)))
  (let ((let25 (ff.mul x7 x14)))
  (let ((let26 (ff.add let21 let22 let23 let24 let25)))
  (let ((let27 (= let26 (as ff0 FF0))))
  (let ((let28 (ff.mul x1 x3 x4)))
  (let ((let29 (ff.mul (as ff2 FF0) x1 x2 x8)))
  (let ((let30 (ff.mul x4 x7 x8)))
  (let ((let31 (ff.mul (as ff2 FF0) x11 x13 x15)))
  (let ((let32 (ff.add let28 let29 let30 let31)))
  (let ((let33 (= let32 (as ff0 FF0))))
  (let ((let34 (ff.mul (as ff2 FF0) x7 x8 x11)))
  (let ((let35 (ff.mul (as ff2 FF0) x1 x11)))
  (let ((let36 (ff.mul x6 x11)))
  (let ((let37 (ff.add let34 let35 let36)))
  (let ((let38 (= let37 (as ff0 FF0))))
  (let ((let39 (ff.mul x5 x8 x11)))
  (let ((let40 (ff.mul (as ff2 FF0) x3 x9 x12)))
  (let ((let41 (ff.mul x6 x7 x15)))
  (let ((let42 (ff.add let39 let40 let41)))
  (let ((let43 (= let42 (as ff0 FF0))))
  (let ((let44 (ff.mul x1 x1 x1)))
  (let ((let45 (ff.mul x3 x6 x7)))
  (let ((let46 (ff.mul x4 x6 x8)))
  (let ((let47 (ff.mul (as ff2 FF0) x6 x7 x11)))
  (let ((let48 (ff.add let44 let45 let46 let47)))
  (let ((let49 (= let48 (as ff0 FF0))))
  (let ((let50 (ff.mul (as ff2 FF0) x5 x8 x11)))
  (let ((let51 (ff.mul x0 x6 x13)))
  (let ((let52 (ff.mul x3 x15)))
  (let ((let53 (ff.add let50 let51 let52)))
  (let ((let54 (= let53 (as ff0 FF0))))
  (let ((let55 (ff.mul (as ff2 FF0) x0 x3 x11)))
  (let ((let56 (ff.mul (as ff2 FF0) x3 x8 x11)))
  (let ((let57 (ff.mul (as ff2 FF0) x0 x6 x13)))
  (let ((let58 (ff.mul x6 x7 x13)))
  (let ((let59 (ff.mul (as ff2 FF0) x2 x12 x15)))
  (let ((let60 (as ff2 FF0)))
  (let ((let61 (ff.add let55 let56 let57 let58 let59 let60)))
  (let ((let62 (= let61 (as ff0 FF0))))
  (let ((let63 (ff.mul x0 x1 x5)))
  (let ((let64 (ff.mul x11 x11)))
  (let ((let65 x9))
  (let ((let66 (ff.add let63 let64 let65)))
  (let ((let67 (= let66 (as ff0 FF0))))
  (let ((let68 (ff.mul x2 x3 x6)))
  (let ((let69 (ff.mul x7 x9 x13)))
  (let ((let70 (ff.mul (as ff2 FF0) x2 x8 x15)))
  (let ((let71 (ff.add let68 let69 let70)))
  (let ((let72 (= let71 (as ff0 FF0))))
  (let ((let73 (ff.mul (as ff2 FF0) x4 x5 x5)))
  (let ((let74 (ff.mul x3 x11 x13)))
  (let ((let75 (ff.mul (as ff2 FF0) x11 x11 x13)))
  (let ((let76 (ff.add let73 let74 let75)))
  (let ((let77 (= let76 (as ff0 FF0))))
  (let ((let78 (ff.mul (as ff2 FF0) x5 x5 x7)))
  (let ((let79 (ff.mul x3 x8 x11)))
  (let ((let80 (ff.mul x0 x5 x12)))
  (let ((let81 (ff.mul (as ff2 FF0) x1 x9)))
  (let ((let82 (ff.add let78 let79 let80 let81)))
  (let ((let83 (= let82 (as ff0 FF0))))
  (let ((let84 (ff.mul (as ff2 FF0) x1 x3 x5)))
  (let ((let85 (ff.mul (as ff2 FF0) x1 x3 x7)))
  (let ((let86 (ff.mul x3 x3 x10)))
  (let ((let87 (ff.mul (as ff2 FF0) x11 x11 x14)))
  (let ((let88 (ff.add let84 let85 let86 let87)))
  (let ((let89 (= let88 (as ff0 FF0))))
  (let ((let90 (and let6 let11 let13 let20 let27 let33 let38 let43 let49 let54 let62 let67 let72 let77 let83 let89)))
  let90
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
