
(set-info :smt-lib-version 2.6)
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(declare-fun x8 () FF0)
(declare-fun x9 () FF0)
(declare-fun x10 () FF0)
(declare-fun x11 () FF0)
(declare-fun x12 () FF0)
(declare-fun x13 () FF0)
(declare-fun x14 () FF0)
(declare-fun x15 () FF0)
(assert
  (let ((let0 (ff.mul (as ff2 FF0) x1 x6 x7)))
  (let ((let1 (ff.mul (as ff2 FF0) x9 x9 x10)))
  (let ((let2 (ff.mul x0 x6 x13)))
  (let ((let3 (ff.mul x4 x5 x14)))
  (let ((let4 (ff.add let0 let1 let2 let3)))
  (let ((let5 (= let4 (as ff0 FF0))))
  (let ((let6 (ff.mul x3 x3 x11)))
  (let ((let7 (ff.mul x7 x8 x14)))
  (let ((let8 (ff.mul (as ff2 FF0) x2 x4)))
  (let ((let9 (ff.mul x8 x11)))
  (let ((let10 (ff.add let6 let7 let8 let9)))
  (let ((let11 (= let10 (as ff0 FF0))))
  (let ((let12 (ff.mul x2 x2 x2)))
  (let ((let13 (ff.mul (as ff2 FF0) x3 x3 x10)))
  (let ((let14 (ff.mul (as ff2 FF0) x0 x15)))
  (let ((let15 (ff.add let12 let13 let14)))
  (let ((let16 (= let15 (as ff0 FF0))))
  (let ((let17 (ff.mul (as ff2 FF0) x0 x7 x8)))
  (let ((let18 (ff.mul (as ff2 FF0) x0 x10 x15)))
  (let ((let19 (ff.add let17 let18)))
  (let ((let20 (= let19 (as ff0 FF0))))
  (let ((let21 (ff.mul (as ff2 FF0) x3 x6 x6)))
  (let ((let22 (ff.mul (as ff2 FF0) x3 x6 x15)))
  (let ((let23 (ff.add let21 let22)))
  (let ((let24 (= let23 (as ff0 FF0))))
  (let ((let25 (ff.mul (as ff2 FF0) x2 x4 x6)))
  (let ((let26 (ff.mul x0 x0 x11)))
  (let ((let27 (ff.mul (as ff2 FF0) x5 x9 x12)))
  (let ((let28 (ff.mul x7 x11 x13)))
  (let ((let29 (ff.mul (as ff2 FF0) x1 x13 x15)))
  (let ((let30 (ff.add let25 let26 let27 let28 let29)))
  (let ((let31 (= let30 (as ff0 FF0))))
  (let ((let32 (ff.mul x12 x12 x14)))
  (let ((let33 (ff.mul x0 x12 x15)))
  (let ((let34 (ff.mul (as ff2 FF0) x3 x7)))
  (let ((let35 (ff.mul (as ff2 FF0) x10 x10)))
  (let ((let36 (ff.add let32 let33 let34 let35)))
  (let ((let37 (= let36 (as ff0 FF0))))
  (let ((let38 (ff.mul (as ff2 FF0) x6 x6 x11)))
  (let ((let39 (ff.mul (as ff2 FF0) x15 x15 x15)))
  (let ((let40 (ff.mul (as ff2 FF0) x4 x7)))
  (let ((let41 (ff.mul x11 x11)))
  (let ((let42 x10))
  (let ((let43 (as ff1 FF0)))
  (let ((let44 (ff.add let38 let39 let40 let41 let42 let43)))
  (let ((let45 (= let44 (as ff0 FF0))))
  (let ((let46 (ff.mul (as ff2 FF0) x0 x1 x9)))
  (let ((let47 (ff.mul (as ff2 FF0) x1 x2 x13)))
  (let ((let48 (ff.mul (as ff2 FF0) x7 x9 x14)))
  (let ((let49 (ff.mul (as ff2 FF0) x7 x14)))
  (let ((let50 (ff.mul (as ff2 FF0) x12 x14)))
  (let ((let51 (ff.add let46 let47 let48 let49 let50)))
  (let ((let52 (= let51 (as ff0 FF0))))
  (let ((let53 (ff.mul x5 x8 x14)))
  (let ((let54 (ff.mul (as ff2 FF0) x1 x5 x15)))
  (let ((let55 (ff.mul (as ff2 FF0) x3 x8 x15)))
  (let ((let56 (ff.mul (as ff2 FF0) x4 x12)))
  (let ((let57 (ff.add let53 let54 let55 let56)))
  (let ((let58 (= let57 (as ff0 FF0))))
  (let ((let59 (ff.mul (as ff2 FF0) x3 x10 x13)))
  (let ((let60 (ff.mul x1 x8)))
  (let ((let61 (ff.mul (as ff2 FF0) x2 x15)))
  (let ((let62 (ff.add let59 let60 let61)))
  (let ((let63 (= let62 (as ff0 FF0))))
  (let ((let64 (ff.mul (as ff2 FF0) x0 x1 x1)))
  (let ((let65 (= let64 (as ff0 FF0))))
  (let ((let66 (ff.mul (as ff2 FF0) x0 x11 x11)))
  (let ((let67 (ff.mul (as ff2 FF0) x9 x11 x12)))
  (let ((let68 (ff.mul x11 x12 x15)))
  (let ((let69 (ff.add let66 let67 let68)))
  (let ((let70 (= let69 (as ff0 FF0))))
  (let ((let71 (ff.mul x5 x9 x11)))
  (let ((let72 (ff.mul (as ff2 FF0) x15 x15 x15)))
  (let ((let73 (ff.add let71 let72)))
  (let ((let74 (= let73 (as ff0 FF0))))
  (let ((let75 (ff.mul (as ff2 FF0) x3 x7 x13)))
  (let ((let76 (ff.mul x3 x11 x13)))
  (let ((let77 (ff.mul x2 x12 x13)))
  (let ((let78 (ff.add let75 let76 let77)))
  (let ((let79 (= let78 (as ff0 FF0))))
  (let ((let80 (ff.mul (as ff2 FF0) x2 x9 x10)))
  (let ((let81 (ff.mul (as ff2 FF0) x11 x11 x12)))
  (let ((let82 (ff.mul (as ff2 FF0) x3 x10 x13)))
  (let ((let83 (ff.add let80 let81 let82)))
  (let ((let84 (= let83 (as ff0 FF0))))
  (let ((let85 (and let5 let11 let16 let20 let24 let31 let37 let45 let52 let58 let63 let65 let70 let74 let79 let84)))
  let85
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
