
(set-info :smt-lib-version 2.6)
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(declare-fun x8 () FF0)
(declare-fun x9 () FF0)
(declare-fun x10 () FF0)
(declare-fun x11 () FF0)
(declare-fun x12 () FF0)
(declare-fun x13 () FF0)
(declare-fun x14 () FF0)
(declare-fun x15 () FF0)
(assert
  (let ((let0 (ff.mul x1 x10 x10)))
  (let ((let1 (ff.mul x1 x2 x13)))
  (let ((let2 (ff.mul (as ff2 FF0) x8 x8 x14)))
  (let ((let3 (ff.mul (as ff2 FF0) x10 x15 x15)))
  (let ((let4 (as ff2 FF0)))
  (let ((let5 (ff.add let0 let1 let2 let3 let4)))
  (let ((let6 (= let5 (as ff0 FF0))))
  (let ((let7 (ff.mul x1 x3 x11)))
  (let ((let8 (ff.mul x1 x6 x13)))
  (let ((let9 (ff.mul (as ff2 FF0) x3 x8 x13)))
  (let ((let10 (ff.mul (as ff2 FF0) x10 x12 x14)))
  (let ((let11 (ff.mul x4 x9 x15)))
  (let ((let12 (ff.add let7 let8 let9 let10 let11)))
  (let ((let13 (= let12 (as ff0 FF0))))
  (let ((let14 (ff.mul x0 x0 x1)))
  (let ((let15 (ff.mul x2 x7 x9)))
  (let ((let16 (ff.mul x4 x10 x11)))
  (let ((let17 (ff.add let14 let15 let16)))
  (let ((let18 (= let17 (as ff0 FF0))))
  (let ((let19 (ff.mul (as ff2 FF0) x1 x9 x10)))
  (let ((let20 (ff.mul (as ff2 FF0) x6 x7 x15)))
  (let ((let21 (ff.mul (as ff2 FF0) x3 x12 x15)))
  (let ((let22 (ff.mul x12 x13 x15)))
  (let ((let23 (ff.add let19 let20 let21 let22)))
  (let ((let24 (= let23 (as ff0 FF0))))
  (let ((let25 (ff.mul (as ff2 FF0) x0 x11 x12)))
  (let ((let26 (ff.mul (as ff2 FF0) x4 x10 x14)))
  (let ((let27 (ff.mul (as ff2 FF0) x0 x2 x15)))
  (let ((let28 (ff.mul (as ff2 FF0) x13 x13 x15)))
  (let ((let29 (ff.mul x7 x9)))
  (let ((let30 (ff.add let25 let26 let27 let28 let29)))
  (let ((let31 (= let30 (as ff0 FF0))))
  (let ((let32 (ff.mul x5 x7 x10)))
  (let ((let33 (ff.mul x10 x10 x13)))
  (let ((let34 (ff.mul x2 x4)))
  (let ((let35 (ff.add let32 let33 let34)))
  (let ((let36 (= let35 (as ff0 FF0))))
  (let ((let37 (ff.mul x0 x8 x9)))
  (let ((let38 (ff.mul (as ff2 FF0) x0 x10 x11)))
  (let ((let39 (ff.mul x1 x14 x14)))
  (let ((let40 (ff.mul x1 x13 x15)))
  (let ((let41 (ff.mul (as ff2 FF0) x8 x15 x15)))
  (let ((let42 (ff.add let37 let38 let39 let40 let41)))
  (let ((let43 (= let42 (as ff0 FF0))))
  (let ((let44 (ff.mul x4 x7 x8)))
  (let ((let45 (ff.mul x3 x4 x10)))
  (let ((let46 (ff.mul (as ff2 FF0) x4 x9 x14)))
  (let ((let47 (ff.mul (as ff2 FF0) x7 x8)))
  (let ((let48 (ff.add let44 let45 let46 let47)))
  (let ((let49 (= let48 (as ff0 FF0))))
  (let ((let50 (ff.mul x2 x2 x8)))
  (let ((let51 (ff.mul (as ff2 FF0) x1 x2 x12)))
  (let ((let52 (ff.mul (as ff2 FF0) x10 x12 x13)))
  (let ((let53 (ff.mul x2 x2 x14)))
  (let ((let54 (ff.add let50 let51 let52 let53)))
  (let ((let55 (= let54 (as ff0 FF0))))
  (let ((let56 (ff.mul (as ff2 FF0) x0 x3 x8)))
  (let ((let57 (ff.mul x4 x7 x8)))
  (let ((let58 (ff.mul (as ff2 FF0) x5 x8 x14)))
  (let ((let59 (ff.mul (as ff2 FF0) x8 x12 x15)))
  (let ((let60 (ff.add let56 let57 let58 let59)))
  (let ((let61 (= let60 (as ff0 FF0))))
  (let ((let62 (ff.mul x6 x9 x13)))
  (let ((let63 (ff.mul (as ff2 FF0) x11 x14 x15)))
  (let ((let64 (ff.add let62 let63)))
  (let ((let65 (= let64 (as ff0 FF0))))
  (let ((let66 (ff.mul x7 x8 x8)))
  (let ((let67 (ff.mul (as ff2 FF0) x0 x11 x13)))
  (let ((let68 (ff.mul x7 x14 x14)))
  (let ((let69 (ff.add let66 let67 let68)))
  (let ((let70 (= let69 (as ff0 FF0))))
  (let ((let71 (ff.mul (as ff2 FF0) x1 x2 x11)))
  (let ((let72 (ff.mul (as ff2 FF0) x0 x4 x14)))
  (let ((let73 (ff.mul x2 x12 x14)))
  (let ((let74 (ff.mul (as ff2 FF0) x5 x7 x15)))
  (let ((let75 (as ff2 FF0)))
  (let ((let76 (ff.add let71 let72 let73 let74 let75)))
  (let ((let77 (= let76 (as ff0 FF0))))
  (let ((let78 (ff.mul (as ff2 FF0) x0 x5 x6)))
  (let ((let79 (ff.mul x7 x14 x14)))
  (let ((let80 (ff.mul (as ff2 FF0) x0 x7)))
  (let ((let81 (ff.add let78 let79 let80)))
  (let ((let82 (= let81 (as ff0 FF0))))
  (let ((let83 (ff.mul x3 x7 x10)))
  (let ((let84 (ff.mul x10 x11 x11)))
  (let ((let85 (ff.mul (as ff2 FF0) x0 x7 x12)))
  (let ((let86 (ff.mul x0 x1 x15)))
  (let ((let87 (ff.add let83 let84 let85 let86)))
  (let ((let88 (= let87 (as ff0 FF0))))
  (let ((let89 (ff.mul x0 x2 x3)))
  (let ((let90 (ff.mul (as ff2 FF0) x2 x5 x5)))
  (let ((let91 (ff.mul x11 x11 x11)))
  (let ((let92 (ff.mul (as ff2 FF0) x12 x15)))
  (let ((let93 (ff.add let89 let90 let91 let92)))
  (let ((let94 (= let93 (as ff0 FF0))))
  (let ((let95 (and let6 let13 let18 let24 let31 let36 let43 let49 let55 let61 let65 let70 let77 let82 let88 let94)))
  let95
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
