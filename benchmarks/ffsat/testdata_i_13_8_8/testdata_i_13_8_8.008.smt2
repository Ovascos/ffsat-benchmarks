
(set-info :smt-lib-version 2.6)
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 13))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(assert
  (let ((let0 (ff.mul (as ff7 FF0) x1 x1 x2)))
  (let ((let1 (ff.mul (as ff3 FF0) x2 x2 x3)))
  (let ((let2 (ff.mul (as ff6 FF0) x1 x1 x4)))
  (let ((let3 (ff.mul (as ff12 FF0) x6 x6)))
  (let ((let4 (ff.add let0 let1 let2 let3)))
  (let ((let5 (= let4 (as ff0 FF0))))
  (let ((let6 (ff.mul (as ff9 FF0) x3 x5 x5)))
  (let ((let7 (ff.mul x0 x1 x6)))
  (let ((let8 (ff.mul (as ff8 FF0) x1 x1 x6)))
  (let ((let9 (ff.mul (as ff9 FF0) x4 x5 x7)))
  (let ((let10 (ff.mul (as ff5 FF0) x0 x7)))
  (let ((let11 (ff.add let6 let7 let8 let9 let10)))
  (let ((let12 (= let11 (as ff0 FF0))))
  (let ((let13 (ff.mul (as ff2 FF0) x1 x1 x6)))
  (let ((let14 (ff.mul (as ff11 FF0) x1 x3 x6)))
  (let ((let15 (ff.mul (as ff2 FF0) x4 x4 x6)))
  (let ((let16 (ff.mul x5 x5 x7)))
  (let ((let17 (ff.mul (as ff8 FF0) x1 x1)))
  (let ((let18 (ff.add let13 let14 let15 let16 let17)))
  (let ((let19 (= let18 (as ff0 FF0))))
  (let ((let20 (ff.mul (as ff2 FF0) x6 x6 x6)))
  (let ((let21 (ff.mul (as ff9 FF0) x6 x7)))
  (let ((let22 (ff.mul (as ff8 FF0) x3)))
  (let ((let23 (as ff1 FF0)))
  (let ((let24 (ff.add let20 let21 let22 let23)))
  (let ((let25 (= let24 (as ff0 FF0))))
  (let ((let26 (ff.mul (as ff10 FF0) x2 x4 x4)))
  (let ((let27 (ff.mul (as ff8 FF0) x0 x2 x5)))
  (let ((let28 (ff.mul (as ff4 FF0) x0 x3 x6)))
  (let ((let29 (ff.mul (as ff2 FF0) x2 x5 x6)))
  (let ((let30 (ff.mul (as ff3 FF0) x0 x1)))
  (let ((let31 (ff.add let26 let27 let28 let29 let30)))
  (let ((let32 (= let31 (as ff0 FF0))))
  (let ((let33 (ff.mul x0 x2 x2)))
  (let ((let34 (ff.mul (as ff9 FF0) x3 x4 x6)))
  (let ((let35 (ff.mul (as ff6 FF0) x4 x4 x7)))
  (let ((let36 (ff.mul (as ff6 FF0) x1 x7)))
  (let ((let37 (ff.mul (as ff12 FF0) x3 x7)))
  (let ((let38 (as ff1 FF0)))
  (let ((let39 (ff.add let33 let34 let35 let36 let37 let38)))
  (let ((let40 (= let39 (as ff0 FF0))))
  (let ((let41 (ff.mul (as ff3 FF0) x2 x5 x6)))
  (let ((let42 (ff.mul (as ff8 FF0) x2 x5 x7)))
  (let ((let43 (ff.mul (as ff7 FF0) x2 x7 x7)))
  (let ((let44 (ff.mul (as ff10 FF0) x1 x7)))
  (let ((let45 (as ff1 FF0)))
  (let ((let46 (ff.add let41 let42 let43 let44 let45)))
  (let ((let47 (= let46 (as ff0 FF0))))
  (let ((let48 (ff.mul (as ff12 FF0) x0 x0 x1)))
  (let ((let49 (ff.mul (as ff4 FF0) x0 x3 x4)))
  (let ((let50 (ff.mul (as ff7 FF0) x4 x4 x6)))
  (let ((let51 (ff.mul (as ff3 FF0) x1 x7 x7)))
  (let ((let52 (ff.mul (as ff10 FF0) x1)))
  (let ((let53 (ff.add let48 let49 let50 let51 let52)))
  (let ((let54 (= let53 (as ff0 FF0))))
  (let ((let55 (and let5 let12 let19 let25 let32 let40 let47 let54)))
  let55
))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
