
(set-info :smt-lib-version 2.6)
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 13))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(assert
  (let ((let0 (ff.mul (as ff9 FF0) x1 x2 x4)))
  (let ((let1 (ff.mul (as ff12 FF0) x1 x4 x5)))
  (let ((let2 (ff.mul (as ff4 FF0) x0 x1 x6)))
  (let ((let3 (ff.mul (as ff5 FF0) x5 x5 x7)))
  (let ((let4 (ff.mul (as ff11 FF0) x0 x6 x7)))
  (let ((let5 (as ff1 FF0)))
  (let ((let6 (ff.add let0 let1 let2 let3 let4 let5)))
  (let ((let7 (= let6 (as ff0 FF0))))
  (let ((let8 (ff.mul (as ff3 FF0) x1 x5 x6)))
  (let ((let9 (ff.mul (as ff8 FF0) x0 x2)))
  (let ((let10 (ff.mul (as ff2 FF0) x3 x5)))
  (let ((let11 (ff.mul (as ff10 FF0) x1 x6)))
  (let ((let12 (ff.mul (as ff9 FF0) x7)))
  (let ((let13 (ff.add let8 let9 let10 let11 let12)))
  (let ((let14 (= let13 (as ff0 FF0))))
  (let ((let15 (ff.mul (as ff4 FF0) x1 x5 x5)))
  (let ((let16 (ff.mul (as ff7 FF0) x2 x3 x6)))
  (let ((let17 (ff.mul (as ff2 FF0) x2 x4 x6)))
  (let ((let18 (ff.mul (as ff9 FF0) x6 x6 x7)))
  (let ((let19 (ff.mul (as ff10 FF0) x7 x7)))
  (let ((let20 (as ff1 FF0)))
  (let ((let21 (ff.add let15 let16 let17 let18 let19 let20)))
  (let ((let22 (= let21 (as ff0 FF0))))
  (let ((let23 (ff.mul (as ff10 FF0) x2 x2 x3)))
  (let ((let24 (ff.mul (as ff8 FF0) x2 x4 x4)))
  (let ((let25 (ff.mul (as ff4 FF0) x2 x5 x5)))
  (let ((let26 (ff.mul (as ff2 FF0) x2 x4 x6)))
  (let ((let27 (ff.mul (as ff2 FF0) x2 x2)))
  (let ((let28 (as ff1 FF0)))
  (let ((let29 (ff.add let23 let24 let25 let26 let27 let28)))
  (let ((let30 (= let29 (as ff0 FF0))))
  (let ((let31 (ff.mul (as ff2 FF0) x0 x3 x5)))
  (let ((let32 (ff.mul (as ff3 FF0) x2 x2 x6)))
  (let ((let33 (ff.mul (as ff6 FF0) x5 x5 x6)))
  (let ((let34 (ff.mul (as ff6 FF0) x3 x6 x6)))
  (let ((let35 (ff.mul (as ff12 FF0) x6 x6 x7)))
  (let ((let36 (as ff1 FF0)))
  (let ((let37 (ff.add let31 let32 let33 let34 let35 let36)))
  (let ((let38 (= let37 (as ff0 FF0))))
  (let ((let39 (ff.mul x2 x3 x3)))
  (let ((let40 (ff.mul (as ff7 FF0) x0 x0 x4)))
  (let ((let41 (ff.mul (as ff7 FF0) x1 x6 x7)))
  (let ((let42 (ff.mul (as ff5 FF0) x0 x1)))
  (let ((let43 (ff.mul (as ff9 FF0) x1 x1)))
  (let ((let44 (as ff1 FF0)))
  (let ((let45 (ff.add let39 let40 let41 let42 let43 let44)))
  (let ((let46 (= let45 (as ff0 FF0))))
  (let ((let47 (ff.mul (as ff9 FF0) x3 x4 x4)))
  (let ((let48 (ff.mul (as ff11 FF0) x0 x4 x5)))
  (let ((let49 (ff.mul x5 x5 x5)))
  (let ((let50 (ff.mul (as ff3 FF0) x1 x7 x7)))
  (let ((let51 (ff.mul (as ff9 FF0) x4 x4)))
  (let ((let52 (as ff1 FF0)))
  (let ((let53 (ff.add let47 let48 let49 let50 let51 let52)))
  (let ((let54 (= let53 (as ff0 FF0))))
  (let ((let55 (ff.mul (as ff9 FF0) x0 x4 x4)))
  (let ((let56 (ff.mul x3 x4 x4)))
  (let ((let57 (ff.mul (as ff7 FF0) x5 x7 x7)))
  (let ((let58 (ff.mul (as ff6 FF0) x0 x4)))
  (let ((let59 (ff.mul (as ff3 FF0) x1)))
  (let ((let60 (ff.add let55 let56 let57 let58 let59)))
  (let ((let61 (= let60 (as ff0 FF0))))
  (let ((let62 (and let7 let14 let22 let30 let38 let46 let54 let61)))
  let62
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
