
(set-info :smt-lib-version 2.6)
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(assert
  (let ((let0 (ff.mul (as ff2 FF0) x1 x1 x4)))
  (let ((let1 (ff.mul x2 x4 x4)))
  (let ((let2 (ff.add let0 let1)))
  (let ((let3 (= let2 (as ff0 FF0))))
  (let ((let4 (ff.mul (as ff2 FF0) x0 x4 x4)))
  (let ((let5 (ff.mul (as ff2 FF0) x4 x5 x6)))
  (let ((let6 (ff.mul x5 x6)))
  (let ((let7 (ff.add let4 let5 let6)))
  (let ((let8 (= let7 (as ff0 FF0))))
  (let ((let9 (ff.mul (as ff2 FF0) x0 x1 x5)))
  (let ((let10 (ff.mul (as ff2 FF0) x1 x2 x6)))
  (let ((let11 (ff.mul x1 x7)))
  (let ((let12 (ff.add let9 let10 let11)))
  (let ((let13 (= let12 (as ff0 FF0))))
  (let ((let14 (ff.mul x2 x3 x6)))
  (let ((let15 (ff.mul x5 x6 x6)))
  (let ((let16 (ff.mul (as ff2 FF0) x6 x6 x6)))
  (let ((let17 (ff.mul (as ff2 FF0) x3 x3 x7)))
  (let ((let18 (ff.mul (as ff2 FF0) x7 x7)))
  (let ((let19 (ff.add let14 let15 let16 let17 let18)))
  (let ((let20 (= let19 (as ff0 FF0))))
  (let ((let21 (ff.mul x1 x4 x5)))
  (let ((let22 (ff.mul (as ff2 FF0) x3 x4 x6)))
  (let ((let23 (ff.mul x2 x5 x6)))
  (let ((let24 (ff.mul x0 x2 x7)))
  (let ((let25 (ff.mul x1 x6 x7)))
  (let ((let26 (ff.add let21 let22 let23 let24 let25)))
  (let ((let27 (= let26 (as ff0 FF0))))
  (let ((let28 (ff.mul (as ff2 FF0) x3 x4 x5)))
  (let ((let29 (ff.mul (as ff2 FF0) x3 x5 x6)))
  (let ((let30 (ff.mul x0 x0)))
  (let ((let31 (as ff1 FF0)))
  (let ((let32 (ff.add let28 let29 let30 let31)))
  (let ((let33 (= let32 (as ff0 FF0))))
  (let ((let34 (ff.mul x5 x6 x7)))
  (let ((let35 (ff.mul (as ff2 FF0) x7 x7 x7)))
  (let ((let36 (ff.mul x6 x7)))
  (let ((let37 (ff.add let34 let35 let36)))
  (let ((let38 (= let37 (as ff0 FF0))))
  (let ((let39 (ff.mul (as ff2 FF0) x0 x1 x5)))
  (let ((let40 (ff.mul x1 x7 x7)))
  (let ((let41 (ff.mul x4 x7)))
  (let ((let42 x6))
  (let ((let43 (ff.add let39 let40 let41 let42)))
  (let ((let44 (= let43 (as ff0 FF0))))
  (let ((let45 (and let3 let8 let13 let20 let27 let33 let38 let44)))
  let45
))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
