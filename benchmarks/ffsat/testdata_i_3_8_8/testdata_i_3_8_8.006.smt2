
(set-info :smt-lib-version 2.6)
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(assert
  (let ((let0 (ff.mul x0 x3 x4)))
  (let ((let1 (ff.mul (as ff2 FF0) x2 x2 x5)))
  (let ((let2 (ff.mul (as ff2 FF0) x2 x4 x6)))
  (let ((let3 (ff.add let0 let1 let2)))
  (let ((let4 (= let3 (as ff0 FF0))))
  (let ((let5 (ff.mul x1 x5 x5)))
  (let ((let6 (ff.mul (as ff2 FF0) x0 x3)))
  (let ((let7 (ff.mul x0 x7)))
  (let ((let8 (ff.mul (as ff2 FF0) x7 x7)))
  (let ((let9 (ff.add let5 let6 let7 let8)))
  (let ((let10 (= let9 (as ff0 FF0))))
  (let ((let11 (ff.mul (as ff2 FF0) x3 x3 x5)))
  (let ((let12 (ff.mul (as ff2 FF0) x0 x1 x6)))
  (let ((let13 (ff.mul x5 x6 x7)))
  (let ((let14 (ff.mul (as ff2 FF0) x0 x1)))
  (let ((let15 x4))
  (let ((let16 (ff.add let11 let12 let13 let14 let15)))
  (let ((let17 (= let16 (as ff0 FF0))))
  (let ((let18 (ff.mul (as ff2 FF0) x0 x1 x5)))
  (let ((let19 (ff.mul (as ff2 FF0) x1 x2 x5)))
  (let ((let20 (ff.mul (as ff2 FF0) x0 x3 x5)))
  (let ((let21 (ff.mul x6 x7 x7)))
  (let ((let22 (ff.mul x7 x7 x7)))
  (let ((let23 (as ff1 FF0)))
  (let ((let24 (ff.add let18 let19 let20 let21 let22 let23)))
  (let ((let25 (= let24 (as ff0 FF0))))
  (let ((let26 (ff.mul (as ff2 FF0) x3 x4 x4)))
  (let ((let27 (ff.mul x4 x4 x4)))
  (let ((let28 (ff.mul x3 x5 x5)))
  (let ((let29 (ff.mul x3 x3)))
  (let ((let30 (ff.add let26 let27 let28 let29)))
  (let ((let31 (= let30 (as ff0 FF0))))
  (let ((let32 (ff.mul (as ff2 FF0) x1 x2 x5)))
  (let ((let33 (ff.mul (as ff2 FF0) x0 x1 x6)))
  (let ((let34 (ff.mul x2 x2 x7)))
  (let ((let35 (ff.mul (as ff2 FF0) x0 x3 x7)))
  (let ((let36 (ff.add let32 let33 let34 let35)))
  (let ((let37 (= let36 (as ff0 FF0))))
  (let ((let38 (ff.mul (as ff2 FF0) x1 x1 x2)))
  (let ((let39 (ff.mul x2 x5 x7)))
  (let ((let40 (as ff1 FF0)))
  (let ((let41 (ff.add let38 let39 let40)))
  (let ((let42 (= let41 (as ff0 FF0))))
  (let ((let43 (ff.mul x3 x4 x6)))
  (let ((let44 (ff.mul x2 x2 x7)))
  (let ((let45 (ff.add let43 let44)))
  (let ((let46 (= let45 (as ff0 FF0))))
  (let ((let47 (and let4 let10 let17 let25 let31 let37 let42 let46)))
  let47
))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
