
(set-info :smt-lib-version 2.6)
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(assert
  (let ((let0 (ff.mul (as ff2 FF0) x2 x3 x4)))
  (let ((let1 (as ff1 FF0)))
  (let ((let2 (ff.add let0 let1)))
  (let ((let3 (= let2 (as ff0 FF0))))
  (let ((let4 (ff.mul x1 x1 x2)))
  (let ((let5 (ff.mul x1 x2 x6)))
  (let ((let6 (ff.mul x0 x4 x7)))
  (let ((let7 (ff.mul x4 x6 x7)))
  (let ((let8 (ff.add let4 let5 let6 let7)))
  (let ((let9 (= let8 (as ff0 FF0))))
  (let ((let10 (ff.mul x2 x2 x5)))
  (let ((let11 (ff.mul x0 x4 x5)))
  (let ((let12 (ff.mul (as ff2 FF0) x3 x4 x7)))
  (let ((let13 (ff.mul x5 x7)))
  (let ((let14 (ff.add let10 let11 let12 let13)))
  (let ((let15 (= let14 (as ff0 FF0))))
  (let ((let16 (ff.mul x0 x4 x5)))
  (let ((let17 (ff.mul x1 x5 x6)))
  (let ((let18 (ff.add let16 let17)))
  (let ((let19 (= let18 (as ff0 FF0))))
  (let ((let20 (ff.mul (as ff2 FF0) x1 x2 x4)))
  (let ((let21 (ff.mul (as ff2 FF0) x0 x0 x6)))
  (let ((let22 x4))
  (let ((let23 (ff.add let20 let21 let22)))
  (let ((let24 (= let23 (as ff0 FF0))))
  (let ((let25 (ff.mul (as ff2 FF0) x2 x2 x5)))
  (let ((let26 (ff.mul (as ff2 FF0) x0 x3 x5)))
  (let ((let27 (ff.add let25 let26)))
  (let ((let28 (= let27 (as ff0 FF0))))
  (let ((let29 (ff.mul (as ff2 FF0) x0 x2 x2)))
  (let ((let30 (ff.mul (as ff2 FF0) x3 x6 x6)))
  (let ((let31 x4))
  (let ((let32 (ff.add let29 let30 let31)))
  (let ((let33 (= let32 (as ff0 FF0))))
  (let ((let34 (ff.mul x1 x3 x6)))
  (let ((let35 (ff.mul x4 x6 x6)))
  (let ((let36 (ff.add let34 let35)))
  (let ((let37 (= let36 (as ff0 FF0))))
  (let ((let38 (and let3 let9 let15 let19 let24 let28 let33 let37)))
  let38
)))))))))))))))))))))))))))))))))))))))
)
(check-sat)
