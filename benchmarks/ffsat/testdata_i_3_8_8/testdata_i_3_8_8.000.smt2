
(set-info :smt-lib-version 2.6)
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(assert
  (let ((let0 (ff.mul x2 x2 x4)))
  (let ((let1 (ff.mul x3 x4 x5)))
  (let ((let2 (ff.mul (as ff2 FF0) x0 x0 x6)))
  (let ((let3 (ff.mul (as ff2 FF0) x2 x7 x7)))
  (let ((let4 (as ff1 FF0)))
  (let ((let5 (ff.add let0 let1 let2 let3 let4)))
  (let ((let6 (= let5 (as ff0 FF0))))
  (let ((let7 (ff.mul (as ff2 FF0) x1 x1 x2)))
  (let ((let8 (ff.mul x0 x0 x3)))
  (let ((let9 (ff.mul (as ff2 FF0) x2 x3 x5)))
  (let ((let10 (ff.mul x0 x4)))
  (let ((let11 (ff.add let7 let8 let9 let10)))
  (let ((let12 (= let11 (as ff0 FF0))))
  (let ((let13 (ff.mul (as ff2 FF0) x0 x3 x3)))
  (let ((let14 (ff.mul x0 x2 x5)))
  (let ((let15 (ff.mul (as ff2 FF0) x0 x3 x6)))
  (let ((let16 (ff.add let13 let14 let15)))
  (let ((let17 (= let16 (as ff0 FF0))))
  (let ((let18 (ff.mul x0 x0 x5)))
  (let ((let19 (ff.mul (as ff2 FF0) x0 x4 x7)))
  (let ((let20 (ff.mul x1 x5 x7)))
  (let ((let21 (as ff1 FF0)))
  (let ((let22 (ff.add let18 let19 let20 let21)))
  (let ((let23 (= let22 (as ff0 FF0))))
  (let ((let24 (ff.mul x0 x3 x3)))
  (let ((let25 (ff.mul x4 x4 x6)))
  (let ((let26 (ff.add let24 let25)))
  (let ((let27 (= let26 (as ff0 FF0))))
  (let ((let28 (ff.mul x3 x4 x6)))
  (let ((let29 (= let28 (as ff0 FF0))))
  (let ((let30 (ff.mul x0 x0 x3)))
  (let ((let31 (ff.mul x3 x3 x4)))
  (let ((let32 (ff.mul (as ff2 FF0) x5 x7)))
  (let ((let33 x7))
  (let ((let34 (as ff2 FF0)))
  (let ((let35 (ff.add let30 let31 let32 let33 let34)))
  (let ((let36 (= let35 (as ff0 FF0))))
  (let ((let37 (ff.mul (as ff2 FF0) x1 x2 x2)))
  (let ((let38 (ff.mul x1 x3 x5)))
  (let ((let39 (ff.mul (as ff2 FF0) x1 x6 x7)))
  (let ((let40 (ff.mul x0 x3)))
  (let ((let41 (ff.mul (as ff2 FF0) x0 x7)))
  (let ((let42 (ff.add let37 let38 let39 let40 let41)))
  (let ((let43 (= let42 (as ff0 FF0))))
  (let ((let44 (and let6 let12 let17 let23 let27 let29 let36 let43)))
  let44
)))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
