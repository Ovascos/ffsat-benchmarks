
(set-info :smt-lib-version 2.6)
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(assert
  (let ((let0 (ff.mul x1 x1 x3)))
  (let ((let1 (ff.mul x1 x1 x6)))
  (let ((let2 (ff.mul x5 x6 x6)))
  (let ((let3 (ff.mul (as ff2 FF0) x4 x5 x7)))
  (let ((let4 (ff.mul (as ff2 FF0) x6)))
  (let ((let5 (ff.add let0 let1 let2 let3 let4)))
  (let ((let6 (= let5 (as ff0 FF0))))
  (let ((let7 (ff.mul x1 x3 x5)))
  (let ((let8 (ff.mul x0 x7 x7)))
  (let ((let9 (ff.mul x2 x7)))
  (let ((let10 (as ff1 FF0)))
  (let ((let11 (ff.add let7 let8 let9 let10)))
  (let ((let12 (= let11 (as ff0 FF0))))
  (let ((let13 (ff.mul x0 x2 x2)))
  (let ((let14 (ff.mul x3 x3 x3)))
  (let ((let15 (ff.mul x1 x2 x4)))
  (let ((let16 (ff.mul (as ff2 FF0) x3 x3 x6)))
  (let ((let17 (ff.add let13 let14 let15 let16)))
  (let ((let18 (= let17 (as ff0 FF0))))
  (let ((let19 (ff.mul (as ff2 FF0) x0 x0 x1)))
  (let ((let20 (ff.mul (as ff2 FF0) x0 x5 x6)))
  (let ((let21 (ff.add let19 let20)))
  (let ((let22 (= let21 (as ff0 FF0))))
  (let ((let23 (ff.mul x4 x4 x5)))
  (let ((let24 (ff.mul (as ff2 FF0) x0 x2)))
  (let ((let25 (ff.mul (as ff2 FF0) x3 x6)))
  (let ((let26 (ff.add let23 let24 let25)))
  (let ((let27 (= let26 (as ff0 FF0))))
  (let ((let28 (ff.mul (as ff2 FF0) x0 x3 x3)))
  (let ((let29 (ff.mul (as ff2 FF0) x0 x3 x4)))
  (let ((let30 (ff.mul x2 x4 x7)))
  (let ((let31 x1))
  (let ((let32 (as ff1 FF0)))
  (let ((let33 (ff.add let28 let29 let30 let31 let32)))
  (let ((let34 (= let33 (as ff0 FF0))))
  (let ((let35 (ff.mul (as ff2 FF0) x0 x4 x5)))
  (let ((let36 (ff.mul (as ff2 FF0) x4 x5 x5)))
  (let ((let37 (ff.mul x2 x2)))
  (let ((let38 (ff.mul (as ff2 FF0) x6 x6)))
  (let ((let39 (ff.add let35 let36 let37 let38)))
  (let ((let40 (= let39 (as ff0 FF0))))
  (let ((let41 (ff.mul x2 x2 x4)))
  (let ((let42 (ff.mul x0 x4 x4)))
  (let ((let43 (ff.mul x0 x0 x7)))
  (let ((let44 (ff.mul (as ff2 FF0) x6 x7)))
  (let ((let45 (ff.add let41 let42 let43 let44)))
  (let ((let46 (= let45 (as ff0 FF0))))
  (let ((let47 (and let6 let12 let18 let22 let27 let34 let40 let46)))
  let47
))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
