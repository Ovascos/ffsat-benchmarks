
(set-info :smt-lib-version 2.6)
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 3))
(declare-fun x0 () FF0)
(declare-fun x1 () FF0)
(declare-fun x2 () FF0)
(declare-fun x3 () FF0)
(declare-fun x4 () FF0)
(declare-fun x5 () FF0)
(declare-fun x6 () FF0)
(declare-fun x7 () FF0)
(assert
  (let ((let0 (ff.mul (as ff2 FF0) x1 x1 x2)))
  (let ((let1 (ff.mul (as ff2 FF0) x5 x6 x6)))
  (let ((let2 (ff.mul x0 x4)))
  (let ((let3 (ff.mul x3 x4)))
  (let ((let4 (ff.mul (as ff2 FF0) x6 x7)))
  (let ((let5 (ff.add let0 let1 let2 let3 let4)))
  (let ((let6 (= let5 (as ff0 FF0))))
  (let ((let7 (ff.mul (as ff2 FF0) x1 x3 x4)))
  (let ((let8 (ff.mul (as ff2 FF0) x2 x3 x5)))
  (let ((let9 (ff.add let7 let8)))
  (let ((let10 (= let9 (as ff0 FF0))))
  (let ((let11 (ff.mul (as ff2 FF0) x0 x3 x3)))
  (let ((let12 (ff.mul (as ff2 FF0) x2 x6)))
  (let ((let13 (as ff1 FF0)))
  (let ((let14 (ff.add let11 let12 let13)))
  (let ((let15 (= let14 (as ff0 FF0))))
  (let ((let16 (ff.mul x0 x3 x3)))
  (let ((let17 (ff.mul x5 x5)))
  (let ((let18 (ff.add let16 let17)))
  (let ((let19 (= let18 (as ff0 FF0))))
  (let ((let20 (ff.mul x0 x2 x3)))
  (let ((let21 (ff.mul (as ff2 FF0) x5 x5 x7)))
  (let ((let22 (ff.mul x6 x6 x7)))
  (let ((let23 (ff.mul x0 x0)))
  (let ((let24 (ff.mul (as ff2 FF0) x4 x6)))
  (let ((let25 (ff.add let20 let21 let22 let23 let24)))
  (let ((let26 (= let25 (as ff0 FF0))))
  (let ((let27 (ff.mul (as ff2 FF0) x0 x1 x5)))
  (let ((let28 (ff.mul (as ff2 FF0) x0 x5 x5)))
  (let ((let29 (ff.mul x3 x4 x7)))
  (let ((let30 (ff.mul (as ff2 FF0) x3 x5)))
  (let ((let31 x0))
  (let ((let32 (ff.add let27 let28 let29 let30 let31)))
  (let ((let33 (= let32 (as ff0 FF0))))
  (let ((let34 (ff.mul x0 x3 x5)))
  (let ((let35 (ff.mul (as ff2 FF0) x5 x7 x7)))
  (let ((let36 (ff.add let34 let35)))
  (let ((let37 (= let36 (as ff0 FF0))))
  (let ((let38 (and let6 let10 let15 let19 let26 let33 let37)))
  let38
)))))))))))))))))))))))))))))))))))))))
)
(check-sat)
