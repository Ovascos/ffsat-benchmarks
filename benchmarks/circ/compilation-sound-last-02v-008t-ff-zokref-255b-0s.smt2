(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun a () Bool)
(declare-fun b () Bool)
(declare-fun out () FF0)
(declare-fun _20 () FF0)
(declare-fun _17 () FF0)
(declare-fun _6 () FF0)
(declare-fun _4 () FF0)
(declare-fun _12 () FF0)
(declare-fun _11 () FF0)
(declare-fun _0 () FF0)
(declare-fun _1 () FF0)
(assert 
  (let ((let0 a))
  (let ((let1 (not let0)))
  (let ((let2 (not let1)))
  (let ((let3 (= let2 let0)))
  (let ((let4 b))
  (let ((let5 (= let4 let4)))
  (let ((let6 (= let2 let4)))
  (let ((let7 (ite let1 let0 let6)))
  (let ((let8 (ite let6 let7 let5)))
  (let ((let9 (or let8 let3)))
  (let ((let10 out))
  (let ((let11 (as ff1 FF0)))
  (let ((let12 (= let11 let10)))
  (let ((let13 (= let12 let9)))
  (let ((let14 (as ff0 FF0)))
  (let ((let15 (= let14 let10)))
  (let ((let16 (or let12 let15)))
  (let ((let17 (and let16 let13)))
  (let ((let18 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let19 _20))
  (let ((let20 (ff.mul let19 let18)))
  (let ((let21 _17))
  (let ((let22 _6))
  (let ((let23 _4))
  (let ((let24 (ff.mul let23 let18)))
  (let ((let25 (ff.add let24 let22 let21 let20 let11)))
  (let ((let26 (ff.add let24 let11)))
  (let ((let27 (ff.add let22 let21)))
  (let ((let28 (ff.mul let27 let26)))
  (let ((let29 (= let28 let25)))
  (let ((let30 _12))
  (let ((let31 _11))
  (let ((let32 (ff.add let31 let30)))
  (let ((let33 (ff.mul let22 let18)))
  (let ((let34 (ff.add let33 let11)))
  (let ((let35 (ff.mul let34 let32)))
  (let ((let36 (= let35 let21)))
  (let ((let37 _0))
  (let ((let38 (ff.mul let37 let34)))
  (let ((let39 (= let38 let30)))
  (let ((let40 (ff.mul let37 let18)))
  (let ((let41 (ff.add let40 let11)))
  (let ((let42 (ff.mul let41 let37)))
  (let ((let43 (= let42 let31)))
  (let ((let44 _1))
  (let ((let45 (ff.mul let44 let18)))
  (let ((let46 (ff.add let37 let45)))
  (let ((let47 (ff.mul let46 let46)))
  (let ((let48 (= let47 let22)))
  (let ((let49 (= let14 let23)))
  (let ((let50 (ff.mul let44 let44)))
  (let ((let51 (= let50 let44)))
  (let ((let52 (ff.mul let37 let37)))
  (let ((let53 (= let52 let37)))
  (let ((let54 (and let53 let51 let49 let48 let43 let39 let36 let29)))
  (let ((let55 (ite let0 let11 let14)))
  (let ((let56 (= let37 let55)))
  (let ((let57 (ite let4 let11 let14)))
  (let ((let58 (= let44 let57)))
  (let ((let59 (and let58 let56)))
  (let ((let60 (and let59 let54)))
  (let ((let61 (=> let60 let17)))
  (let ((let62 (not let61)))
  let62
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
