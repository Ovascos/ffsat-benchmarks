(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun i () Bool)
(declare-fun b () Bool)
(declare-fun d () Bool)
(declare-fun g () Bool)
(declare-fun a () Bool)
(declare-fun j () Bool)
(declare-fun f () Bool)
(declare-fun l () Bool)
(declare-fun e () Bool)
(declare-fun h () Bool)
(declare-fun c () Bool)
(declare-fun k () Bool)
(declare-fun out () FF0)
(declare-fun _27 () FF0)
(declare-fun _16 () FF0)
(declare-fun _26 () FF0)
(declare-fun _9 () FF0)
(declare-fun _25 () FF0)
(declare-fun _18 () FF0)
(declare-fun _24 () FF0)
(declare-fun _19 () FF0)
(declare-fun _23 () FF0)
(declare-fun _21 () FF0)
(declare-fun _10 () FF0)
(declare-fun _7 () FF0)
(declare-fun _2 () FF0)
(declare-fun _11 () FF0)
(declare-fun _4 () FF0)
(declare-fun _5 () FF0)
(declare-fun _8 () FF0)
(declare-fun _15 () FF0)
(declare-fun _12 () FF0)
(declare-fun _13 () FF0)
(declare-fun _6 () FF0)
(declare-fun _0 () FF0)
(declare-fun _3 () FF0)
(declare-fun _1 () FF0)
(assert 
  (let ((let0 i))
  (let ((let1 b))
  (let ((let2 d))
  (let ((let3 (=> let2 let1)))
  (let ((let4 g))
  (let ((let5 a))
  (let ((let6 (= let5 let4)))
  (let ((let7 (and let6 let3 let0)))
  (let ((let8 j))
  (let ((let9 (not let8)))
  (let ((let10 f))
  (let ((let11 (=> let10 let10)))
  (let ((let12 l))
  (let ((let13 e))
  (let ((let14 (= let13 let12)))
  (let ((let15 h))
  (let ((let16 c))
  (let ((let17 (= let16 let15)))
  (let ((let18 k))
  (let ((let19 (and let18 let17 let14 let11 let9 let7)))
  (let ((let20 out))
  (let ((let21 (as ff1 FF0)))
  (let ((let22 (= let21 let20)))
  (let ((let23 (= let22 let19)))
  (let ((let24 (as ff0 FF0)))
  (let ((let25 (= let24 let20)))
  (let ((let26 (or let22 let25)))
  (let ((let27 (and let26 let23)))
  (let ((let28 _27))
  (let ((let29 _16))
  (let ((let30 _26))
  (let ((let31 (ff.mul let30 let29)))
  (let ((let32 (= let31 let28)))
  (let ((let33 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let34 _9))
  (let ((let35 (ff.mul let34 let33)))
  (let ((let36 (ff.add let35 let21)))
  (let ((let37 _25))
  (let ((let38 (ff.mul let37 let36)))
  (let ((let39 (= let38 let30)))
  (let ((let40 _18))
  (let ((let41 _24))
  (let ((let42 (ff.mul let41 let40)))
  (let ((let43 (= let42 let37)))
  (let ((let44 _19))
  (let ((let45 (ff.mul let44 let33)))
  (let ((let46 (ff.add let45 let21)))
  (let ((let47 _23))
  (let ((let48 (ff.mul let47 let46)))
  (let ((let49 (= let48 let41)))
  (let ((let50 _21))
  (let ((let51 (ff.mul let50 let33)))
  (let ((let52 (ff.add let51 let21)))
  (let ((let53 _10))
  (let ((let54 (ff.mul let53 let52)))
  (let ((let55 (= let54 let47)))
  (let ((let56 _7))
  (let ((let57 (ff.mul let56 let33)))
  (let ((let58 _2))
  (let ((let59 (ff.add let58 let57)))
  (let ((let60 (ff.mul let59 let59)))
  (let ((let61 (= let60 let50)))
  (let ((let62 _11))
  (let ((let63 (ff.mul let62 let33)))
  (let ((let64 _4))
  (let ((let65 (ff.add let64 let63)))
  (let ((let66 (ff.mul let65 let65)))
  (let ((let67 (= let66 let44)))
  (let ((let68 (ff.mul let40 let33)))
  (let ((let69 (ff.add let68 let21)))
  (let ((let70 _5))
  (let ((let71 (ff.mul let70 let33)))
  (let ((let72 (ff.add let71 let21)))
  (let ((let73 (ff.mul let72 let70)))
  (let ((let74 (= let73 let69)))
  (let ((let75 _8))
  (let ((let76 _15))
  (let ((let77 (ff.mul let76 let75)))
  (let ((let78 (= let77 let29)))
  (let ((let79 _12))
  (let ((let80 _13))
  (let ((let81 (ff.mul let80 let33)))
  (let ((let82 (ff.add let81 let21)))
  (let ((let83 (ff.mul let82 let79)))
  (let ((let84 (= let83 let76)))
  (let ((let85 _6))
  (let ((let86 (ff.mul let85 let33)))
  (let ((let87 _0))
  (let ((let88 (ff.add let87 let86)))
  (let ((let89 (ff.mul let88 let88)))
  (let ((let90 (= let89 let80)))
  (let ((let91 (ff.mul let79 let33)))
  (let ((let92 _3))
  (let ((let93 (ff.mul let92 let33)))
  (let ((let94 _1))
  (let ((let95 (ff.add let94 let93 let91 let21)))
  (let ((let96 (ff.add let93 let21)))
  (let ((let97 (ff.mul let96 let94)))
  (let ((let98 (= let97 let95)))
  (let ((let99 (ff.mul let62 let62)))
  (let ((let100 (= let99 let62)))
  (let ((let101 (ff.mul let53 let53)))
  (let ((let102 (= let101 let53)))
  (let ((let103 (ff.mul let34 let34)))
  (let ((let104 (= let103 let34)))
  (let ((let105 (ff.mul let75 let75)))
  (let ((let106 (= let105 let75)))
  (let ((let107 (ff.mul let56 let56)))
  (let ((let108 (= let107 let56)))
  (let ((let109 (ff.mul let85 let85)))
  (let ((let110 (= let109 let85)))
  (let ((let111 (ff.mul let70 let70)))
  (let ((let112 (= let111 let70)))
  (let ((let113 (ff.mul let64 let64)))
  (let ((let114 (= let113 let64)))
  (let ((let115 (ff.mul let92 let92)))
  (let ((let116 (= let115 let92)))
  (let ((let117 (ff.mul let58 let58)))
  (let ((let118 (= let117 let58)))
  (let ((let119 (ff.mul let94 let94)))
  (let ((let120 (= let119 let94)))
  (let ((let121 (ff.mul let87 let87)))
  (let ((let122 (= let121 let87)))
  (let ((let123 (and let122 let120 let118 let116 let114 let112 let110 let108 let106 let104 let102 let100 let98 let90 let84 let78 let74 let67 let61 let55 let49 let43 let39 let32)))
  (let ((let124 (ite let0 let21 let24)))
  (let ((let125 (= let75 let124)))
  (let ((let126 (ite let16 let21 let24)))
  (let ((let127 (= let58 let126)))
  (let ((let128 (ite let8 let21 let24)))
  (let ((let129 (= let34 let128)))
  (let ((let130 (ite let4 let21 let24)))
  (let ((let131 (= let85 let130)))
  (let ((let132 (ite let13 let21 let24)))
  (let ((let133 (= let64 let132)))
  (let ((let134 (ite let1 let21 let24)))
  (let ((let135 (= let94 let134)))
  (let ((let136 (ite let5 let21 let24)))
  (let ((let137 (= let87 let136)))
  (let ((let138 (ite let12 let21 let24)))
  (let ((let139 (= let62 let138)))
  (let ((let140 (ite let10 let21 let24)))
  (let ((let141 (= let70 let140)))
  (let ((let142 (ite let2 let21 let24)))
  (let ((let143 (= let92 let142)))
  (let ((let144 (ite let18 let21 let24)))
  (let ((let145 (= let53 let144)))
  (let ((let146 (ite let15 let21 let24)))
  (let ((let147 (= let56 let146)))
  (let ((let148 (and let147 let145 let143 let141 let139 let137 let135 let133 let131 let129 let127 let125)))
  (let ((let149 (and let148 let123)))
  (let ((let150 (=> let149 let27)))
  (let ((let151 (not let150)))
  let151
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
