(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun x13 () Bool)
(declare-fun x12 () Bool)
(declare-fun x11 () Bool)
(declare-fun x10 () Bool)
(declare-fun x9 () Bool)
(declare-fun x8 () Bool)
(declare-fun x7 () Bool)
(declare-fun x6 () Bool)
(declare-fun x5 () Bool)
(declare-fun x4 () Bool)
(declare-fun x3 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1 () Bool)
(declare-fun x0 () Bool)
(declare-fun return_n13 () FF0)
(declare-fun x10_n3 () FF0)
(declare-fun x13_n6 () FF0)
(declare-fun x11_n9 () FF0)
(declare-fun x6_n12 () FF0)
(declare-fun x4_n2 () FF0)
(declare-fun x3_n5 () FF0)
(declare-fun x5_n8 () FF0)
(declare-fun x7_n11 () FF0)
(declare-fun x2_n14 () FF0)
(declare-fun x8_n1 () FF0)
(declare-fun x0_n4 () FF0)
(declare-fun x9_n7 () FF0)
(declare-fun x1_n10 () FF0)
(declare-fun x12_n0 () FF0)
(declare-fun is_zero_inv_n15 () FF0)
(assert 
  (let ((let0 x13))
  (let ((let1 x12))
  (let ((let2 x11))
  (let ((let3 x10))
  (let ((let4 x9))
  (let ((let5 x8))
  (let ((let6 x7))
  (let ((let7 x6))
  (let ((let8 x5))
  (let ((let9 x4))
  (let ((let10 x3))
  (let ((let11 x2))
  (let ((let12 x1))
  (let ((let13 x0))
  (let ((let14 (and let13 let12 let11 let10 let9 let8 let7 let6 let5 let4 let3 let2 let1 let0)))
  (let ((let15 return_n13))
  (let ((let16 (as ff1 FF0)))
  (let ((let17 (= let16 let15)))
  (let ((let18 (= let17 let14)))
  (let ((let19 (as ff0 FF0)))
  (let ((let20 (= let19 let15)))
  (let ((let21 (or let17 let20)))
  (let ((let22 (and let21 let18)))
  (let ((let23 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let24 (ff.mul let15 let23)))
  (let ((let25 (ff.add let24 let16)))
  (let ((let26 (as ff14 FF0)))
  (let ((let27 x10_n3))
  (let ((let28 (ff.mul let27 let23)))
  (let ((let29 x13_n6))
  (let ((let30 (ff.mul let29 let23)))
  (let ((let31 x11_n9))
  (let ((let32 (ff.mul let31 let23)))
  (let ((let33 x6_n12))
  (let ((let34 (ff.mul let33 let23)))
  (let ((let35 x4_n2))
  (let ((let36 (ff.mul let35 let23)))
  (let ((let37 x3_n5))
  (let ((let38 (ff.mul let37 let23)))
  (let ((let39 x5_n8))
  (let ((let40 (ff.mul let39 let23)))
  (let ((let41 x7_n11))
  (let ((let42 (ff.mul let41 let23)))
  (let ((let43 x2_n14))
  (let ((let44 (ff.mul let43 let23)))
  (let ((let45 x8_n1))
  (let ((let46 (ff.mul let45 let23)))
  (let ((let47 x0_n4))
  (let ((let48 (ff.mul let47 let23)))
  (let ((let49 x9_n7))
  (let ((let50 (ff.mul let49 let23)))
  (let ((let51 x1_n10))
  (let ((let52 (ff.mul let51 let23)))
  (let ((let53 x12_n0))
  (let ((let54 (ff.mul let53 let23)))
  (let ((let55 (ff.add let54 let52 let50 let48 let46 let44 let42 let40 let38 let36 let34 let32 let30 let28 let26)))
  (let ((let56 is_zero_inv_n15))
  (let ((let57 (ff.mul let56 let55)))
  (let ((let58 (= let57 let25)))
  (let ((let59 (ite let4 let16 let19)))
  (let ((let60 (= let49 let59)))
  (let ((let61 (ite let1 let16 let19)))
  (let ((let62 (= let53 let61)))
  (let ((let63 (ite let10 let16 let19)))
  (let ((let64 (= let37 let63)))
  (let ((let65 (ite let13 let16 let19)))
  (let ((let66 (= let47 let65)))
  (let ((let67 (ite let3 let16 let19)))
  (let ((let68 (= let27 let67)))
  (let ((let69 (ite let7 let16 let19)))
  (let ((let70 (= let33 let69)))
  (let ((let71 (ite let0 let16 let19)))
  (let ((let72 (= let29 let71)))
  (let ((let73 (ite let5 let16 let19)))
  (let ((let74 (= let45 let73)))
  (let ((let75 (ite let12 let16 let19)))
  (let ((let76 (= let51 let75)))
  (let ((let77 (ite let9 let16 let19)))
  (let ((let78 (= let35 let77)))
  (let ((let79 (ite let6 let16 let19)))
  (let ((let80 (= let41 let79)))
  (let ((let81 (ite let8 let16 let19)))
  (let ((let82 (= let39 let81)))
  (let ((let83 (ite let2 let16 let19)))
  (let ((let84 (= let31 let83)))
  (let ((let85 (ite let11 let16 let19)))
  (let ((let86 (= let43 let85)))
  (let ((let87 (and let86 let84 let82 let80 let78 let76 let74 let72 let70 let68 let66 let64 let62 let60)))
  (let ((let88 (and let87 let58)))
  (let ((let89 (=> let88 let22)))
  (let ((let90 (not let89)))
  let90
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
