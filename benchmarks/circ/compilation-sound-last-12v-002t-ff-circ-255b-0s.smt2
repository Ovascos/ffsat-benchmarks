(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun j () Bool)
(declare-fun c () Bool)
(declare-fun l () Bool)
(declare-fun k () Bool)
(declare-fun i () Bool)
(declare-fun h () Bool)
(declare-fun g () Bool)
(declare-fun f () Bool)
(declare-fun e () Bool)
(declare-fun d () Bool)
(declare-fun b () Bool)
(declare-fun a () Bool)
(declare-fun return_n9 () FF0)
(declare-fun k_n3 () FF0)
(declare-fun d_n6 () FF0)
(declare-fun a_n12 () FF0)
(declare-fun f_n2 () FF0)
(declare-fun j_n5 () FF0)
(declare-fun c_n8 () FF0)
(declare-fun h_n11 () FF0)
(declare-fun l_n1 () FF0)
(declare-fun e_n4 () FF0)
(declare-fun i_n7 () FF0)
(declare-fun b_n10 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun g_n0 () FF0)
(declare-fun is_zero_inv_n14 () FF0)
(assert 
  (let ((let0 j))
  (let ((let1 c))
  (let ((let2 (= let1 let0)))
  (let ((let3 l))
  (let ((let4 k))
  (let ((let5 i))
  (let ((let6 h))
  (let ((let7 g))
  (let ((let8 f))
  (let ((let9 e))
  (let ((let10 d))
  (let ((let11 b))
  (let ((let12 a))
  (let ((let13 (and let12 let11 let10 let9 let8 let7 let6 let5 let4 let3 let2)))
  (let ((let14 return_n9))
  (let ((let15 (as ff1 FF0)))
  (let ((let16 (= let15 let14)))
  (let ((let17 (= let16 let13)))
  (let ((let18 (as ff0 FF0)))
  (let ((let19 (= let18 let14)))
  (let ((let20 (or let16 let19)))
  (let ((let21 (and let20 let17)))
  (let ((let22 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let23 (ff.mul let14 let22)))
  (let ((let24 (ff.add let23 let15)))
  (let ((let25 (as ff10 FF0)))
  (let ((let26 k_n3))
  (let ((let27 (ff.mul let26 let22)))
  (let ((let28 d_n6))
  (let ((let29 (ff.mul let28 let22)))
  (let ((let30 a_n12))
  (let ((let31 (ff.mul let30 let22)))
  (let ((let32 f_n2))
  (let ((let33 (ff.mul let32 let22)))
  (let ((let34 j_n5))
  (let ((let35 c_n8))
  (let ((let36 h_n11))
  (let ((let37 (ff.mul let36 let22)))
  (let ((let38 l_n1))
  (let ((let39 (ff.mul let38 let22)))
  (let ((let40 e_n4))
  (let ((let41 (ff.mul let40 let22)))
  (let ((let42 i_n7))
  (let ((let43 (ff.mul let42 let22)))
  (let ((let44 b_n10))
  (let ((let45 (ff.mul let44 let22)))
  (let ((let46 mul_n13))
  (let ((let47 (ff.mul let46 let22)))
  (let ((let48 g_n0))
  (let ((let49 (ff.mul let48 let22)))
  (let ((let50 (ff.add let49 let47 let45 let43 let41 let39 let37 let35 let34 let33 let31 let29 let27 let25)))
  (let ((let51 is_zero_inv_n14))
  (let ((let52 (ff.mul let51 let50)))
  (let ((let53 (= let52 let24)))
  (let ((let54 (as ff2 FF0)))
  (let ((let55 (ff.mul let35 let54)))
  (let ((let56 (ff.mul let55 let34)))
  (let ((let57 (= let56 let46)))
  (let ((let58 (and let57 let53)))
  (let ((let59 (ite let9 let15 let18)))
  (let ((let60 (= let40 let59)))
  (let ((let61 (ite let12 let15 let18)))
  (let ((let62 (= let30 let61)))
  (let ((let63 (ite let7 let15 let18)))
  (let ((let64 (= let48 let63)))
  (let ((let65 (ite let11 let15 let18)))
  (let ((let66 (= let44 let65)))
  (let ((let67 (ite let5 let15 let18)))
  (let ((let68 (= let42 let67)))
  (let ((let69 (ite let10 let15 let18)))
  (let ((let70 (= let28 let69)))
  (let ((let71 (ite let8 let15 let18)))
  (let ((let72 (= let32 let71)))
  (let ((let73 (ite let6 let15 let18)))
  (let ((let74 (= let36 let73)))
  (let ((let75 (ite let4 let15 let18)))
  (let ((let76 (= let26 let75)))
  (let ((let77 (ite let3 let15 let18)))
  (let ((let78 (= let38 let77)))
  (let ((let79 (ite let1 let15 let18)))
  (let ((let80 (= let35 let79)))
  (let ((let81 (ite let0 let15 let18)))
  (let ((let82 (= let34 let81)))
  (let ((let83 (and let82 let80 let78 let76 let74 let72 let70 let68 let66 let64 let62 let60)))
  (let ((let84 (and let83 let58)))
  (let ((let85 (=> let84 let21)))
  (let ((let86 (not let85)))
  let86
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
