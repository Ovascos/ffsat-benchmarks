(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun c () Bool)
(declare-fun a () Bool)
(declare-fun d () Bool)
(declare-fun j () Bool)
(declare-fun i () Bool)
(declare-fun h () Bool)
(declare-fun g () Bool)
(declare-fun f () Bool)
(declare-fun e () Bool)
(declare-fun b () Bool)
(declare-fun out () FF0)
(declare-fun _22 () FF0)
(declare-fun _14 () FF0)
(declare-fun _13 () FF0)
(declare-fun _21 () FF0)
(declare-fun _9 () FF0)
(declare-fun _20 () FF0)
(declare-fun _8 () FF0)
(declare-fun _19 () FF0)
(declare-fun _7 () FF0)
(declare-fun _18 () FF0)
(declare-fun _6 () FF0)
(declare-fun _17 () FF0)
(declare-fun _16 () FF0)
(declare-fun _4 () FF0)
(declare-fun _1 () FF0)
(declare-fun _2 () FF0)
(declare-fun _3 () FF0)
(declare-fun _0 () FF0)
(declare-fun _5 () FF0)
(assert 
  (let ((let0 c))
  (let ((let1 a))
  (let ((let2 d))
  (let ((let3 (ite let2 let1 let0)))
  (let ((let4 j))
  (let ((let5 i))
  (let ((let6 h))
  (let ((let7 g))
  (let ((let8 f))
  (let ((let9 e))
  (let ((let10 b))
  (let ((let11 (and let10 let9 let8 let7 let6 let5 let4 let3)))
  (let ((let12 out))
  (let ((let13 (as ff1 FF0)))
  (let ((let14 (= let13 let12)))
  (let ((let15 (= let14 let11)))
  (let ((let16 (as ff0 FF0)))
  (let ((let17 (= let16 let12)))
  (let ((let18 (or let14 let17)))
  (let ((let19 (and let18 let15)))
  (let ((let20 _22))
  (let ((let21 (= let20 let12)))
  (let ((let22 _14))
  (let ((let23 _13))
  (let ((let24 (ff.add let23 let22)))
  (let ((let25 _21))
  (let ((let26 (ff.mul let25 let24)))
  (let ((let27 (= let26 let20)))
  (let ((let28 _9))
  (let ((let29 _20))
  (let ((let30 (ff.mul let29 let28)))
  (let ((let31 (= let30 let25)))
  (let ((let32 _8))
  (let ((let33 _19))
  (let ((let34 (ff.mul let33 let32)))
  (let ((let35 (= let34 let29)))
  (let ((let36 _7))
  (let ((let37 _18))
  (let ((let38 (ff.mul let37 let36)))
  (let ((let39 (= let38 let33)))
  (let ((let40 _6))
  (let ((let41 _17))
  (let ((let42 (ff.mul let41 let40)))
  (let ((let43 (= let42 let37)))
  (let ((let44 _16))
  (let ((let45 _4))
  (let ((let46 _1))
  (let ((let47 (ff.mul let46 let45)))
  (let ((let48 (= let47 let44)))
  (let ((let49 _2))
  (let ((let50 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let51 _3))
  (let ((let52 (ff.mul let51 let50)))
  (let ((let53 (ff.add let52 let13)))
  (let ((let54 (ff.mul let53 let49)))
  (let ((let55 (= let54 let22)))
  (let ((let56 _0))
  (let ((let57 (ff.mul let51 let56)))
  (let ((let58 (= let57 let23)))
  (let ((let59 (ff.mul let28 let28)))
  (let ((let60 (= let59 let28)))
  (let ((let61 (ff.mul let32 let32)))
  (let ((let62 (= let61 let32)))
  (let ((let63 (ff.mul let36 let36)))
  (let ((let64 (= let63 let36)))
  (let ((let65 (ff.mul let40 let40)))
  (let ((let66 (= let65 let40)))
  (let ((let67 _5))
  (let ((let68 (ff.mul let67 let67)))
  (let ((let69 (= let68 let67)))
  (let ((let70 (ff.mul let45 let45)))
  (let ((let71 (= let70 let45)))
  (let ((let72 (ff.mul let51 let51)))
  (let ((let73 (= let72 let51)))
  (let ((let74 (ff.mul let49 let49)))
  (let ((let75 (= let74 let49)))
  (let ((let76 (ff.mul let46 let46)))
  (let ((let77 (= let76 let46)))
  (let ((let78 (ff.mul let56 let56)))
  (let ((let79 (= let78 let56)))
  (let ((let80 (and let79 let77 let75 let73 let71 let69 let66 let64 let62 let60 let58 let55 let48 let43 let39 let35 let31 let27 let21)))
  (let ((let81 (ite let5 let13 let16)))
  (let ((let82 (= let32 let81)))
  (let ((let83 (ite let7 let13 let16)))
  (let ((let84 (= let40 let83)))
  (let ((let85 (ite let1 let13 let16)))
  (let ((let86 (= let56 let85)))
  (let ((let87 (ite let6 let13 let16)))
  (let ((let88 (= let36 let87)))
  (let ((let89 (ite let2 let13 let16)))
  (let ((let90 (= let51 let89)))
  (let ((let91 (ite let0 let13 let16)))
  (let ((let92 (= let49 let91)))
  (let ((let93 (ite let10 let13 let16)))
  (let ((let94 (= let46 let93)))
  (let ((let95 (ite let9 let13 let16)))
  (let ((let96 (= let45 let95)))
  (let ((let97 (ite let8 let13 let16)))
  (let ((let98 (= let67 let97)))
  (let ((let99 (ite let4 let13 let16)))
  (let ((let100 (= let28 let99)))
  (let ((let101 (and let100 let98 let96 let94 let92 let90 let88 let86 let84 let82)))
  (let ((let102 (and let101 let80)))
  (let ((let103 (=> let102 let19)))
  (let ((let104 (not let103)))
  let104
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
