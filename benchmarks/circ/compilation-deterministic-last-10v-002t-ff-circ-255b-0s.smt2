(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun return_n7_alt () FF0)
(declare-fun j_n3_alt () FF0)
(declare-fun h_n9_alt () FF0)
(declare-fun e_n2_alt () FF0)
(declare-fun i_n5_alt () FF0)
(declare-fun mul_n11_alt () FF0)
(declare-fun f_n1_alt () FF0)
(declare-fun d_n4_alt () FF0)
(declare-fun a_n10_alt () FF0)
(declare-fun g_n0_alt () FF0)
(declare-fun is_zero_inv_n12_alt () FF0)
(declare-fun c_n6_alt () FF0)
(declare-fun b_n8_alt () FF0)
(declare-fun return_n7 () FF0)
(declare-fun j_n3 () FF0)
(declare-fun h_n9 () FF0)
(declare-fun e_n2 () FF0)
(declare-fun i_n5 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun f_n1 () FF0)
(declare-fun d_n4 () FF0)
(declare-fun a_n10 () FF0)
(declare-fun g_n0 () FF0)
(declare-fun is_zero_inv_n12 () FF0)
(declare-fun c_n6 () FF0)
(declare-fun b_n8 () FF0)
(assert 
  (let ((let0 return_n7_alt))
  (let ((let1 (as ff1 FF0)))
  (let ((let2 j_n3_alt))
  (let ((let3 h_n9_alt))
  (let ((let4 e_n2_alt))
  (let ((let5 i_n5_alt))
  (let ((let6 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let7 mul_n11_alt))
  (let ((let8 (ff.mul let7 let6)))
  (let ((let9 f_n1_alt))
  (let ((let10 d_n4_alt))
  (let ((let11 a_n10_alt))
  (let ((let12 g_n0_alt))
  (let ((let13 (ff.add let12 let11 let10 let9 let8 let5 let4 let3 let2 let1)))
  (let ((let14 is_zero_inv_n12_alt))
  (let ((let15 (ff.mul let14 let13)))
  (let ((let16 (= let15 let0)))
  (let ((let17 c_n6_alt))
  (let ((let18 (ff.mul let17 let6)))
  (let ((let19 (ff.add let18 let1)))
  (let ((let20 b_n8_alt))
  (let ((let21 (ff.mul let20 let19)))
  (let ((let22 (= let21 let7)))
  (let ((let23 (and let22 let16)))
  (let ((let24 return_n7))
  (let ((let25 j_n3))
  (let ((let26 h_n9))
  (let ((let27 e_n2))
  (let ((let28 i_n5))
  (let ((let29 mul_n11))
  (let ((let30 (ff.mul let29 let6)))
  (let ((let31 f_n1))
  (let ((let32 d_n4))
  (let ((let33 a_n10))
  (let ((let34 g_n0))
  (let ((let35 (ff.add let34 let33 let32 let31 let30 let28 let27 let26 let25 let1)))
  (let ((let36 is_zero_inv_n12))
  (let ((let37 (ff.mul let36 let35)))
  (let ((let38 (= let37 let24)))
  (let ((let39 c_n6))
  (let ((let40 (ff.mul let39 let6)))
  (let ((let41 (ff.add let40 let1)))
  (let ((let42 b_n8))
  (let ((let43 (ff.mul let42 let41)))
  (let ((let44 (= let43 let29)))
  (let ((let45 (and let44 let38)))
  (let ((let46 (= let24 let0)))
  (let ((let47 (not let46)))
  (let ((let48 (= let33 let11)))
  (let ((let49 (= let39 let17)))
  (let ((let50 (= let32 let10)))
  (let ((let51 (= let28 let5)))
  (let ((let52 (= let26 let3)))
  (let ((let53 (= let27 let4)))
  (let ((let54 (= let25 let2)))
  (let ((let55 (= let34 let12)))
  (let ((let56 (= let31 let9)))
  (let ((let57 (= let42 let20)))
  (let ((let58 (and let57 let56 let55 let54 let53 let52 let51 let50 let49 let48)))
  (let ((let59 (and let58 let47 let45 let23)))
  let59
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
