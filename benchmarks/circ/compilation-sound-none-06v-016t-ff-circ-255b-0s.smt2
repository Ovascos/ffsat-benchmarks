(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun b () Bool)
(declare-fun a () Bool)
(declare-fun f () Bool)
(declare-fun d () Bool)
(declare-fun c () Bool)
(declare-fun e () Bool)
(declare-fun return_n3 () FF0)
(declare-fun mul_n17 () FF0)
(declare-fun mul_n8 () FF0)
(declare-fun mul_n23 () FF0)
(declare-fun is_zero_n19 () FF0)
(declare-fun mul_n22 () FF0)
(declare-fun mul_n21 () FF0)
(declare-fun is_zero_n12 () FF0)
(declare-fun mul_n20 () FF0)
(declare-fun b_n4 () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun mul_n15 () FF0)
(declare-fun c_n2 () FF0)
(declare-fun mul_n16 () FF0)
(declare-fun is_zero_inv_n18 () FF0)
(declare-fun f_n5 () FF0)
(declare-fun d_n1 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun e_n6 () FF0)
(declare-fun a_n0 () FF0)
(declare-fun is_zero_inv_n11 () FF0)
(declare-fun mul_n7 () FF0)
(assert 
  (let ((let0 b))
  (let ((let1 a))
  (let ((let2 f))
  (let ((let3 (or let2 let1 let0)))
  (let ((let4 (not let3)))
  (let ((let5 d))
  (let ((let6 c))
  (let ((let7 (= let6 let5)))
  (let ((let8 e))
  (let ((let9 (ite let8 let2 let3)))
  (let ((let10 (or let1 let0 let6 let8 let1 let2 let5 let0 let5 let6 let8)))
  (let ((let11 (ite let7 let10 let9)))
  (let ((let12 (or let11 let7)))
  (let ((let13 (ite let9 let3 let12)))
  (let ((let14 (=> let13 let12)))
  (let ((let15 (ite let14 let2 let4)))
  (let ((let16 (or let10 let13 let6 let14)))
  (let ((let17 (not let16)))
  (let ((let18 (or let9 let0 let4)))
  (let ((let19 (=> let18 let10)))
  (let ((let20 (ite let18 let19 let17)))
  (let ((let21 (and let20 let15)))
  (let ((let22 return_n3))
  (let ((let23 (as ff1 FF0)))
  (let ((let24 (= let23 let22)))
  (let ((let25 (= let24 let21)))
  (let ((let26 (as ff0 FF0)))
  (let ((let27 (= let26 let22)))
  (let ((let28 (or let24 let27)))
  (let ((let29 (and let28 let25)))
  (let ((let30 mul_n17))
  (let ((let31 mul_n8))
  (let ((let32 (ff.add let31 let30)))
  (let ((let33 mul_n23))
  (let ((let34 is_zero_n19))
  (let ((let35 (ff.add let34 let33)))
  (let ((let36 (ff.mul let35 let32)))
  (let ((let37 (= let36 let22)))
  (let ((let38 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let39 (ff.mul let34 let38)))
  (let ((let40 mul_n22))
  (let ((let41 (ff.mul let40 let38)))
  (let ((let42 (ff.add let41 let39 let23)))
  (let ((let43 mul_n21))
  (let ((let44 (ff.mul let43 let38)))
  (let ((let45 (ff.add let44 let23)))
  (let ((let46 (ff.mul let45 let42)))
  (let ((let47 (= let46 let33)))
  (let ((let48 is_zero_n12))
  (let ((let49 (ff.mul let45 let48)))
  (let ((let50 (= let49 let40)))
  (let ((let51 (ff.mul let31 let38)))
  (let ((let52 (ff.add let51 let23)))
  (let ((let53 mul_n20))
  (let ((let54 (ff.mul let53 let52)))
  (let ((let55 (= let54 let43)))
  (let ((let56 b_n4))
  (let ((let57 (ff.mul let56 let38)))
  (let ((let58 (ff.add let57 let23)))
  (let ((let59 mul_n10))
  (let ((let60 (ff.mul let59 let38)))
  (let ((let61 (ff.add let31 let60)))
  (let ((let62 (ff.mul let61 let58)))
  (let ((let63 (= let62 let53)))
  (let ((let64 (as ff3 FF0)))
  (let ((let65 mul_n14))
  (let ((let66 (ff.mul let65 let38)))
  (let ((let67 (ff.mul let48 let38)))
  (let ((let68 mul_n15))
  (let ((let69 c_n2))
  (let ((let70 mul_n16))
  (let ((let71 (ff.mul let70 let38)))
  (let ((let72 (ff.add let71 let69 let68 let67 let66 let64)))
  (let ((let73 (ff.mul let34 let72)))
  (let ((let74 (= let73 let26)))
  (let ((let75 (ff.add let39 let23)))
  (let ((let76 is_zero_inv_n18))
  (let ((let77 (ff.mul let76 let72)))
  (let ((let78 (= let77 let75)))
  (let ((let79 f_n5))
  (let ((let80 (ff.add let51 let79)))
  (let ((let81 (ff.add let71 let23)))
  (let ((let82 (ff.mul let81 let80)))
  (let ((let83 (= let82 let30)))
  (let ((let84 (ff.add let66 let68 let23)))
  (let ((let85 (ff.mul let84 let65)))
  (let ((let86 (= let85 let70)))
  (let ((let87 (ff.add let51 let65)))
  (let ((let88 (ff.add let51 let59 let23)))
  (let ((let89 (ff.mul let88 let87)))
  (let ((let90 (= let89 let68)))
  (let ((let91 d_n1))
  (let ((let92 mul_n9))
  (let ((let93 (ff.mul let92 let38)))
  (let ((let94 (ff.add let93 let69 let91)))
  (let ((let95 mul_n13))
  (let ((let96 (ff.mul let95 let38)))
  (let ((let97 (ff.add let31 let96 let60)))
  (let ((let98 (ff.mul let97 let94)))
  (let ((let99 (= let98 let65)))
  (let ((let100 (ff.add let67 let31 let60)))
  (let ((let101 (ff.mul let91 let38)))
  (let ((let102 (ff.mul let69 let38)))
  (let ((let103 (ff.add let92 let102 let101 let23)))
  (let ((let104 (ff.mul let103 let100)))
  (let ((let105 (= let104 let95)))
  (let ((let106 (as ff2 FF0)))
  (let ((let107 e_n6))
  (let ((let108 (ff.mul let107 let106)))
  (let ((let109 (ff.mul let91 let106)))
  (let ((let110 (ff.mul let56 let106)))
  (let ((let111 (ff.mul let69 let106)))
  (let ((let112 a_n0))
  (let ((let113 (ff.mul let112 let106)))
  (let ((let114 (ff.add let113 let79 let111 let110 let109 let108)))
  (let ((let115 (ff.mul let48 let114)))
  (let ((let116 (= let115 let26)))
  (let ((let117 (ff.add let67 let23)))
  (let ((let118 is_zero_inv_n11))
  (let ((let119 (ff.mul let118 let114)))
  (let ((let120 (= let119 let117)))
  (let ((let121 (ff.add let31 let79 let38)))
  (let ((let122 (ff.mul let107 let121)))
  (let ((let123 (= let122 let59)))
  (let ((let124 (ff.mul let111 let91)))
  (let ((let125 (= let124 let92)))
  (let ((let126 mul_n7))
  (let ((let127 (ff.mul let126 let58)))
  (let ((let128 (= let127 let31)))
  (let ((let129 (ff.mul let112 let38)))
  (let ((let130 (ff.add let129 let23)))
  (let ((let131 (ff.mul let79 let38)))
  (let ((let132 (ff.add let131 let23)))
  (let ((let133 (ff.mul let132 let130)))
  (let ((let134 (= let133 let126)))
  (let ((let135 (and let134 let128 let125 let123 let120 let116 let105 let99 let90 let86 let83 let78 let74 let63 let55 let50 let47 let37)))
  (let ((let136 (ite let5 let23 let26)))
  (let ((let137 (= let91 let136)))
  (let ((let138 (ite let2 let23 let26)))
  (let ((let139 (= let79 let138)))
  (let ((let140 (ite let1 let23 let26)))
  (let ((let141 (= let112 let140)))
  (let ((let142 (ite let6 let23 let26)))
  (let ((let143 (= let69 let142)))
  (let ((let144 (ite let8 let23 let26)))
  (let ((let145 (= let107 let144)))
  (let ((let146 (ite let0 let23 let26)))
  (let ((let147 (= let56 let146)))
  (let ((let148 (and let147 let145 let143 let141 let139 let137)))
  (let ((let149 (and let148 let135)))
  (let ((let150 (=> let149 let29)))
  (let ((let151 (not let150)))
  let151
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
