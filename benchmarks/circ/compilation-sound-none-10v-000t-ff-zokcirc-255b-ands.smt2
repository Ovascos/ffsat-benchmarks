(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun x9 () Bool)
(declare-fun x8 () Bool)
(declare-fun x7 () Bool)
(declare-fun x6 () Bool)
(declare-fun x5 () Bool)
(declare-fun x4 () Bool)
(declare-fun x3 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1 () Bool)
(declare-fun x0 () Bool)
(declare-fun return_n8 () FF0)
(declare-fun x9_n10 () FF0)
(declare-fun mul_n18 () FF0)
(declare-fun x8_n1 () FF0)
(declare-fun mul_n17 () FF0)
(declare-fun x7_n4 () FF0)
(declare-fun mul_n16 () FF0)
(declare-fun x6_n6 () FF0)
(declare-fun mul_n15 () FF0)
(declare-fun x5_n0 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun x4_n2 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun x3_n7 () FF0)
(declare-fun mul_n12 () FF0)
(declare-fun x2_n9 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun x1_n3 () FF0)
(declare-fun x0_n5 () FF0)
(assert 
  (let ((let0 x9))
  (let ((let1 x8))
  (let ((let2 x7))
  (let ((let3 x6))
  (let ((let4 x5))
  (let ((let5 x4))
  (let ((let6 x3))
  (let ((let7 x2))
  (let ((let8 x1))
  (let ((let9 x0))
  (let ((let10 (and let9 let8 let7 let6 let5 let4 let3 let2 let1 let0)))
  (let ((let11 return_n8))
  (let ((let12 (as ff1 FF0)))
  (let ((let13 (= let12 let11)))
  (let ((let14 (= let13 let10)))
  (let ((let15 (as ff0 FF0)))
  (let ((let16 (= let15 let11)))
  (let ((let17 (or let13 let16)))
  (let ((let18 (and let17 let14)))
  (let ((let19 x9_n10))
  (let ((let20 mul_n18))
  (let ((let21 (ff.mul let20 let19)))
  (let ((let22 (= let21 let11)))
  (let ((let23 x8_n1))
  (let ((let24 mul_n17))
  (let ((let25 (ff.mul let24 let23)))
  (let ((let26 (= let25 let20)))
  (let ((let27 x7_n4))
  (let ((let28 mul_n16))
  (let ((let29 (ff.mul let28 let27)))
  (let ((let30 (= let29 let24)))
  (let ((let31 x6_n6))
  (let ((let32 mul_n15))
  (let ((let33 (ff.mul let32 let31)))
  (let ((let34 (= let33 let28)))
  (let ((let35 x5_n0))
  (let ((let36 mul_n14))
  (let ((let37 (ff.mul let36 let35)))
  (let ((let38 (= let37 let32)))
  (let ((let39 x4_n2))
  (let ((let40 mul_n13))
  (let ((let41 (ff.mul let40 let39)))
  (let ((let42 (= let41 let36)))
  (let ((let43 x3_n7))
  (let ((let44 mul_n12))
  (let ((let45 (ff.mul let44 let43)))
  (let ((let46 (= let45 let40)))
  (let ((let47 x2_n9))
  (let ((let48 mul_n11))
  (let ((let49 (ff.mul let48 let47)))
  (let ((let50 (= let49 let44)))
  (let ((let51 x1_n3))
  (let ((let52 x0_n5))
  (let ((let53 (ff.mul let52 let51)))
  (let ((let54 (= let53 let48)))
  (let ((let55 (and let54 let50 let46 let42 let38 let34 let30 let26 let22)))
  (let ((let56 (ite let6 let12 let15)))
  (let ((let57 (= let43 let56)))
  (let ((let58 (ite let7 let12 let15)))
  (let ((let59 (= let47 let58)))
  (let ((let60 (ite let5 let12 let15)))
  (let ((let61 (= let39 let60)))
  (let ((let62 (ite let4 let12 let15)))
  (let ((let63 (= let35 let62)))
  (let ((let64 (ite let8 let12 let15)))
  (let ((let65 (= let51 let64)))
  (let ((let66 (ite let0 let12 let15)))
  (let ((let67 (= let19 let66)))
  (let ((let68 (ite let2 let12 let15)))
  (let ((let69 (= let27 let68)))
  (let ((let70 (ite let3 let12 let15)))
  (let ((let71 (= let31 let70)))
  (let ((let72 (ite let9 let12 let15)))
  (let ((let73 (= let52 let72)))
  (let ((let74 (ite let1 let12 let15)))
  (let ((let75 (= let23 let74)))
  (let ((let76 (and let75 let73 let71 let69 let67 let65 let63 let61 let59 let57)))
  (let ((let77 (and let76 let55)))
  (let ((let78 (=> let77 let18)))
  (let ((let79 (not let78)))
  let79
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
