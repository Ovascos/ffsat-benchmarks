(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun x9 () Bool)
(declare-fun x8 () Bool)
(declare-fun x7 () Bool)
(declare-fun x6 () Bool)
(declare-fun x5 () Bool)
(declare-fun x4 () Bool)
(declare-fun x3 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1 () Bool)
(declare-fun x0 () Bool)
(declare-fun return_n8 () FF0)
(declare-fun mul_n18 () FF0)
(declare-fun x8_n1 () FF0)
(declare-fun mul_n17 () FF0)
(declare-fun x7_n4 () FF0)
(declare-fun mul_n16 () FF0)
(declare-fun x6_n6 () FF0)
(declare-fun mul_n15 () FF0)
(declare-fun x5_n0 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun x4_n2 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun x3_n7 () FF0)
(declare-fun mul_n12 () FF0)
(declare-fun x2_n9 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun x1_n3 () FF0)
(declare-fun x0_n5 () FF0)
(declare-fun x9_n10 () FF0)
(assert 
  (let ((let0 x9))
  (let ((let1 x8))
  (let ((let2 x7))
  (let ((let3 x6))
  (let ((let4 x5))
  (let ((let5 x4))
  (let ((let6 x3))
  (let ((let7 x2))
  (let ((let8 x1))
  (let ((let9 x0))
  (let ((let10 (and let9 let8 let7 let6 let5 let4 let3 let2 let1 let0)))
  (let ((let11 return_n8))
  (let ((let12 (as ff1 FF0)))
  (let ((let13 (= let12 let11)))
  (let ((let14 (= let13 let10)))
  (let ((let15 (as ff0 FF0)))
  (let ((let16 (= let15 let11)))
  (let ((let17 (or let13 let16)))
  (let ((let18 (and let17 let14)))
  (let ((let19 mul_n18))
  (let ((let20 x8_n1))
  (let ((let21 mul_n17))
  (let ((let22 (ff.mul let21 let20)))
  (let ((let23 (= let22 let19)))
  (let ((let24 x7_n4))
  (let ((let25 mul_n16))
  (let ((let26 (ff.mul let25 let24)))
  (let ((let27 (= let26 let21)))
  (let ((let28 x6_n6))
  (let ((let29 mul_n15))
  (let ((let30 (ff.mul let29 let28)))
  (let ((let31 (= let30 let25)))
  (let ((let32 x5_n0))
  (let ((let33 mul_n14))
  (let ((let34 (ff.mul let33 let32)))
  (let ((let35 (= let34 let29)))
  (let ((let36 x4_n2))
  (let ((let37 mul_n13))
  (let ((let38 (ff.mul let37 let36)))
  (let ((let39 (= let38 let33)))
  (let ((let40 x3_n7))
  (let ((let41 mul_n12))
  (let ((let42 (ff.mul let41 let40)))
  (let ((let43 (= let42 let37)))
  (let ((let44 x2_n9))
  (let ((let45 mul_n11))
  (let ((let46 (ff.mul let45 let44)))
  (let ((let47 (= let46 let41)))
  (let ((let48 x1_n3))
  (let ((let49 x0_n5))
  (let ((let50 (ff.mul let49 let48)))
  (let ((let51 (= let50 let45)))
  (let ((let52 (and let51 let47 let43 let39 let35 let31 let27 let23)))
  (let ((let53 (ite let5 let12 let15)))
  (let ((let54 (= let36 let53)))
  (let ((let55 (ite let2 let12 let15)))
  (let ((let56 (= let24 let55)))
  (let ((let57 (ite let1 let12 let15)))
  (let ((let58 (= let20 let57)))
  (let ((let59 (ite let4 let12 let15)))
  (let ((let60 (= let32 let59)))
  (let ((let61 (ite let7 let12 let15)))
  (let ((let62 (= let44 let61)))
  (let ((let63 (ite let3 let12 let15)))
  (let ((let64 (= let28 let63)))
  (let ((let65 (ite let8 let12 let15)))
  (let ((let66 (= let48 let65)))
  (let ((let67 (ite let6 let12 let15)))
  (let ((let68 (= let40 let67)))
  (let ((let69 (ite let0 let12 let15)))
  (let ((let70 x9_n10))
  (let ((let71 (= let70 let69)))
  (let ((let72 (ite let9 let12 let15)))
  (let ((let73 (= let49 let72)))
  (let ((let74 (and let73 let71 let68 let66 let64 let62 let60 let58 let56 let54)))
  (let ((let75 (and let74 let52)))
  (let ((let76 (=> let75 let18)))
  (let ((let77 (not let76)))
  let77
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
