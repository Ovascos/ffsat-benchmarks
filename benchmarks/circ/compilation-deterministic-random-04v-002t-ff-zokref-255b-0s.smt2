(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun out_alt () FF0)
(declare-fun _6_alt () FF0)
(declare-fun _5_alt () FF0)
(declare-fun _3_alt () FF0)
(declare-fun _4_alt () FF0)
(declare-fun _1_alt () FF0)
(declare-fun _0_alt () FF0)
(declare-fun _2_alt () FF0)
(declare-fun out () FF0)
(declare-fun _6 () FF0)
(declare-fun _5 () FF0)
(declare-fun _3 () FF0)
(declare-fun _4 () FF0)
(declare-fun _1 () FF0)
(declare-fun _0 () FF0)
(declare-fun _2 () FF0)
(assert 
  (let ((let0 out_alt))
  (let ((let1 _6_alt))
  (let ((let2 (= let1 let0)))
  (let ((let3 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let4 (ff.mul let1 let3)))
  (let ((let5 _5_alt))
  (let ((let6 _3_alt))
  (let ((let7 (ff.add let6 let5 let4)))
  (let ((let8 (ff.mul let5 let6)))
  (let ((let9 (= let8 let7)))
  (let ((let10 _4_alt))
  (let ((let11 (ff.mul let10 let3)))
  (let ((let12 _1_alt))
  (let ((let13 _0_alt))
  (let ((let14 (ff.add let13 let12 let11)))
  (let ((let15 (ff.mul let13 let12)))
  (let ((let16 (= let15 let14)))
  (let ((let17 (ff.mul let6 let6)))
  (let ((let18 (= let17 let6)))
  (let ((let19 _2_alt))
  (let ((let20 (ff.mul let19 let19)))
  (let ((let21 (= let20 let19)))
  (let ((let22 (ff.mul let12 let12)))
  (let ((let23 (= let22 let12)))
  (let ((let24 (ff.mul let13 let13)))
  (let ((let25 (= let24 let13)))
  (let ((let26 (and let25 let23 let21 let18 let16 let9 let2)))
  (let ((let27 out))
  (let ((let28 _6))
  (let ((let29 (= let28 let27)))
  (let ((let30 (ff.mul let28 let3)))
  (let ((let31 _5))
  (let ((let32 _3))
  (let ((let33 (ff.add let32 let31 let30)))
  (let ((let34 (ff.mul let31 let32)))
  (let ((let35 (= let34 let33)))
  (let ((let36 _4))
  (let ((let37 (ff.mul let36 let3)))
  (let ((let38 _1))
  (let ((let39 _0))
  (let ((let40 (ff.add let39 let38 let37)))
  (let ((let41 (ff.mul let39 let38)))
  (let ((let42 (= let41 let40)))
  (let ((let43 (ff.mul let32 let32)))
  (let ((let44 (= let43 let32)))
  (let ((let45 _2))
  (let ((let46 (ff.mul let45 let45)))
  (let ((let47 (= let46 let45)))
  (let ((let48 (ff.mul let38 let38)))
  (let ((let49 (= let48 let38)))
  (let ((let50 (ff.mul let39 let39)))
  (let ((let51 (= let50 let39)))
  (let ((let52 (and let51 let49 let47 let44 let42 let35 let29)))
  (let ((let53 (= let27 let0)))
  (let ((let54 (not let53)))
  (let ((let55 (= let38 let12)))
  (let ((let56 (= let45 let19)))
  (let ((let57 (= let32 let6)))
  (let ((let58 (= let39 let13)))
  (let ((let59 (and let58 let57 let56 let55)))
  (let ((let60 (and let59 let54 let52 let26)))
  let60
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
