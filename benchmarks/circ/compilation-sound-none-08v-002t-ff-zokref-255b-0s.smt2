(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun e () Bool)
(declare-fun d () Bool)
(declare-fun h () Bool)
(declare-fun g () Bool)
(declare-fun f () Bool)
(declare-fun c () Bool)
(declare-fun b () Bool)
(declare-fun a () Bool)
(declare-fun out () FF0)
(declare-fun _15 () FF0)
(declare-fun _8 () FF0)
(declare-fun _14 () FF0)
(declare-fun _7 () FF0)
(declare-fun _13 () FF0)
(declare-fun _6 () FF0)
(declare-fun _12 () FF0)
(declare-fun _5 () FF0)
(declare-fun _11 () FF0)
(declare-fun _2 () FF0)
(declare-fun _10 () FF0)
(declare-fun _1 () FF0)
(declare-fun _0 () FF0)
(declare-fun _4 () FF0)
(declare-fun _3 () FF0)
(assert 
  (let ((let0 e))
  (let ((let1 d))
  (let ((let2 (= let1 let0)))
  (let ((let3 h))
  (let ((let4 g))
  (let ((let5 f))
  (let ((let6 c))
  (let ((let7 b))
  (let ((let8 a))
  (let ((let9 (and let8 let7 let6 let5 let4 let3 let2)))
  (let ((let10 out))
  (let ((let11 (as ff1 FF0)))
  (let ((let12 (= let11 let10)))
  (let ((let13 (= let12 let9)))
  (let ((let14 (as ff0 FF0)))
  (let ((let15 (= let14 let10)))
  (let ((let16 (or let12 let15)))
  (let ((let17 (and let16 let13)))
  (let ((let18 _15))
  (let ((let19 (= let18 let10)))
  (let ((let20 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let21 _8))
  (let ((let22 (ff.mul let21 let20)))
  (let ((let23 (ff.add let22 let11)))
  (let ((let24 _14))
  (let ((let25 (ff.mul let24 let23)))
  (let ((let26 (= let25 let18)))
  (let ((let27 _7))
  (let ((let28 _13))
  (let ((let29 (ff.mul let28 let27)))
  (let ((let30 (= let29 let24)))
  (let ((let31 _6))
  (let ((let32 _12))
  (let ((let33 (ff.mul let32 let31)))
  (let ((let34 (= let33 let28)))
  (let ((let35 _5))
  (let ((let36 _11))
  (let ((let37 (ff.mul let36 let35)))
  (let ((let38 (= let37 let32)))
  (let ((let39 _2))
  (let ((let40 _10))
  (let ((let41 (ff.mul let40 let39)))
  (let ((let42 (= let41 let36)))
  (let ((let43 _1))
  (let ((let44 _0))
  (let ((let45 (ff.mul let44 let43)))
  (let ((let46 (= let45 let40)))
  (let ((let47 _4))
  (let ((let48 (ff.mul let47 let20)))
  (let ((let49 _3))
  (let ((let50 (ff.add let49 let48)))
  (let ((let51 (ff.mul let50 let50)))
  (let ((let52 (= let51 let21)))
  (let ((let53 (ff.mul let27 let27)))
  (let ((let54 (= let53 let27)))
  (let ((let55 (ff.mul let31 let31)))
  (let ((let56 (= let55 let31)))
  (let ((let57 (ff.mul let35 let35)))
  (let ((let58 (= let57 let35)))
  (let ((let59 (ff.mul let47 let47)))
  (let ((let60 (= let59 let47)))
  (let ((let61 (ff.mul let49 let49)))
  (let ((let62 (= let61 let49)))
  (let ((let63 (ff.mul let39 let39)))
  (let ((let64 (= let63 let39)))
  (let ((let65 (ff.mul let43 let43)))
  (let ((let66 (= let65 let43)))
  (let ((let67 (ff.mul let44 let44)))
  (let ((let68 (= let67 let44)))
  (let ((let69 (and let68 let66 let64 let62 let60 let58 let56 let54 let52 let46 let42 let38 let34 let30 let26 let19)))
  (let ((let70 (ite let5 let11 let14)))
  (let ((let71 (= let35 let70)))
  (let ((let72 (ite let1 let11 let14)))
  (let ((let73 (= let49 let72)))
  (let ((let74 (ite let8 let11 let14)))
  (let ((let75 (= let44 let74)))
  (let ((let76 (ite let7 let11 let14)))
  (let ((let77 (= let43 let76)))
  (let ((let78 (ite let6 let11 let14)))
  (let ((let79 (= let39 let78)))
  (let ((let80 (ite let3 let11 let14)))
  (let ((let81 (= let27 let80)))
  (let ((let82 (ite let4 let11 let14)))
  (let ((let83 (= let31 let82)))
  (let ((let84 (ite let0 let11 let14)))
  (let ((let85 (= let47 let84)))
  (let ((let86 (and let85 let83 let81 let79 let77 let75 let73 let71)))
  (let ((let87 (and let86 let69)))
  (let ((let88 (=> let87 let17)))
  (let ((let89 (not let88)))
  let89
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
