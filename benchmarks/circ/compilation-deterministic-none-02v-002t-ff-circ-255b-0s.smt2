(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun return_n0_alt () FF0)
(declare-fun b_n1_alt () FF0)
(declare-fun mul_n3_alt () FF0)
(declare-fun a_n2_alt () FF0)
(declare-fun return_n0 () FF0)
(declare-fun b_n1 () FF0)
(declare-fun mul_n3 () FF0)
(declare-fun a_n2 () FF0)
(assert 
  (let ((let0 (as ff1 FF0)))
  (let ((let1 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let2 return_n0_alt))
  (let ((let3 (ff.mul let2 let1)))
  (let ((let4 (ff.add let3 let0)))
  (let ((let5 b_n1_alt))
  (let ((let6 (ff.mul let5 let1)))
  (let ((let7 (ff.add let6 let0)))
  (let ((let8 mul_n3_alt))
  (let ((let9 (ff.mul let8 let7)))
  (let ((let10 (= let9 let4)))
  (let ((let11 a_n2_alt))
  (let ((let12 (ff.mul let11 let1)))
  (let ((let13 (ff.add let12 let0)))
  (let ((let14 (ff.mul let13 let7)))
  (let ((let15 (= let14 let8)))
  (let ((let16 (and let15 let10)))
  (let ((let17 return_n0))
  (let ((let18 (ff.mul let17 let1)))
  (let ((let19 (ff.add let18 let0)))
  (let ((let20 b_n1))
  (let ((let21 (ff.mul let20 let1)))
  (let ((let22 (ff.add let21 let0)))
  (let ((let23 mul_n3))
  (let ((let24 (ff.mul let23 let22)))
  (let ((let25 (= let24 let19)))
  (let ((let26 a_n2))
  (let ((let27 (ff.mul let26 let1)))
  (let ((let28 (ff.add let27 let0)))
  (let ((let29 (ff.mul let28 let22)))
  (let ((let30 (= let29 let23)))
  (let ((let31 (and let30 let25)))
  (let ((let32 (= let17 let2)))
  (let ((let33 (not let32)))
  (let ((let34 (= let26 let11)))
  (let ((let35 (= let20 let5)))
  (let ((let36 (and let35 let34)))
  (let ((let37 (and let36 let33 let31 let16)))
  let37
))))))))))))))))))))))))))))))))))))))
)
(check-sat)
