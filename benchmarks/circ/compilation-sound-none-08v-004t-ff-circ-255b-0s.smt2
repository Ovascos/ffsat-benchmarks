(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun g () Bool)
(declare-fun e () Bool)
(declare-fun a () Bool)
(declare-fun f () Bool)
(declare-fun b () Bool)
(declare-fun c () Bool)
(declare-fun h () Bool)
(declare-fun d () Bool)
(declare-fun return_n7 () FF0)
(declare-fun d_n3 () FF0)
(declare-fun b_n6 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun c_n4 () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun h_n5 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun is_zero_inv_n12 () FF0)
(declare-fun a_n0 () FF0)
(declare-fun f_n1 () FF0)
(declare-fun g_n8 () FF0)
(declare-fun e_n2 () FF0)
(assert 
  (let ((let0 g))
  (let ((let1 e))
  (let ((let2 (or let1 let0)))
  (let ((let3 a))
  (let ((let4 f))
  (let ((let5 (or let4 let3)))
  (let ((let6 b))
  (let ((let7 c))
  (let ((let8 (= let7 let6)))
  (let ((let9 h))
  (let ((let10 d))
  (let ((let11 (and let10 let9 let8 let5 let2)))
  (let ((let12 return_n7))
  (let ((let13 (as ff1 FF0)))
  (let ((let14 (= let13 let12)))
  (let ((let15 (= let14 let11)))
  (let ((let16 (as ff0 FF0)))
  (let ((let17 (= let16 let12)))
  (let ((let18 (or let14 let17)))
  (let ((let19 (and let18 let15)))
  (let ((let20 (as ff2 FF0)))
  (let ((let21 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let22 d_n3))
  (let ((let23 (ff.mul let22 let21)))
  (let ((let24 b_n6))
  (let ((let25 mul_n9))
  (let ((let26 c_n4))
  (let ((let27 mul_n10))
  (let ((let28 h_n5))
  (let ((let29 (ff.mul let28 let21)))
  (let ((let30 mul_n11))
  (let ((let31 (ff.mul let30 let21)))
  (let ((let32 (ff.add let31 let29 let27 let26 let25 let24 let23 let20)))
  (let ((let33 (ff.mul let12 let32)))
  (let ((let34 (= let33 let16)))
  (let ((let35 (ff.mul let12 let21)))
  (let ((let36 (ff.add let35 let13)))
  (let ((let37 is_zero_inv_n12))
  (let ((let38 (ff.mul let37 let32)))
  (let ((let39 (= let38 let36)))
  (let ((let40 (ff.mul let26 let20)))
  (let ((let41 (ff.mul let40 let24)))
  (let ((let42 (= let41 let30)))
  (let ((let43 a_n0))
  (let ((let44 (ff.mul let43 let21)))
  (let ((let45 (ff.add let44 let13)))
  (let ((let46 f_n1))
  (let ((let47 (ff.mul let46 let21)))
  (let ((let48 (ff.add let47 let13)))
  (let ((let49 (ff.mul let48 let45)))
  (let ((let50 (= let49 let27)))
  (let ((let51 g_n8))
  (let ((let52 (ff.mul let51 let21)))
  (let ((let53 (ff.add let52 let13)))
  (let ((let54 e_n2))
  (let ((let55 (ff.mul let54 let21)))
  (let ((let56 (ff.add let55 let13)))
  (let ((let57 (ff.mul let56 let53)))
  (let ((let58 (= let57 let25)))
  (let ((let59 (and let58 let50 let42 let39 let34)))
  (let ((let60 (ite let6 let13 let16)))
  (let ((let61 (= let24 let60)))
  (let ((let62 (ite let3 let13 let16)))
  (let ((let63 (= let43 let62)))
  (let ((let64 (ite let10 let13 let16)))
  (let ((let65 (= let22 let64)))
  (let ((let66 (ite let0 let13 let16)))
  (let ((let67 (= let51 let66)))
  (let ((let68 (ite let7 let13 let16)))
  (let ((let69 (= let26 let68)))
  (let ((let70 (ite let1 let13 let16)))
  (let ((let71 (= let54 let70)))
  (let ((let72 (ite let4 let13 let16)))
  (let ((let73 (= let46 let72)))
  (let ((let74 (ite let9 let13 let16)))
  (let ((let75 (= let28 let74)))
  (let ((let76 (and let75 let73 let71 let69 let67 let65 let63 let61)))
  (let ((let77 (and let76 let59)))
  (let ((let78 (=> let77 let19)))
  (let ((let79 (not let78)))
  let79
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
