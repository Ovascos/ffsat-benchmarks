(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun d () Bool)
(declare-fun a () Bool)
(declare-fun c () Bool)
(declare-fun b () Bool)
(declare-fun return_n2 () FF0)
(declare-fun mul_n22 () FF0)
(declare-fun mul_n15 () FF0)
(declare-fun mul_n17 () FF0)
(declare-fun mul_n21 () FF0)
(declare-fun is_zero_n20 () FF0)
(declare-fun mul_n6 () FF0)
(declare-fun mul_n5 () FF0)
(declare-fun mul_n16 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun mul_n8 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun c_n1 () FF0)
(declare-fun a_n4 () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun is_zero_inv_n19 () FF0)
(declare-fun mul_n18 () FF0)
(declare-fun d_n0 () FF0)
(declare-fun mul_n12 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun b_n3 () FF0)
(declare-fun mul_n7 () FF0)
(assert 
  (let ((let0 d))
  (let ((let1 a))
  (let ((let2 c))
  (let ((let3 (=> let1 let2)))
  (let ((let4 b))
  (let ((let5 (ite let4 let1 let3)))
  (let ((let6 (and let5 let0 let4)))
  (let ((let7 (ite let0 let6 let5)))
  (let ((let8 (= let2 let7)))
  (let ((let9 (ite let7 let8 let1)))
  (let ((let10 (=> let1 let9)))
  (let ((let11 (ite let4 let6 let6)))
  (let ((let12 (and let11 let3 let11)))
  (let ((let13 (ite let12 let10 let5)))
  (let ((let14 (and let13 let10)))
  (let ((let15 (and let14 let0)))
  (let ((let16 (and let8 let3 let8 let9 let3 let6 let9 let2 let7 let5 let11)))
  (let ((let17 (ite let13 let16 let14)))
  (let ((let18 (= let17 let12)))
  (let ((let19 (or let18 let15)))
  (let ((let20 return_n2))
  (let ((let21 (as ff1 FF0)))
  (let ((let22 (= let21 let20)))
  (let ((let23 (= let22 let19)))
  (let ((let24 (as ff0 FF0)))
  (let ((let25 (= let24 let20)))
  (let ((let26 (or let22 let25)))
  (let ((let27 (and let26 let23)))
  (let ((let28 mul_n22))
  (let ((let29 mul_n15))
  (let ((let30 (as ff2 FF0)))
  (let ((let31 mul_n17))
  (let ((let32 (ff.mul let31 let30)))
  (let ((let33 mul_n21))
  (let ((let34 (ff.mul let33 let30)))
  (let ((let35 (ff.add let34 let32)))
  (let ((let36 (ff.mul let35 let29)))
  (let ((let37 (= let36 let28)))
  (let ((let38 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let39 (ff.mul let31 let38)))
  (let ((let40 is_zero_n20))
  (let ((let41 (ff.add let40 let39)))
  (let ((let42 mul_n6))
  (let ((let43 mul_n5))
  (let ((let44 (ff.mul let43 let38)))
  (let ((let45 mul_n16))
  (let ((let46 (ff.add let45 let44 let42 let21)))
  (let ((let47 (ff.mul let46 let41)))
  (let ((let48 (= let47 let33)))
  (let ((let49 (as ff7 FF0)))
  (let ((let50 mul_n9))
  (let ((let51 (ff.mul let43 let30)))
  (let ((let52 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184511 FF0)))
  (let ((let53 mul_n8))
  (let ((let54 (ff.mul let53 let52)))
  (let ((let55 mul_n11))
  (let ((let56 (ff.mul let55 let52)))
  (let ((let57 c_n1))
  (let ((let58 a_n4))
  (let ((let59 (ff.mul let58 let52)))
  (let ((let60 mul_n10))
  (let ((let61 (ff.mul let60 let52)))
  (let ((let62 (ff.add let61 let59 let57 let56 let54 let51 let50 let49)))
  (let ((let63 (ff.mul let40 let62)))
  (let ((let64 (= let63 let24)))
  (let ((let65 (ff.mul let40 let38)))
  (let ((let66 (ff.add let65 let21)))
  (let ((let67 is_zero_inv_n19))
  (let ((let68 (ff.mul let67 let62)))
  (let ((let69 (= let68 let66)))
  (let ((let70 mul_n18))
  (let ((let71 d_n0))
  (let ((let72 (ff.mul let31 let71)))
  (let ((let73 (= let72 let70)))
  (let ((let74 mul_n12))
  (let ((let75 (ff.mul let74 let38)))
  (let ((let76 (ff.add let75 let21)))
  (let ((let77 (ff.mul let46 let76)))
  (let ((let78 (= let77 let31)))
  (let ((let79 (ff.mul let42 let38)))
  (let ((let80 (ff.add let75 let43 let79)))
  (let ((let81 (ff.mul let29 let80)))
  (let ((let82 (= let81 let45)))
  (let ((let83 mul_n14))
  (let ((let84 (ff.mul let83 let53)))
  (let ((let85 (= let84 let29)))
  (let ((let86 (ff.add let44 let21)))
  (let ((let87 (ff.mul let53 let86)))
  (let ((let88 (= let87 let83)))
  (let ((let89 (ff.mul let55 let38)))
  (let ((let90 (ff.mul let58 let38)))
  (let ((let91 (ff.add let90 let89 let21)))
  (let ((let92 (ff.mul let58 let91)))
  (let ((let93 (= let92 let74)))
  (let ((let94 (ff.mul let50 let38)))
  (let ((let95 (ff.mul let57 let38)))
  (let ((let96 (ff.add let43 let60 let90 let95 let94 let79)))
  (let ((let97 (ff.add let50 let44 let42 let21)))
  (let ((let98 (ff.mul let97 let96)))
  (let ((let99 (= let98 let55)))
  (let ((let100 (ff.mul let57 let30)))
  (let ((let101 (ff.mul let100 let97)))
  (let ((let102 (= let101 let60)))
  (let ((let103 (ff.add let53 let43 let79 let38)))
  (let ((let104 (ff.mul let71 let103)))
  (let ((let105 (= let104 let50)))
  (let ((let106 b_n3))
  (let ((let107 mul_n7))
  (let ((let108 (ff.mul let107 let106)))
  (let ((let109 (= let108 let53)))
  (let ((let110 (ff.add let44 let42 let21)))
  (let ((let111 (ff.mul let110 let71)))
  (let ((let112 (= let111 let107)))
  (let ((let113 (ff.add let58 let43 let38)))
  (let ((let114 (ff.mul let106 let113)))
  (let ((let115 (= let114 let42)))
  (let ((let116 (ff.add let95 let21)))
  (let ((let117 (ff.mul let58 let116)))
  (let ((let118 (= let117 let43)))
  (let ((let119 (and let118 let115 let112 let109 let105 let102 let99 let93 let88 let85 let82 let78 let73 let69 let64 let48 let37)))
  (let ((let120 (ite let2 let21 let24)))
  (let ((let121 (= let57 let120)))
  (let ((let122 (ite let0 let21 let24)))
  (let ((let123 (= let71 let122)))
  (let ((let124 (ite let4 let21 let24)))
  (let ((let125 (= let106 let124)))
  (let ((let126 (ite let1 let21 let24)))
  (let ((let127 (= let58 let126)))
  (let ((let128 (and let127 let125 let123 let121)))
  (let ((let129 (and let128 let119)))
  (let ((let130 (=> let129 let27)))
  (let ((let131 (not let130)))
  let131
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
