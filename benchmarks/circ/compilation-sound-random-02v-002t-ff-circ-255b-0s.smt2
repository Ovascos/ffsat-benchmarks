(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun a () Bool)
(declare-fun b () Bool)
(declare-fun return_n0 () FF0)
(declare-fun a_n2 () FF0)
(declare-fun b_n1 () FF0)
(assert 
  (let ((let0 a))
  (let ((let1 (not let0)))
  (let ((let2 b))
  (let ((let3 (and let2 let1)))
  (let ((let4 return_n0))
  (let ((let5 (as ff1 FF0)))
  (let ((let6 (= let5 let4)))
  (let ((let7 (= let6 let3)))
  (let ((let8 (as ff0 FF0)))
  (let ((let9 (= let8 let4)))
  (let ((let10 (or let6 let9)))
  (let ((let11 (and let10 let7)))
  (let ((let12 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let13 a_n2))
  (let ((let14 (ff.mul let13 let12)))
  (let ((let15 (ff.add let14 let5)))
  (let ((let16 b_n1))
  (let ((let17 (ff.mul let16 let15)))
  (let ((let18 (= let17 let4)))
  (let ((let19 (ite let2 let5 let8)))
  (let ((let20 (= let16 let19)))
  (let ((let21 (ite let0 let5 let8)))
  (let ((let22 (= let13 let21)))
  (let ((let23 (and let22 let20)))
  (let ((let24 (and let23 let18)))
  (let ((let25 (=> let24 let11)))
  (let ((let26 (not let25)))
  let26
)))))))))))))))))))))))))))
)
(check-sat)
