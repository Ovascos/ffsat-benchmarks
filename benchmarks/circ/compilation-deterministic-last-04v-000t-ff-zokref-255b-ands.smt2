(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun _6_alt () FF0)
(declare-fun _3_alt () FF0)
(declare-fun _5_alt () FF0)
(declare-fun _2_alt () FF0)
(declare-fun _4_alt () FF0)
(declare-fun _1_alt () FF0)
(declare-fun _0_alt () FF0)
(declare-fun _6 () FF0)
(declare-fun _3 () FF0)
(declare-fun _5 () FF0)
(declare-fun _2 () FF0)
(declare-fun _4 () FF0)
(declare-fun _1 () FF0)
(declare-fun _0 () FF0)
(declare-fun out_alt () FF0)
(declare-fun out () FF0)
(assert 
  (let ((let0 _6_alt))
  (let ((let1 _3_alt))
  (let ((let2 _5_alt))
  (let ((let3 (ff.mul let2 let1)))
  (let ((let4 (= let3 let0)))
  (let ((let5 _2_alt))
  (let ((let6 _4_alt))
  (let ((let7 (ff.mul let6 let5)))
  (let ((let8 (= let7 let2)))
  (let ((let9 _1_alt))
  (let ((let10 _0_alt))
  (let ((let11 (ff.mul let10 let9)))
  (let ((let12 (= let11 let6)))
  (let ((let13 (ff.mul let1 let1)))
  (let ((let14 (= let13 let1)))
  (let ((let15 (ff.mul let5 let5)))
  (let ((let16 (= let15 let5)))
  (let ((let17 (ff.mul let9 let9)))
  (let ((let18 (= let17 let9)))
  (let ((let19 (ff.mul let10 let10)))
  (let ((let20 (= let19 let10)))
  (let ((let21 (and let20 let18 let16 let14 let12 let8 let4)))
  (let ((let22 _6))
  (let ((let23 _3))
  (let ((let24 _5))
  (let ((let25 (ff.mul let24 let23)))
  (let ((let26 (= let25 let22)))
  (let ((let27 _2))
  (let ((let28 _4))
  (let ((let29 (ff.mul let28 let27)))
  (let ((let30 (= let29 let24)))
  (let ((let31 _1))
  (let ((let32 _0))
  (let ((let33 (ff.mul let32 let31)))
  (let ((let34 (= let33 let28)))
  (let ((let35 (ff.mul let23 let23)))
  (let ((let36 (= let35 let23)))
  (let ((let37 (ff.mul let27 let27)))
  (let ((let38 (= let37 let27)))
  (let ((let39 (ff.mul let31 let31)))
  (let ((let40 (= let39 let31)))
  (let ((let41 (ff.mul let32 let32)))
  (let ((let42 (= let41 let32)))
  (let ((let43 (and let42 let40 let38 let36 let34 let30 let26)))
  (let ((let44 out_alt))
  (let ((let45 out))
  (let ((let46 (= let45 let44)))
  (let ((let47 (not let46)))
  (let ((let48 (= let27 let5)))
  (let ((let49 (= let32 let10)))
  (let ((let50 (= let31 let9)))
  (let ((let51 (= let23 let1)))
  (let ((let52 (and let51 let50 let49 let48)))
  (let ((let53 (and let52 let47 let43 let21)))
  let53
))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
