(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun x9 () Bool)
(declare-fun x8 () Bool)
(declare-fun x7 () Bool)
(declare-fun x6 () Bool)
(declare-fun x5 () Bool)
(declare-fun x4 () Bool)
(declare-fun x3 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1 () Bool)
(declare-fun x0 () Bool)
(declare-fun return_n8 () FF0)
(declare-fun mul_n18 () FF0)
(declare-fun x8_n1 () FF0)
(declare-fun mul_n17 () FF0)
(declare-fun x7_n4 () FF0)
(declare-fun mul_n16 () FF0)
(declare-fun x6_n6 () FF0)
(declare-fun mul_n15 () FF0)
(declare-fun x5_n0 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun x4_n2 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun x3_n7 () FF0)
(declare-fun mul_n12 () FF0)
(declare-fun x2_n9 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun x1_n3 () FF0)
(declare-fun x0_n5 () FF0)
(declare-fun x9_n10 () FF0)
(assert 
  (let ((let0 x9))
  (let ((let1 x8))
  (let ((let2 x7))
  (let ((let3 x6))
  (let ((let4 x5))
  (let ((let5 x4))
  (let ((let6 x3))
  (let ((let7 x2))
  (let ((let8 x1))
  (let ((let9 x0))
  (let ((let10 (or let9 let8 let7 let6 let5 let4 let3 let2 let1 let0)))
  (let ((let11 return_n8))
  (let ((let12 (as ff1 FF0)))
  (let ((let13 (= let12 let11)))
  (let ((let14 (= let13 let10)))
  (let ((let15 (as ff0 FF0)))
  (let ((let16 (= let15 let11)))
  (let ((let17 (or let13 let16)))
  (let ((let18 (and let17 let14)))
  (let ((let19 mul_n18))
  (let ((let20 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let21 x8_n1))
  (let ((let22 (ff.mul let21 let20)))
  (let ((let23 (ff.add let22 let12)))
  (let ((let24 mul_n17))
  (let ((let25 (ff.mul let24 let23)))
  (let ((let26 (= let25 let19)))
  (let ((let27 x7_n4))
  (let ((let28 (ff.mul let27 let20)))
  (let ((let29 (ff.add let28 let12)))
  (let ((let30 mul_n16))
  (let ((let31 (ff.mul let30 let29)))
  (let ((let32 (= let31 let24)))
  (let ((let33 x6_n6))
  (let ((let34 (ff.mul let33 let20)))
  (let ((let35 (ff.add let34 let12)))
  (let ((let36 mul_n15))
  (let ((let37 (ff.mul let36 let35)))
  (let ((let38 (= let37 let30)))
  (let ((let39 x5_n0))
  (let ((let40 (ff.mul let39 let20)))
  (let ((let41 (ff.add let40 let12)))
  (let ((let42 mul_n14))
  (let ((let43 (ff.mul let42 let41)))
  (let ((let44 (= let43 let36)))
  (let ((let45 x4_n2))
  (let ((let46 (ff.mul let45 let20)))
  (let ((let47 (ff.add let46 let12)))
  (let ((let48 mul_n13))
  (let ((let49 (ff.mul let48 let47)))
  (let ((let50 (= let49 let42)))
  (let ((let51 x3_n7))
  (let ((let52 (ff.mul let51 let20)))
  (let ((let53 (ff.add let52 let12)))
  (let ((let54 mul_n12))
  (let ((let55 (ff.mul let54 let53)))
  (let ((let56 (= let55 let48)))
  (let ((let57 x2_n9))
  (let ((let58 (ff.mul let57 let20)))
  (let ((let59 (ff.add let58 let12)))
  (let ((let60 mul_n11))
  (let ((let61 (ff.mul let60 let59)))
  (let ((let62 (= let61 let54)))
  (let ((let63 x1_n3))
  (let ((let64 (ff.mul let63 let20)))
  (let ((let65 (ff.add let64 let12)))
  (let ((let66 x0_n5))
  (let ((let67 (ff.mul let66 let20)))
  (let ((let68 (ff.add let67 let12)))
  (let ((let69 (ff.mul let68 let65)))
  (let ((let70 (= let69 let60)))
  (let ((let71 (and let70 let62 let56 let50 let44 let38 let32 let26)))
  (let ((let72 (ite let7 let12 let15)))
  (let ((let73 (= let57 let72)))
  (let ((let74 (ite let4 let12 let15)))
  (let ((let75 (= let39 let74)))
  (let ((let76 (ite let6 let12 let15)))
  (let ((let77 (= let51 let76)))
  (let ((let78 (ite let3 let12 let15)))
  (let ((let79 (= let33 let78)))
  (let ((let80 (ite let5 let12 let15)))
  (let ((let81 (= let45 let80)))
  (let ((let82 (ite let9 let12 let15)))
  (let ((let83 (= let66 let82)))
  (let ((let84 (ite let1 let12 let15)))
  (let ((let85 (= let21 let84)))
  (let ((let86 (ite let8 let12 let15)))
  (let ((let87 (= let63 let86)))
  (let ((let88 (ite let0 let12 let15)))
  (let ((let89 x9_n10))
  (let ((let90 (= let89 let88)))
  (let ((let91 (ite let2 let12 let15)))
  (let ((let92 (= let27 let91)))
  (let ((let93 (and let92 let90 let87 let85 let83 let81 let79 let77 let75 let73)))
  (let ((let94 (and let93 let71)))
  (let ((let95 (=> let94 let18)))
  (let ((let96 (not let95)))
  let96
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
