(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun c () Bool)
(declare-fun a () Bool)
(declare-fun d () Bool)
(declare-fun j () Bool)
(declare-fun i () Bool)
(declare-fun h () Bool)
(declare-fun g () Bool)
(declare-fun f () Bool)
(declare-fun e () Bool)
(declare-fun b () Bool)
(declare-fun return_n0 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun c_n6 () FF0)
(declare-fun mul_n17 () FF0)
(declare-fun j_n3 () FF0)
(declare-fun mul_n16 () FF0)
(declare-fun i_n5 () FF0)
(declare-fun mul_n15 () FF0)
(declare-fun h_n7 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun g_n9 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun f_n1 () FF0)
(declare-fun mul_n12 () FF0)
(declare-fun e_n2 () FF0)
(declare-fun b_n8 () FF0)
(declare-fun a_n10 () FF0)
(declare-fun d_n4 () FF0)
(assert 
  (let ((let0 c))
  (let ((let1 a))
  (let ((let2 d))
  (let ((let3 (ite let2 let1 let0)))
  (let ((let4 j))
  (let ((let5 i))
  (let ((let6 h))
  (let ((let7 g))
  (let ((let8 f))
  (let ((let9 e))
  (let ((let10 b))
  (let ((let11 (and let10 let9 let8 let7 let6 let5 let4 let3)))
  (let ((let12 return_n0))
  (let ((let13 (as ff1 FF0)))
  (let ((let14 (= let13 let12)))
  (let ((let15 (= let14 let11)))
  (let ((let16 (as ff0 FF0)))
  (let ((let17 (= let16 let12)))
  (let ((let18 (or let14 let17)))
  (let ((let19 (and let18 let15)))
  (let ((let20 mul_n11))
  (let ((let21 c_n6))
  (let ((let22 (ff.add let21 let20)))
  (let ((let23 mul_n17))
  (let ((let24 (ff.mul let23 let22)))
  (let ((let25 (= let24 let12)))
  (let ((let26 j_n3))
  (let ((let27 mul_n16))
  (let ((let28 (ff.mul let27 let26)))
  (let ((let29 (= let28 let23)))
  (let ((let30 i_n5))
  (let ((let31 mul_n15))
  (let ((let32 (ff.mul let31 let30)))
  (let ((let33 (= let32 let27)))
  (let ((let34 h_n7))
  (let ((let35 mul_n14))
  (let ((let36 (ff.mul let35 let34)))
  (let ((let37 (= let36 let31)))
  (let ((let38 g_n9))
  (let ((let39 mul_n13))
  (let ((let40 (ff.mul let39 let38)))
  (let ((let41 (= let40 let35)))
  (let ((let42 f_n1))
  (let ((let43 mul_n12))
  (let ((let44 (ff.mul let43 let42)))
  (let ((let45 (= let44 let39)))
  (let ((let46 e_n2))
  (let ((let47 b_n8))
  (let ((let48 (ff.mul let47 let46)))
  (let ((let49 (= let48 let43)))
  (let ((let50 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let51 (ff.mul let21 let50)))
  (let ((let52 a_n10))
  (let ((let53 (ff.add let52 let51)))
  (let ((let54 d_n4))
  (let ((let55 (ff.mul let54 let53)))
  (let ((let56 (= let55 let20)))
  (let ((let57 (and let56 let49 let45 let41 let37 let33 let29 let25)))
  (let ((let58 (ite let2 let13 let16)))
  (let ((let59 (= let54 let58)))
  (let ((let60 (ite let10 let13 let16)))
  (let ((let61 (= let47 let60)))
  (let ((let62 (ite let1 let13 let16)))
  (let ((let63 (= let52 let62)))
  (let ((let64 (ite let4 let13 let16)))
  (let ((let65 (= let26 let64)))
  (let ((let66 (ite let9 let13 let16)))
  (let ((let67 (= let46 let66)))
  (let ((let68 (ite let5 let13 let16)))
  (let ((let69 (= let30 let68)))
  (let ((let70 (ite let0 let13 let16)))
  (let ((let71 (= let21 let70)))
  (let ((let72 (ite let7 let13 let16)))
  (let ((let73 (= let38 let72)))
  (let ((let74 (ite let6 let13 let16)))
  (let ((let75 (= let34 let74)))
  (let ((let76 (ite let8 let13 let16)))
  (let ((let77 (= let42 let76)))
  (let ((let78 (and let77 let75 let73 let71 let69 let67 let65 let63 let61 let59)))
  (let ((let79 (and let78 let57)))
  (let ((let80 (=> let79 let19)))
  (let ((let81 (not let80)))
  let81
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
