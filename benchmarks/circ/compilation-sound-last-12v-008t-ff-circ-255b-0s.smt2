(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun i () Bool)
(declare-fun b () Bool)
(declare-fun d () Bool)
(declare-fun g () Bool)
(declare-fun a () Bool)
(declare-fun j () Bool)
(declare-fun f () Bool)
(declare-fun l () Bool)
(declare-fun e () Bool)
(declare-fun h () Bool)
(declare-fun c () Bool)
(declare-fun k () Bool)
(declare-fun return_n10 () FF0)
(declare-fun mul_n19 () FF0)
(declare-fun h_n9 () FF0)
(declare-fun l_n12 () FF0)
(declare-fun mul_n18 () FF0)
(declare-fun j_n5 () FF0)
(declare-fun c_n8 () FF0)
(declare-fun mul_n17 () FF0)
(declare-fun e_n4 () FF0)
(declare-fun mul_n16 () FF0)
(declare-fun k_n3 () FF0)
(declare-fun is_zero_inv_n20 () FF0)
(declare-fun f_n2 () FF0)
(declare-fun i_n7 () FF0)
(declare-fun mul_n15 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun a_n1 () FF0)
(declare-fun g_n0 () FF0)
(declare-fun b_n11 () FF0)
(declare-fun d_n6 () FF0)
(assert 
  (let ((let0 i))
  (let ((let1 b))
  (let ((let2 d))
  (let ((let3 (=> let2 let1)))
  (let ((let4 g))
  (let ((let5 a))
  (let ((let6 (= let5 let4)))
  (let ((let7 (and let6 let3 let0)))
  (let ((let8 j))
  (let ((let9 (not let8)))
  (let ((let10 f))
  (let ((let11 (=> let10 let10)))
  (let ((let12 l))
  (let ((let13 e))
  (let ((let14 (= let13 let12)))
  (let ((let15 h))
  (let ((let16 c))
  (let ((let17 (= let16 let15)))
  (let ((let18 k))
  (let ((let19 (and let18 let17 let14 let11 let9 let7)))
  (let ((let20 return_n10))
  (let ((let21 (as ff1 FF0)))
  (let ((let22 (= let21 let20)))
  (let ((let23 (= let22 let19)))
  (let ((let24 (as ff0 FF0)))
  (let ((let25 (= let24 let20)))
  (let ((let26 (or let22 let25)))
  (let ((let27 (and let26 let23)))
  (let ((let28 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let29 (ff.mul let20 let28)))
  (let ((let30 (ff.add let29 let21)))
  (let ((let31 (as ff2 FF0)))
  (let ((let32 mul_n19))
  (let ((let33 (ff.mul let32 let28)))
  (let ((let34 h_n9))
  (let ((let35 l_n12))
  (let ((let36 mul_n18))
  (let ((let37 (ff.mul let36 let28)))
  (let ((let38 j_n5))
  (let ((let39 c_n8))
  (let ((let40 mul_n17))
  (let ((let41 e_n4))
  (let ((let42 mul_n16))
  (let ((let43 (ff.mul let42 let28)))
  (let ((let44 k_n3))
  (let ((let45 (ff.mul let44 let28)))
  (let ((let46 (ff.add let45 let43 let41 let40 let39 let38 let37 let35 let34 let33 let31)))
  (let ((let47 is_zero_inv_n20))
  (let ((let48 (ff.mul let47 let46)))
  (let ((let49 (= let48 let30)))
  (let ((let50 (ff.mul let39 let31)))
  (let ((let51 (ff.mul let50 let34)))
  (let ((let52 (= let51 let32)))
  (let ((let53 (ff.mul let41 let31)))
  (let ((let54 (ff.mul let53 let35)))
  (let ((let55 (= let54 let36)))
  (let ((let56 f_n2))
  (let ((let57 (ff.mul let56 let28)))
  (let ((let58 (ff.add let57 let21)))
  (let ((let59 (ff.mul let56 let58)))
  (let ((let60 (= let59 let40)))
  (let ((let61 i_n7))
  (let ((let62 mul_n15))
  (let ((let63 (ff.mul let62 let61)))
  (let ((let64 (= let63 let42)))
  (let ((let65 mul_n13))
  (let ((let66 (ff.mul let65 let28)))
  (let ((let67 (ff.add let66 let21)))
  (let ((let68 mul_n14))
  (let ((let69 a_n1))
  (let ((let70 (ff.mul let69 let28)))
  (let ((let71 g_n0))
  (let ((let72 (ff.mul let71 let28)))
  (let ((let73 (ff.add let72 let70 let68 let21)))
  (let ((let74 (ff.mul let73 let67)))
  (let ((let75 (= let74 let62)))
  (let ((let76 (ff.mul let69 let31)))
  (let ((let77 (ff.mul let76 let71)))
  (let ((let78 (= let77 let68)))
  (let ((let79 b_n11))
  (let ((let80 (ff.mul let79 let28)))
  (let ((let81 (ff.add let80 let21)))
  (let ((let82 d_n6))
  (let ((let83 (ff.mul let82 let81)))
  (let ((let84 (= let83 let65)))
  (let ((let85 (and let84 let78 let75 let64 let60 let55 let52 let49)))
  (let ((let86 (ite let12 let21 let24)))
  (let ((let87 (= let35 let86)))
  (let ((let88 (ite let0 let21 let24)))
  (let ((let89 (= let61 let88)))
  (let ((let90 (ite let8 let21 let24)))
  (let ((let91 (= let38 let90)))
  (let ((let92 (ite let15 let21 let24)))
  (let ((let93 (= let34 let92)))
  (let ((let94 (ite let13 let21 let24)))
  (let ((let95 (= let41 let94)))
  (let ((let96 (ite let4 let21 let24)))
  (let ((let97 (= let71 let96)))
  (let ((let98 (ite let10 let21 let24)))
  (let ((let99 (= let56 let98)))
  (let ((let100 (ite let18 let21 let24)))
  (let ((let101 (= let44 let100)))
  (let ((let102 (ite let16 let21 let24)))
  (let ((let103 (= let39 let102)))
  (let ((let104 (ite let5 let21 let24)))
  (let ((let105 (= let69 let104)))
  (let ((let106 (ite let2 let21 let24)))
  (let ((let107 (= let82 let106)))
  (let ((let108 (ite let1 let21 let24)))
  (let ((let109 (= let79 let108)))
  (let ((let110 (and let109 let107 let105 let103 let101 let99 let97 let95 let93 let91 let89 let87)))
  (let ((let111 (and let110 let85)))
  (let ((let112 (=> let111 let27)))
  (let ((let113 (not let112)))
  let113
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
