(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun x3 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1 () Bool)
(declare-fun x0 () Bool)
(declare-fun out () FF0)
(declare-fun _6 () FF0)
(declare-fun _3 () FF0)
(declare-fun _5 () FF0)
(declare-fun _2 () FF0)
(declare-fun _4 () FF0)
(declare-fun _1 () FF0)
(declare-fun _0 () FF0)
(assert 
  (let ((let0 x3))
  (let ((let1 x2))
  (let ((let2 x1))
  (let ((let3 x0))
  (let ((let4 (and let3 let2 let1 let0)))
  (let ((let5 out))
  (let ((let6 (as ff1 FF0)))
  (let ((let7 (= let6 let5)))
  (let ((let8 (= let7 let4)))
  (let ((let9 (as ff0 FF0)))
  (let ((let10 (= let9 let5)))
  (let ((let11 (or let7 let10)))
  (let ((let12 (and let11 let8)))
  (let ((let13 _6))
  (let ((let14 _3))
  (let ((let15 _5))
  (let ((let16 (ff.mul let15 let14)))
  (let ((let17 (= let16 let13)))
  (let ((let18 _2))
  (let ((let19 _4))
  (let ((let20 (ff.mul let19 let18)))
  (let ((let21 (= let20 let15)))
  (let ((let22 _1))
  (let ((let23 _0))
  (let ((let24 (ff.mul let23 let22)))
  (let ((let25 (= let24 let19)))
  (let ((let26 (ff.mul let14 let14)))
  (let ((let27 (= let26 let14)))
  (let ((let28 (ff.mul let18 let18)))
  (let ((let29 (= let28 let18)))
  (let ((let30 (ff.mul let22 let22)))
  (let ((let31 (= let30 let22)))
  (let ((let32 (ff.mul let23 let23)))
  (let ((let33 (= let32 let23)))
  (let ((let34 (and let33 let31 let29 let27 let25 let21 let17)))
  (let ((let35 (ite let0 let6 let9)))
  (let ((let36 (= let14 let35)))
  (let ((let37 (ite let2 let6 let9)))
  (let ((let38 (= let22 let37)))
  (let ((let39 (ite let3 let6 let9)))
  (let ((let40 (= let23 let39)))
  (let ((let41 (ite let1 let6 let9)))
  (let ((let42 (= let18 let41)))
  (let ((let43 (and let42 let40 let38 let36)))
  (let ((let44 (and let43 let34)))
  (let ((let45 (=> let44 let12)))
  (let ((let46 (not let45)))
  let46
)))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
