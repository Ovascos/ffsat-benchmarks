(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun b () Bool)
(declare-fun e () Bool)
(declare-fun d () Bool)
(declare-fun a () Bool)
(declare-fun c () Bool)
(declare-fun f () Bool)
(declare-fun g () Bool)
(declare-fun j () Bool)
(declare-fun i () Bool)
(declare-fun h () Bool)
(declare-fun return_n8 () FF0)
(declare-fun h_n7 () FF0)
(declare-fun mul_n15 () FF0)
(declare-fun is_zero_n13 () FF0)
(declare-fun i_n5 () FF0)
(declare-fun is_zero_inv_n16 () FF0)
(declare-fun g_n10 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun j_n3 () FF0)
(declare-fun e_n2 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun b_n9 () FF0)
(declare-fun f_n1 () FF0)
(declare-fun d_n4 () FF0)
(declare-fun is_zero_inv_n12 () FF0)
(declare-fun a_n0 () FF0)
(declare-fun c_n6 () FF0)
(assert 
  (let ((let0 b))
  (let ((let1 e))
  (let ((let2 d))
  (let ((let3 a))
  (let ((let4 c))
  (let ((let5 (=> let4 let3)))
  (let ((let6 f))
  (let ((let7 (or let6 let5 let2 let1 let0)))
  (let ((let8 g))
  (let ((let9 j))
  (let ((let10 (or let1 let9 let8)))
  (let ((let11 i))
  (let ((let12 h))
  (let ((let13 (and let12 let11 let10 let7)))
  (let ((let14 return_n8))
  (let ((let15 (as ff1 FF0)))
  (let ((let16 (= let15 let14)))
  (let ((let17 (= let16 let13)))
  (let ((let18 (as ff0 FF0)))
  (let ((let19 (= let18 let14)))
  (let ((let20 (or let16 let19)))
  (let ((let21 (and let20 let17)))
  (let ((let22 (as ff2 FF0)))
  (let ((let23 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let24 h_n7))
  (let ((let25 (ff.mul let24 let23)))
  (let ((let26 mul_n15))
  (let ((let27 is_zero_n13))
  (let ((let28 i_n5))
  (let ((let29 (ff.mul let28 let23)))
  (let ((let30 (ff.add let29 let27 let26 let25 let22)))
  (let ((let31 (ff.mul let14 let30)))
  (let ((let32 (= let31 let18)))
  (let ((let33 (ff.mul let14 let23)))
  (let ((let34 (ff.add let33 let15)))
  (let ((let35 is_zero_inv_n16))
  (let ((let36 (ff.mul let35 let30)))
  (let ((let37 (= let36 let34)))
  (let ((let38 g_n10))
  (let ((let39 (ff.mul let38 let23)))
  (let ((let40 (ff.add let39 let15)))
  (let ((let41 mul_n14))
  (let ((let42 (ff.mul let41 let40)))
  (let ((let43 (= let42 let26)))
  (let ((let44 j_n3))
  (let ((let45 (ff.mul let44 let23)))
  (let ((let46 (ff.add let45 let15)))
  (let ((let47 e_n2))
  (let ((let48 (ff.mul let47 let23)))
  (let ((let49 (ff.add let48 let15)))
  (let ((let50 (ff.mul let49 let46)))
  (let ((let51 (= let50 let41)))
  (let ((let52 mul_n11))
  (let ((let53 (ff.mul let52 let23)))
  (let ((let54 b_n9))
  (let ((let55 f_n1))
  (let ((let56 d_n4))
  (let ((let57 (ff.add let47 let56 let55 let54 let53 let15)))
  (let ((let58 (ff.mul let27 let57)))
  (let ((let59 (= let58 let18)))
  (let ((let60 (ff.mul let27 let23)))
  (let ((let61 (ff.add let60 let15)))
  (let ((let62 is_zero_inv_n12))
  (let ((let63 (ff.mul let62 let57)))
  (let ((let64 (= let63 let61)))
  (let ((let65 a_n0))
  (let ((let66 (ff.mul let65 let23)))
  (let ((let67 (ff.add let66 let15)))
  (let ((let68 c_n6))
  (let ((let69 (ff.mul let68 let67)))
  (let ((let70 (= let69 let52)))
  (let ((let71 (and let70 let64 let59 let51 let43 let37 let32)))
  (let ((let72 (ite let3 let15 let18)))
  (let ((let73 (= let65 let72)))
  (let ((let74 (ite let4 let15 let18)))
  (let ((let75 (= let68 let74)))
  (let ((let76 (ite let2 let15 let18)))
  (let ((let77 (= let56 let76)))
  (let ((let78 (ite let12 let15 let18)))
  (let ((let79 (= let24 let78)))
  (let ((let80 (ite let11 let15 let18)))
  (let ((let81 (= let28 let80)))
  (let ((let82 (ite let8 let15 let18)))
  (let ((let83 (= let38 let82)))
  (let ((let84 (ite let0 let15 let18)))
  (let ((let85 (= let54 let84)))
  (let ((let86 (ite let1 let15 let18)))
  (let ((let87 (= let47 let86)))
  (let ((let88 (ite let6 let15 let18)))
  (let ((let89 (= let55 let88)))
  (let ((let90 (ite let9 let15 let18)))
  (let ((let91 (= let44 let90)))
  (let ((let92 (and let91 let89 let87 let85 let83 let81 let79 let77 let75 let73)))
  (let ((let93 (and let92 let71)))
  (let ((let94 (=> let93 let21)))
  (let ((let95 (not let94)))
  let95
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
