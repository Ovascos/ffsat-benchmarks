(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun c () Bool)
(declare-fun b () Bool)
(declare-fun d () Bool)
(declare-fun f () Bool)
(declare-fun e () Bool)
(declare-fun a () Bool)
(declare-fun return_n3 () FF0)
(declare-fun mul_n7 () FF0)
(declare-fun c_n2 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun f_n5 () FF0)
(declare-fun mul_n8 () FF0)
(declare-fun e_n0 () FF0)
(declare-fun a_n6 () FF0)
(declare-fun b_n4 () FF0)
(declare-fun d_n1 () FF0)
(assert 
  (let ((let0 c))
  (let ((let1 b))
  (let ((let2 d))
  (let ((let3 (ite let2 let1 let0)))
  (let ((let4 f))
  (let ((let5 e))
  (let ((let6 a))
  (let ((let7 (or let6 let5 let4 let3)))
  (let ((let8 return_n3))
  (let ((let9 (as ff1 FF0)))
  (let ((let10 (= let9 let8)))
  (let ((let11 (= let10 let7)))
  (let ((let12 (as ff0 FF0)))
  (let ((let13 (= let12 let8)))
  (let ((let14 (or let10 let13)))
  (let ((let15 (and let14 let11)))
  (let ((let16 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let17 (ff.mul let8 let16)))
  (let ((let18 (ff.add let17 let9)))
  (let ((let19 mul_n7))
  (let ((let20 (ff.mul let19 let16)))
  (let ((let21 c_n2))
  (let ((let22 (ff.mul let21 let16)))
  (let ((let23 (ff.add let22 let20 let9)))
  (let ((let24 mul_n9))
  (let ((let25 (ff.mul let24 let23)))
  (let ((let26 (= let25 let18)))
  (let ((let27 f_n5))
  (let ((let28 (ff.mul let27 let16)))
  (let ((let29 (ff.add let28 let9)))
  (let ((let30 mul_n8))
  (let ((let31 (ff.mul let30 let29)))
  (let ((let32 (= let31 let24)))
  (let ((let33 e_n0))
  (let ((let34 (ff.mul let33 let16)))
  (let ((let35 (ff.add let34 let9)))
  (let ((let36 a_n6))
  (let ((let37 (ff.mul let36 let16)))
  (let ((let38 (ff.add let37 let9)))
  (let ((let39 (ff.mul let38 let35)))
  (let ((let40 (= let39 let30)))
  (let ((let41 b_n4))
  (let ((let42 (ff.add let41 let22)))
  (let ((let43 d_n1))
  (let ((let44 (ff.mul let43 let42)))
  (let ((let45 (= let44 let19)))
  (let ((let46 (and let45 let40 let32 let26)))
  (let ((let47 (ite let5 let9 let12)))
  (let ((let48 (= let33 let47)))
  (let ((let49 (ite let0 let9 let12)))
  (let ((let50 (= let21 let49)))
  (let ((let51 (ite let4 let9 let12)))
  (let ((let52 (= let27 let51)))
  (let ((let53 (ite let1 let9 let12)))
  (let ((let54 (= let41 let53)))
  (let ((let55 (ite let6 let9 let12)))
  (let ((let56 (= let36 let55)))
  (let ((let57 (ite let2 let9 let12)))
  (let ((let58 (= let43 let57)))
  (let ((let59 (and let58 let56 let54 let52 let50 let48)))
  (let ((let60 (and let59 let46)))
  (let ((let61 (=> let60 let15)))
  (let ((let62 (not let61)))
  let62
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
