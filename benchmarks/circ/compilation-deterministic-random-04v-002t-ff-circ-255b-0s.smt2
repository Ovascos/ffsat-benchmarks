(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun return_n2_alt () FF0)
(declare-fun b_n3_alt () FF0)
(declare-fun c_n1_alt () FF0)
(declare-fun a_n4_alt () FF0)
(declare-fun d_n0_alt () FF0)
(declare-fun is_zero_inv_n5_alt () FF0)
(declare-fun return_n2 () FF0)
(declare-fun b_n3 () FF0)
(declare-fun c_n1 () FF0)
(declare-fun a_n4 () FF0)
(declare-fun d_n0 () FF0)
(declare-fun is_zero_inv_n5 () FF0)
(assert 
  (let ((let0 return_n2_alt))
  (let ((let1 b_n3_alt))
  (let ((let2 c_n1_alt))
  (let ((let3 a_n4_alt))
  (let ((let4 d_n0_alt))
  (let ((let5 (ff.add let4 let3 let2 let1)))
  (let ((let6 is_zero_inv_n5_alt))
  (let ((let7 (ff.mul let6 let5)))
  (let ((let8 (= let7 let0)))
  (let ((let9 return_n2))
  (let ((let10 b_n3))
  (let ((let11 c_n1))
  (let ((let12 a_n4))
  (let ((let13 d_n0))
  (let ((let14 (ff.add let13 let12 let11 let10)))
  (let ((let15 is_zero_inv_n5))
  (let ((let16 (ff.mul let15 let14)))
  (let ((let17 (= let16 let9)))
  (let ((let18 (= let9 let0)))
  (let ((let19 (not let18)))
  (let ((let20 (= let13 let4)))
  (let ((let21 (= let10 let1)))
  (let ((let22 (= let12 let3)))
  (let ((let23 (= let11 let2)))
  (let ((let24 (and let23 let22 let21 let20)))
  (let ((let25 (and let24 let19 let17 let8)))
  let25
))))))))))))))))))))))))))
)
(check-sat)
