(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun c () Bool)
(declare-fun b () Bool)
(declare-fun d () Bool)
(declare-fun f () Bool)
(declare-fun e () Bool)
(declare-fun a () Bool)
(declare-fun return_n3 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun f_n5 () FF0)
(declare-fun mul_n8 () FF0)
(declare-fun e_n0 () FF0)
(declare-fun a_n6 () FF0)
(declare-fun mul_n7 () FF0)
(declare-fun c_n2 () FF0)
(declare-fun b_n4 () FF0)
(declare-fun d_n1 () FF0)
(assert 
  (let ((let0 c))
  (let ((let1 b))
  (let ((let2 d))
  (let ((let3 (ite let2 let1 let0)))
  (let ((let4 f))
  (let ((let5 e))
  (let ((let6 a))
  (let ((let7 (or let6 let5 let4 let3)))
  (let ((let8 return_n3))
  (let ((let9 (as ff1 FF0)))
  (let ((let10 (= let9 let8)))
  (let ((let11 (= let10 let7)))
  (let ((let12 (as ff0 FF0)))
  (let ((let13 (= let12 let8)))
  (let ((let14 (or let10 let13)))
  (let ((let15 (and let14 let11)))
  (let ((let16 mul_n9))
  (let ((let17 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let18 f_n5))
  (let ((let19 (ff.mul let18 let17)))
  (let ((let20 (ff.add let19 let9)))
  (let ((let21 mul_n8))
  (let ((let22 (ff.mul let21 let20)))
  (let ((let23 (= let22 let16)))
  (let ((let24 e_n0))
  (let ((let25 (ff.mul let24 let17)))
  (let ((let26 (ff.add let25 let9)))
  (let ((let27 a_n6))
  (let ((let28 (ff.mul let27 let17)))
  (let ((let29 (ff.add let28 let9)))
  (let ((let30 (ff.mul let29 let26)))
  (let ((let31 (= let30 let21)))
  (let ((let32 mul_n7))
  (let ((let33 c_n2))
  (let ((let34 (ff.mul let33 let17)))
  (let ((let35 b_n4))
  (let ((let36 (ff.add let35 let34)))
  (let ((let37 d_n1))
  (let ((let38 (ff.mul let37 let36)))
  (let ((let39 (= let38 let32)))
  (let ((let40 (and let39 let31 let23)))
  (let ((let41 (ite let0 let9 let12)))
  (let ((let42 (= let33 let41)))
  (let ((let43 (ite let5 let9 let12)))
  (let ((let44 (= let24 let43)))
  (let ((let45 (ite let4 let9 let12)))
  (let ((let46 (= let18 let45)))
  (let ((let47 (ite let1 let9 let12)))
  (let ((let48 (= let35 let47)))
  (let ((let49 (ite let6 let9 let12)))
  (let ((let50 (= let27 let49)))
  (let ((let51 (ite let2 let9 let12)))
  (let ((let52 (= let37 let51)))
  (let ((let53 (and let52 let50 let48 let46 let44 let42)))
  (let ((let54 (and let53 let40)))
  (let ((let55 (=> let54 let15)))
  (let ((let56 (not let55)))
  let56
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
