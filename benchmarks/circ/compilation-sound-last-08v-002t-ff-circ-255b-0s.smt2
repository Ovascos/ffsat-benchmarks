(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun e () Bool)
(declare-fun d () Bool)
(declare-fun h () Bool)
(declare-fun g () Bool)
(declare-fun f () Bool)
(declare-fun c () Bool)
(declare-fun b () Bool)
(declare-fun a () Bool)
(declare-fun return_n5 () FF0)
(declare-fun d_n3 () FF0)
(declare-fun h_n6 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun e_n2 () FF0)
(declare-fun a_n8 () FF0)
(declare-fun f_n1 () FF0)
(declare-fun c_n4 () FF0)
(declare-fun g_n7 () FF0)
(declare-fun b_n0 () FF0)
(declare-fun is_zero_inv_n10 () FF0)
(assert 
  (let ((let0 e))
  (let ((let1 d))
  (let ((let2 (= let1 let0)))
  (let ((let3 h))
  (let ((let4 g))
  (let ((let5 f))
  (let ((let6 c))
  (let ((let7 b))
  (let ((let8 a))
  (let ((let9 (and let8 let7 let6 let5 let4 let3 let2)))
  (let ((let10 return_n5))
  (let ((let11 (as ff1 FF0)))
  (let ((let12 (= let11 let10)))
  (let ((let13 (= let12 let9)))
  (let ((let14 (as ff0 FF0)))
  (let ((let15 (= let14 let10)))
  (let ((let16 (or let12 let15)))
  (let ((let17 (and let16 let13)))
  (let ((let18 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let19 (ff.mul let10 let18)))
  (let ((let20 (ff.add let19 let11)))
  (let ((let21 (as ff6 FF0)))
  (let ((let22 d_n3))
  (let ((let23 h_n6))
  (let ((let24 (ff.mul let23 let18)))
  (let ((let25 mul_n9))
  (let ((let26 (ff.mul let25 let18)))
  (let ((let27 e_n2))
  (let ((let28 a_n8))
  (let ((let29 (ff.mul let28 let18)))
  (let ((let30 f_n1))
  (let ((let31 (ff.mul let30 let18)))
  (let ((let32 c_n4))
  (let ((let33 (ff.mul let32 let18)))
  (let ((let34 g_n7))
  (let ((let35 (ff.mul let34 let18)))
  (let ((let36 b_n0))
  (let ((let37 (ff.mul let36 let18)))
  (let ((let38 (ff.add let37 let35 let33 let31 let29 let27 let26 let24 let22 let21)))
  (let ((let39 is_zero_inv_n10))
  (let ((let40 (ff.mul let39 let38)))
  (let ((let41 (= let40 let20)))
  (let ((let42 (as ff2 FF0)))
  (let ((let43 (ff.mul let22 let42)))
  (let ((let44 (ff.mul let43 let27)))
  (let ((let45 (= let44 let25)))
  (let ((let46 (and let45 let41)))
  (let ((let47 (ite let0 let11 let14)))
  (let ((let48 (= let27 let47)))
  (let ((let49 (ite let5 let11 let14)))
  (let ((let50 (= let30 let49)))
  (let ((let51 (ite let6 let11 let14)))
  (let ((let52 (= let32 let51)))
  (let ((let53 (ite let8 let11 let14)))
  (let ((let54 (= let28 let53)))
  (let ((let55 (ite let3 let11 let14)))
  (let ((let56 (= let23 let55)))
  (let ((let57 (ite let1 let11 let14)))
  (let ((let58 (= let22 let57)))
  (let ((let59 (ite let4 let11 let14)))
  (let ((let60 (= let34 let59)))
  (let ((let61 (ite let7 let11 let14)))
  (let ((let62 (= let36 let61)))
  (let ((let63 (and let62 let60 let58 let56 let54 let52 let50 let48)))
  (let ((let64 (and let63 let46)))
  (let ((let65 (=> let64 let17)))
  (let ((let66 (not let65)))
  let66
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
