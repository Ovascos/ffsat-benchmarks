(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun x7 () Bool)
(declare-fun x6 () Bool)
(declare-fun x5 () Bool)
(declare-fun x4 () Bool)
(declare-fun x3 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1 () Bool)
(declare-fun x0 () Bool)
(declare-fun return_n6 () FF0)
(declare-fun x7_n3 () FF0)
(declare-fun x1_n2 () FF0)
(declare-fun x6_n5 () FF0)
(declare-fun x2_n8 () FF0)
(declare-fun x4_n1 () FF0)
(declare-fun x0_n4 () FF0)
(declare-fun x3_n7 () FF0)
(declare-fun x5_n0 () FF0)
(declare-fun is_zero_inv_n9 () FF0)
(assert 
  (let ((let0 x7))
  (let ((let1 x6))
  (let ((let2 x5))
  (let ((let3 x4))
  (let ((let4 x3))
  (let ((let5 x2))
  (let ((let6 x1))
  (let ((let7 x0))
  (let ((let8 (and let7 let6 let5 let4 let3 let2 let1 let0)))
  (let ((let9 return_n6))
  (let ((let10 (as ff1 FF0)))
  (let ((let11 (= let10 let9)))
  (let ((let12 (= let11 let8)))
  (let ((let13 (as ff0 FF0)))
  (let ((let14 (= let13 let9)))
  (let ((let15 (or let11 let14)))
  (let ((let16 (and let15 let12)))
  (let ((let17 (as ff8 FF0)))
  (let ((let18 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let19 x7_n3))
  (let ((let20 (ff.mul let19 let18)))
  (let ((let21 x1_n2))
  (let ((let22 (ff.mul let21 let18)))
  (let ((let23 x6_n5))
  (let ((let24 (ff.mul let23 let18)))
  (let ((let25 x2_n8))
  (let ((let26 (ff.mul let25 let18)))
  (let ((let27 x4_n1))
  (let ((let28 (ff.mul let27 let18)))
  (let ((let29 x0_n4))
  (let ((let30 (ff.mul let29 let18)))
  (let ((let31 x3_n7))
  (let ((let32 (ff.mul let31 let18)))
  (let ((let33 x5_n0))
  (let ((let34 (ff.mul let33 let18)))
  (let ((let35 (ff.add let34 let32 let30 let28 let26 let24 let22 let20 let17)))
  (let ((let36 (ff.mul let9 let35)))
  (let ((let37 (= let36 let13)))
  (let ((let38 (ff.mul let9 let18)))
  (let ((let39 (ff.add let38 let10)))
  (let ((let40 is_zero_inv_n9))
  (let ((let41 (ff.mul let40 let35)))
  (let ((let42 (= let41 let39)))
  (let ((let43 (and let42 let37)))
  (let ((let44 (ite let6 let10 let13)))
  (let ((let45 (= let21 let44)))
  (let ((let46 (ite let7 let10 let13)))
  (let ((let47 (= let29 let46)))
  (let ((let48 (ite let0 let10 let13)))
  (let ((let49 (= let19 let48)))
  (let ((let50 (ite let3 let10 let13)))
  (let ((let51 (= let27 let50)))
  (let ((let52 (ite let4 let10 let13)))
  (let ((let53 (= let31 let52)))
  (let ((let54 (ite let1 let10 let13)))
  (let ((let55 (= let23 let54)))
  (let ((let56 (ite let2 let10 let13)))
  (let ((let57 (= let33 let56)))
  (let ((let58 (ite let5 let10 let13)))
  (let ((let59 (= let25 let58)))
  (let ((let60 (and let59 let57 let55 let53 let51 let49 let47 let45)))
  (let ((let61 (and let60 let43)))
  (let ((let62 (=> let61 let16)))
  (let ((let63 (not let62)))
  let63
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
