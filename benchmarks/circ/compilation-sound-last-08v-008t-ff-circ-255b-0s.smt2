(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun b () Bool)
(declare-fun e () Bool)
(declare-fun d () Bool)
(declare-fun a () Bool)
(declare-fun h () Bool)
(declare-fun f () Bool)
(declare-fun c () Bool)
(declare-fun g () Bool)
(declare-fun return_n5 () FF0)
(declare-fun mul_n18 () FF0)
(declare-fun mul_n12 () FF0)
(declare-fun mul_n17 () FF0)
(declare-fun f_n1 () FF0)
(declare-fun mul_n16 () FF0)
(declare-fun e_n2 () FF0)
(declare-fun mul_n15 () FF0)
(declare-fun a_n0 () FF0)
(declare-fun is_zero_n14 () FF0)
(declare-fun d_n3 () FF0)
(declare-fun b_n6 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun h_n8 () FF0)
(declare-fun c_n4 () FF0)
(declare-fun g_n7 () FF0)
(declare-fun is_zero_inv_n13 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun mul_n10 () FF0)
(assert 
  (let ((let0 b))
  (let ((let1 e))
  (let ((let2 d))
  (let ((let3 (= let2 let1)))
  (let ((let4 (not let3)))
  (let ((let5 (=> let4 let0)))
  (let ((let6 a))
  (let ((let7 h))
  (let ((let8 (and let7 let2 let6)))
  (let ((let9 f))
  (let ((let10 c))
  (let ((let11 g))
  (let ((let12 (or let3 let6 let10 let0 let11 let9 let11 let7 let10 let0)))
  (let ((let13 (ite let1 let12 let6)))
  (let ((let14 (and let13 let1 let9)))
  (let ((let15 (or let14 let8 let5)))
  (let ((let16 return_n5))
  (let ((let17 (as ff1 FF0)))
  (let ((let18 (= let17 let16)))
  (let ((let19 (= let18 let15)))
  (let ((let20 (as ff0 FF0)))
  (let ((let21 (= let20 let16)))
  (let ((let22 (or let18 let21)))
  (let ((let23 (and let22 let19)))
  (let ((let24 mul_n18))
  (let ((let25 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let26 mul_n12))
  (let ((let27 (ff.mul let26 let25)))
  (let ((let28 (ff.add let27 let17)))
  (let ((let29 mul_n17))
  (let ((let30 (ff.mul let29 let25)))
  (let ((let31 (ff.add let30 let17)))
  (let ((let32 (ff.mul let31 let28)))
  (let ((let33 (= let32 let24)))
  (let ((let34 f_n1))
  (let ((let35 mul_n16))
  (let ((let36 (ff.mul let35 let34)))
  (let ((let37 (= let36 let29)))
  (let ((let38 e_n2))
  (let ((let39 mul_n15))
  (let ((let40 a_n0))
  (let ((let41 (ff.add let40 let39)))
  (let ((let42 (ff.mul let41 let38)))
  (let ((let43 (= let42 let35)))
  (let ((let44 is_zero_n14))
  (let ((let45 (ff.mul let44 let25)))
  (let ((let46 (ff.mul let40 let25)))
  (let ((let47 (ff.add let46 let45 let17)))
  (let ((let48 (ff.mul let38 let47)))
  (let ((let49 (= let48 let39)))
  (let ((let50 d_n3))
  (let ((let51 (ff.mul let50 let25)))
  (let ((let52 (as ff2 FF0)))
  (let ((let53 b_n6))
  (let ((let54 (ff.mul let53 let52)))
  (let ((let55 mul_n9))
  (let ((let56 (ff.mul let38 let25)))
  (let ((let57 h_n8))
  (let ((let58 c_n4))
  (let ((let59 (ff.mul let58 let52)))
  (let ((let60 g_n7))
  (let ((let61 (ff.mul let60 let52)))
  (let ((let62 (ff.add let40 let61 let59 let34 let57 let56 let55 let54 let51 let17)))
  (let ((let63 (ff.mul let44 let62)))
  (let ((let64 (= let63 let20)))
  (let ((let65 (ff.add let45 let17)))
  (let ((let66 is_zero_inv_n13))
  (let ((let67 (ff.mul let66 let62)))
  (let ((let68 (= let67 let65)))
  (let ((let69 mul_n11))
  (let ((let70 (ff.mul let69 let40)))
  (let ((let71 (= let70 let26)))
  (let ((let72 (ff.mul let57 let50)))
  (let ((let73 (= let72 let69)))
  (let ((let74 mul_n10))
  (let ((let75 (ff.mul let53 let25)))
  (let ((let76 (ff.add let75 let17)))
  (let ((let77 (ff.mul let55 let25)))
  (let ((let78 (ff.add let77 let38 let50)))
  (let ((let79 (ff.mul let78 let76)))
  (let ((let80 (= let79 let74)))
  (let ((let81 (ff.mul let50 let52)))
  (let ((let82 (ff.mul let81 let38)))
  (let ((let83 (= let82 let55)))
  (let ((let84 (and let83 let80 let73 let71 let68 let64 let49 let43 let37 let33)))
  (let ((let85 (ite let0 let17 let20)))
  (let ((let86 (= let53 let85)))
  (let ((let87 (ite let1 let17 let20)))
  (let ((let88 (= let38 let87)))
  (let ((let89 (ite let9 let17 let20)))
  (let ((let90 (= let34 let89)))
  (let ((let91 (ite let11 let17 let20)))
  (let ((let92 (= let60 let91)))
  (let ((let93 (ite let10 let17 let20)))
  (let ((let94 (= let58 let93)))
  (let ((let95 (ite let2 let17 let20)))
  (let ((let96 (= let50 let95)))
  (let ((let97 (ite let7 let17 let20)))
  (let ((let98 (= let57 let97)))
  (let ((let99 (ite let6 let17 let20)))
  (let ((let100 (= let40 let99)))
  (let ((let101 (and let100 let98 let96 let94 let92 let90 let88 let86)))
  (let ((let102 (and let101 let84)))
  (let ((let103 (=> let102 let23)))
  (let ((let104 (not let103)))
  let104
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
