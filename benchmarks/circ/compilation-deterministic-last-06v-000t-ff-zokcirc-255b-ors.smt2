(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun mul_n10_alt () FF0)
(declare-fun x4_n1_alt () FF0)
(declare-fun mul_n9_alt () FF0)
(declare-fun x3_n3_alt () FF0)
(declare-fun mul_n8_alt () FF0)
(declare-fun x2_n5_alt () FF0)
(declare-fun mul_n7_alt () FF0)
(declare-fun x1_n2_alt () FF0)
(declare-fun x0_n4_alt () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun x4_n1 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun x3_n3 () FF0)
(declare-fun mul_n8 () FF0)
(declare-fun x2_n5 () FF0)
(declare-fun mul_n7 () FF0)
(declare-fun x1_n2 () FF0)
(declare-fun x0_n4 () FF0)
(declare-fun return_n6_alt () FF0)
(declare-fun return_n6 () FF0)
(declare-fun x5_n0_alt () FF0)
(declare-fun x5_n0 () FF0)
(assert 
  (let ((let0 mul_n10_alt))
  (let ((let1 (as ff1 FF0)))
  (let ((let2 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let3 x4_n1_alt))
  (let ((let4 (ff.mul let3 let2)))
  (let ((let5 (ff.add let4 let1)))
  (let ((let6 mul_n9_alt))
  (let ((let7 (ff.mul let6 let5)))
  (let ((let8 (= let7 let0)))
  (let ((let9 x3_n3_alt))
  (let ((let10 (ff.mul let9 let2)))
  (let ((let11 (ff.add let10 let1)))
  (let ((let12 mul_n8_alt))
  (let ((let13 (ff.mul let12 let11)))
  (let ((let14 (= let13 let6)))
  (let ((let15 x2_n5_alt))
  (let ((let16 (ff.mul let15 let2)))
  (let ((let17 (ff.add let16 let1)))
  (let ((let18 mul_n7_alt))
  (let ((let19 (ff.mul let18 let17)))
  (let ((let20 (= let19 let12)))
  (let ((let21 x1_n2_alt))
  (let ((let22 (ff.mul let21 let2)))
  (let ((let23 (ff.add let22 let1)))
  (let ((let24 x0_n4_alt))
  (let ((let25 (ff.mul let24 let2)))
  (let ((let26 (ff.add let25 let1)))
  (let ((let27 (ff.mul let26 let23)))
  (let ((let28 (= let27 let18)))
  (let ((let29 (and let28 let20 let14 let8)))
  (let ((let30 mul_n10))
  (let ((let31 x4_n1))
  (let ((let32 (ff.mul let31 let2)))
  (let ((let33 (ff.add let32 let1)))
  (let ((let34 mul_n9))
  (let ((let35 (ff.mul let34 let33)))
  (let ((let36 (= let35 let30)))
  (let ((let37 x3_n3))
  (let ((let38 (ff.mul let37 let2)))
  (let ((let39 (ff.add let38 let1)))
  (let ((let40 mul_n8))
  (let ((let41 (ff.mul let40 let39)))
  (let ((let42 (= let41 let34)))
  (let ((let43 x2_n5))
  (let ((let44 (ff.mul let43 let2)))
  (let ((let45 (ff.add let44 let1)))
  (let ((let46 mul_n7))
  (let ((let47 (ff.mul let46 let45)))
  (let ((let48 (= let47 let40)))
  (let ((let49 x1_n2))
  (let ((let50 (ff.mul let49 let2)))
  (let ((let51 (ff.add let50 let1)))
  (let ((let52 x0_n4))
  (let ((let53 (ff.mul let52 let2)))
  (let ((let54 (ff.add let53 let1)))
  (let ((let55 (ff.mul let54 let51)))
  (let ((let56 (= let55 let46)))
  (let ((let57 (and let56 let48 let42 let36)))
  (let ((let58 return_n6_alt))
  (let ((let59 return_n6))
  (let ((let60 (= let59 let58)))
  (let ((let61 (not let60)))
  (let ((let62 (= let37 let9)))
  (let ((let63 (= let31 let3)))
  (let ((let64 (= let43 let15)))
  (let ((let65 (= let49 let21)))
  (let ((let66 x5_n0_alt))
  (let ((let67 x5_n0))
  (let ((let68 (= let67 let66)))
  (let ((let69 (= let52 let24)))
  (let ((let70 (and let69 let68 let65 let64 let63 let62)))
  (let ((let71 (and let70 let61 let57 let29)))
  let71
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
