(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun c () Bool)
(declare-fun b () Bool)
(declare-fun d () Bool)
(declare-fun f () Bool)
(declare-fun e () Bool)
(declare-fun a () Bool)
(declare-fun out () FF0)
(declare-fun _14 () FF0)
(declare-fun _13 () FF0)
(declare-fun _10 () FF0)
(declare-fun _9 () FF0)
(declare-fun _12 () FF0)
(declare-fun _5 () FF0)
(declare-fun _2 () FF0)
(declare-fun _3 () FF0)
(declare-fun _1 () FF0)
(declare-fun _4 () FF0)
(declare-fun _0 () FF0)
(assert 
  (let ((let0 c))
  (let ((let1 b))
  (let ((let2 d))
  (let ((let3 (ite let2 let1 let0)))
  (let ((let4 f))
  (let ((let5 e))
  (let ((let6 a))
  (let ((let7 (or let6 let5 let4 let3)))
  (let ((let8 out))
  (let ((let9 (as ff1 FF0)))
  (let ((let10 (= let9 let8)))
  (let ((let11 (= let10 let7)))
  (let ((let12 (as ff0 FF0)))
  (let ((let13 (= let12 let8)))
  (let ((let14 (or let10 let13)))
  (let ((let15 (and let14 let11)))
  (let ((let16 _14))
  (let ((let17 (= let16 let8)))
  (let ((let18 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let19 (ff.mul let16 let18)))
  (let ((let20 _13))
  (let ((let21 _10))
  (let ((let22 _9))
  (let ((let23 (ff.add let22 let21 let20 let19)))
  (let ((let24 (ff.add let22 let21)))
  (let ((let25 (ff.mul let20 let24)))
  (let ((let26 (= let25 let23)))
  (let ((let27 (ff.mul let20 let18)))
  (let ((let28 _12))
  (let ((let29 _5))
  (let ((let30 (ff.add let29 let28 let27)))
  (let ((let31 (ff.mul let28 let29)))
  (let ((let32 (= let31 let30)))
  (let ((let33 _2))
  (let ((let34 _3))
  (let ((let35 (ff.mul let34 let18)))
  (let ((let36 (ff.add let35 let9)))
  (let ((let37 (ff.mul let36 let33)))
  (let ((let38 (= let37 let21)))
  (let ((let39 _1))
  (let ((let40 (ff.mul let34 let39)))
  (let ((let41 (= let40 let22)))
  (let ((let42 (ff.mul let29 let29)))
  (let ((let43 (= let42 let29)))
  (let ((let44 _4))
  (let ((let45 (ff.mul let44 let44)))
  (let ((let46 (= let45 let44)))
  (let ((let47 (ff.mul let34 let34)))
  (let ((let48 (= let47 let34)))
  (let ((let49 (ff.mul let33 let33)))
  (let ((let50 (= let49 let33)))
  (let ((let51 (ff.mul let39 let39)))
  (let ((let52 (= let51 let39)))
  (let ((let53 _0))
  (let ((let54 (ff.mul let53 let53)))
  (let ((let55 (= let54 let53)))
  (let ((let56 (and let55 let52 let50 let48 let46 let43 let41 let38 let32 let26 let17)))
  (let ((let57 (ite let1 let9 let12)))
  (let ((let58 (= let39 let57)))
  (let ((let59 (ite let2 let9 let12)))
  (let ((let60 (= let34 let59)))
  (let ((let61 (ite let4 let9 let12)))
  (let ((let62 (= let29 let61)))
  (let ((let63 (ite let6 let9 let12)))
  (let ((let64 (= let53 let63)))
  (let ((let65 (ite let0 let9 let12)))
  (let ((let66 (= let33 let65)))
  (let ((let67 (ite let5 let9 let12)))
  (let ((let68 (= let44 let67)))
  (let ((let69 (and let68 let66 let64 let62 let60 let58)))
  (let ((let70 (and let69 let56)))
  (let ((let71 (=> let70 let15)))
  (let ((let72 (not let71)))
  let72
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
