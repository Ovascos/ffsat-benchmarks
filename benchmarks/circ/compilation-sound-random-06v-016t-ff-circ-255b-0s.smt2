(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun b () Bool)
(declare-fun a () Bool)
(declare-fun f () Bool)
(declare-fun d () Bool)
(declare-fun c () Bool)
(declare-fun e () Bool)
(declare-fun return_n3 () FF0)
(declare-fun mul_n17 () FF0)
(declare-fun mul_n8 () FF0)
(declare-fun mul_n23 () FF0)
(declare-fun is_zero_n19 () FF0)
(declare-fun mul_n22 () FF0)
(declare-fun mul_n21 () FF0)
(declare-fun is_zero_n12 () FF0)
(declare-fun mul_n20 () FF0)
(declare-fun b_n4 () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun mul_n15 () FF0)
(declare-fun c_n2 () FF0)
(declare-fun mul_n16 () FF0)
(declare-fun is_zero_inv_n18 () FF0)
(declare-fun f_n5 () FF0)
(declare-fun d_n1 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun e_n6 () FF0)
(declare-fun a_n0 () FF0)
(declare-fun is_zero_inv_n11 () FF0)
(declare-fun mul_n7 () FF0)
(assert 
  (let ((let0 b))
  (let ((let1 a))
  (let ((let2 f))
  (let ((let3 (or let2 let1 let0)))
  (let ((let4 (not let3)))
  (let ((let5 d))
  (let ((let6 c))
  (let ((let7 (= let6 let5)))
  (let ((let8 e))
  (let ((let9 (ite let8 let2 let3)))
  (let ((let10 (or let1 let0 let6 let8 let1 let2 let5 let0 let5 let6 let8)))
  (let ((let11 (ite let7 let10 let9)))
  (let ((let12 (or let11 let7)))
  (let ((let13 (ite let9 let3 let12)))
  (let ((let14 (=> let13 let12)))
  (let ((let15 (ite let14 let2 let4)))
  (let ((let16 (or let10 let13 let6 let14)))
  (let ((let17 (not let16)))
  (let ((let18 (or let9 let0 let4)))
  (let ((let19 (=> let18 let10)))
  (let ((let20 (ite let18 let19 let17)))
  (let ((let21 (and let20 let15)))
  (let ((let22 return_n3))
  (let ((let23 (as ff1 FF0)))
  (let ((let24 (= let23 let22)))
  (let ((let25 (= let24 let21)))
  (let ((let26 (as ff0 FF0)))
  (let ((let27 (= let26 let22)))
  (let ((let28 (or let24 let27)))
  (let ((let29 (and let28 let25)))
  (let ((let30 mul_n17))
  (let ((let31 mul_n8))
  (let ((let32 (ff.add let31 let30)))
  (let ((let33 mul_n23))
  (let ((let34 is_zero_n19))
  (let ((let35 (ff.add let34 let33)))
  (let ((let36 (ff.mul let35 let32)))
  (let ((let37 (= let36 let22)))
  (let ((let38 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let39 (ff.mul let34 let38)))
  (let ((let40 mul_n22))
  (let ((let41 (ff.mul let40 let38)))
  (let ((let42 (ff.add let41 let39 let23)))
  (let ((let43 mul_n21))
  (let ((let44 (ff.mul let43 let38)))
  (let ((let45 (ff.add let44 let23)))
  (let ((let46 (ff.mul let45 let42)))
  (let ((let47 (= let46 let33)))
  (let ((let48 is_zero_n12))
  (let ((let49 (ff.mul let45 let48)))
  (let ((let50 (= let49 let40)))
  (let ((let51 (ff.mul let31 let38)))
  (let ((let52 (ff.add let51 let23)))
  (let ((let53 mul_n20))
  (let ((let54 (ff.mul let53 let52)))
  (let ((let55 (= let54 let43)))
  (let ((let56 b_n4))
  (let ((let57 (ff.mul let56 let38)))
  (let ((let58 (ff.add let57 let23)))
  (let ((let59 mul_n10))
  (let ((let60 (ff.mul let59 let38)))
  (let ((let61 (ff.add let31 let60)))
  (let ((let62 (ff.mul let61 let58)))
  (let ((let63 (= let62 let53)))
  (let ((let64 (ff.add let39 let23)))
  (let ((let65 (as ff3 FF0)))
  (let ((let66 mul_n14))
  (let ((let67 (ff.mul let66 let38)))
  (let ((let68 (ff.mul let48 let38)))
  (let ((let69 mul_n15))
  (let ((let70 c_n2))
  (let ((let71 mul_n16))
  (let ((let72 (ff.mul let71 let38)))
  (let ((let73 (ff.add let72 let70 let69 let68 let67 let65)))
  (let ((let74 is_zero_inv_n18))
  (let ((let75 (ff.mul let74 let73)))
  (let ((let76 (= let75 let64)))
  (let ((let77 f_n5))
  (let ((let78 (ff.add let51 let77)))
  (let ((let79 (ff.add let72 let23)))
  (let ((let80 (ff.mul let79 let78)))
  (let ((let81 (= let80 let30)))
  (let ((let82 (ff.add let67 let69 let23)))
  (let ((let83 (ff.mul let82 let66)))
  (let ((let84 (= let83 let71)))
  (let ((let85 (ff.add let51 let66)))
  (let ((let86 (ff.add let51 let59 let23)))
  (let ((let87 (ff.mul let86 let85)))
  (let ((let88 (= let87 let69)))
  (let ((let89 d_n1))
  (let ((let90 mul_n9))
  (let ((let91 (ff.mul let90 let38)))
  (let ((let92 (ff.add let91 let70 let89)))
  (let ((let93 mul_n13))
  (let ((let94 (ff.mul let93 let38)))
  (let ((let95 (ff.add let31 let94 let60)))
  (let ((let96 (ff.mul let95 let92)))
  (let ((let97 (= let96 let66)))
  (let ((let98 (ff.add let68 let31 let60)))
  (let ((let99 (ff.mul let89 let38)))
  (let ((let100 (ff.mul let70 let38)))
  (let ((let101 (ff.add let90 let100 let99 let23)))
  (let ((let102 (ff.mul let101 let98)))
  (let ((let103 (= let102 let93)))
  (let ((let104 (as ff2 FF0)))
  (let ((let105 e_n6))
  (let ((let106 (ff.mul let105 let104)))
  (let ((let107 (ff.mul let89 let104)))
  (let ((let108 (ff.mul let56 let104)))
  (let ((let109 (ff.mul let70 let104)))
  (let ((let110 a_n0))
  (let ((let111 (ff.mul let110 let104)))
  (let ((let112 (ff.add let111 let77 let109 let108 let107 let106)))
  (let ((let113 (ff.mul let48 let112)))
  (let ((let114 (= let113 let26)))
  (let ((let115 (ff.add let68 let23)))
  (let ((let116 is_zero_inv_n11))
  (let ((let117 (ff.mul let116 let112)))
  (let ((let118 (= let117 let115)))
  (let ((let119 (ff.add let31 let77 let38)))
  (let ((let120 (ff.mul let105 let119)))
  (let ((let121 (= let120 let59)))
  (let ((let122 (ff.mul let109 let89)))
  (let ((let123 (= let122 let90)))
  (let ((let124 mul_n7))
  (let ((let125 (ff.mul let124 let58)))
  (let ((let126 (= let125 let31)))
  (let ((let127 (ff.mul let110 let38)))
  (let ((let128 (ff.add let127 let23)))
  (let ((let129 (ff.mul let77 let38)))
  (let ((let130 (ff.add let129 let23)))
  (let ((let131 (ff.mul let130 let128)))
  (let ((let132 (= let131 let124)))
  (let ((let133 (and let132 let126 let123 let121 let118 let114 let103 let97 let88 let84 let81 let76 let63 let55 let50 let47 let37)))
  (let ((let134 (ite let0 let23 let26)))
  (let ((let135 (= let56 let134)))
  (let ((let136 (ite let5 let23 let26)))
  (let ((let137 (= let89 let136)))
  (let ((let138 (ite let6 let23 let26)))
  (let ((let139 (= let70 let138)))
  (let ((let140 (ite let8 let23 let26)))
  (let ((let141 (= let105 let140)))
  (let ((let142 (ite let1 let23 let26)))
  (let ((let143 (= let110 let142)))
  (let ((let144 (ite let2 let23 let26)))
  (let ((let145 (= let77 let144)))
  (let ((let146 (and let145 let143 let141 let139 let137 let135)))
  (let ((let147 (and let146 let133)))
  (let ((let148 (=> let147 let29)))
  (let ((let149 (not let148)))
  let149
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
