(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun mul_n10_alt () FF0)
(declare-fun b_n3_alt () FF0)
(declare-fun mul_n9_alt () FF0)
(declare-fun d_n0_alt () FF0)
(declare-fun mul_n8_alt () FF0)
(declare-fun a_n4_alt () FF0)
(declare-fun mul_n7_alt () FF0)
(declare-fun mul_n5_alt () FF0)
(declare-fun mul_n6_alt () FF0)
(declare-fun c_n1_alt () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun b_n3 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun d_n0 () FF0)
(declare-fun mul_n8 () FF0)
(declare-fun a_n4 () FF0)
(declare-fun mul_n7 () FF0)
(declare-fun mul_n5 () FF0)
(declare-fun mul_n6 () FF0)
(declare-fun c_n1 () FF0)
(declare-fun return_n2_alt () FF0)
(declare-fun return_n2 () FF0)
(assert 
  (let ((let0 mul_n10_alt))
  (let ((let1 b_n3_alt))
  (let ((let2 mul_n9_alt))
  (let ((let3 (ff.mul let2 let1)))
  (let ((let4 (= let3 let0)))
  (let ((let5 d_n0_alt))
  (let ((let6 mul_n8_alt))
  (let ((let7 (ff.mul let6 let5)))
  (let ((let8 (= let7 let2)))
  (let ((let9 a_n4_alt))
  (let ((let10 mul_n7_alt))
  (let ((let11 (ff.mul let10 let9)))
  (let ((let12 (= let11 let6)))
  (let ((let13 (as ff1 FF0)))
  (let ((let14 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let15 mul_n5_alt))
  (let ((let16 (ff.mul let15 let14)))
  (let ((let17 (ff.add let16 let13)))
  (let ((let18 mul_n6_alt))
  (let ((let19 (ff.mul let18 let17)))
  (let ((let20 (= let19 let10)))
  (let ((let21 c_n1_alt))
  (let ((let22 (ff.mul let1 let21)))
  (let ((let23 (= let22 let18)))
  (let ((let24 (ff.mul let9 let14)))
  (let ((let25 (ff.add let24 let13)))
  (let ((let26 (ff.mul let21 let25)))
  (let ((let27 (= let26 let15)))
  (let ((let28 (and let27 let23 let20 let12 let8 let4)))
  (let ((let29 mul_n10))
  (let ((let30 b_n3))
  (let ((let31 mul_n9))
  (let ((let32 (ff.mul let31 let30)))
  (let ((let33 (= let32 let29)))
  (let ((let34 d_n0))
  (let ((let35 mul_n8))
  (let ((let36 (ff.mul let35 let34)))
  (let ((let37 (= let36 let31)))
  (let ((let38 a_n4))
  (let ((let39 mul_n7))
  (let ((let40 (ff.mul let39 let38)))
  (let ((let41 (= let40 let35)))
  (let ((let42 mul_n5))
  (let ((let43 (ff.mul let42 let14)))
  (let ((let44 (ff.add let43 let13)))
  (let ((let45 mul_n6))
  (let ((let46 (ff.mul let45 let44)))
  (let ((let47 (= let46 let39)))
  (let ((let48 c_n1))
  (let ((let49 (ff.mul let30 let48)))
  (let ((let50 (= let49 let45)))
  (let ((let51 (ff.mul let38 let14)))
  (let ((let52 (ff.add let51 let13)))
  (let ((let53 (ff.mul let48 let52)))
  (let ((let54 (= let53 let42)))
  (let ((let55 (and let54 let50 let47 let41 let37 let33)))
  (let ((let56 return_n2_alt))
  (let ((let57 return_n2))
  (let ((let58 (= let57 let56)))
  (let ((let59 (not let58)))
  (let ((let60 (= let30 let1)))
  (let ((let61 (= let34 let5)))
  (let ((let62 (= let38 let9)))
  (let ((let63 (= let48 let21)))
  (let ((let64 (and let63 let62 let61 let60)))
  (let ((let65 (and let64 let59 let55 let28)))
  let65
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
