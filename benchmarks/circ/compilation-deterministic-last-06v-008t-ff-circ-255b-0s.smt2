(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun mul_n14_alt () FF0)
(declare-fun b_n4_alt () FF0)
(declare-fun f_n5_alt () FF0)
(declare-fun mul_n13_alt () FF0)
(declare-fun d_n1_alt () FF0)
(declare-fun mul_n12_alt () FF0)
(declare-fun mul_n7_alt () FF0)
(declare-fun e_n0_alt () FF0)
(declare-fun is_zero_n11_alt () FF0)
(declare-fun a_n6_alt () FF0)
(declare-fun mul_n9_alt () FF0)
(declare-fun c_n2_alt () FF0)
(declare-fun is_zero_inv_n10_alt () FF0)
(declare-fun mul_n8_alt () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun b_n4 () FF0)
(declare-fun f_n5 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun d_n1 () FF0)
(declare-fun mul_n12 () FF0)
(declare-fun mul_n7 () FF0)
(declare-fun e_n0 () FF0)
(declare-fun is_zero_n11 () FF0)
(declare-fun a_n6 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun c_n2 () FF0)
(declare-fun is_zero_inv_n10 () FF0)
(declare-fun mul_n8 () FF0)
(declare-fun return_n3_alt () FF0)
(declare-fun return_n3 () FF0)
(assert 
  (let ((let0 mul_n14_alt))
  (let ((let1 (as ff1 FF0)))
  (let ((let2 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let3 b_n4_alt))
  (let ((let4 (ff.mul let3 let2)))
  (let ((let5 (ff.add let4 let1)))
  (let ((let6 (as ff2 FF0)))
  (let ((let7 f_n5_alt))
  (let ((let8 (ff.mul let7 let6)))
  (let ((let9 (ff.mul let8 let5)))
  (let ((let10 (= let9 let0)))
  (let ((let11 mul_n13_alt))
  (let ((let12 d_n1_alt))
  (let ((let13 mul_n12_alt))
  (let ((let14 (ff.add let13 let12)))
  (let ((let15 (ff.mul let8 let14)))
  (let ((let16 (= let15 let11)))
  (let ((let17 mul_n7_alt))
  (let ((let18 (ff.mul let12 let2)))
  (let ((let19 e_n0_alt))
  (let ((let20 (ff.add let19 let18 let17)))
  (let ((let21 is_zero_n11_alt))
  (let ((let22 (ff.mul let21 let20)))
  (let ((let23 (= let22 let13)))
  (let ((let24 (as ff0 FF0)))
  (let ((let25 (as ff4 FF0)))
  (let ((let26 a_n6_alt))
  (let ((let27 (ff.mul let26 let2)))
  (let ((let28 mul_n9_alt))
  (let ((let29 (ff.mul let28 let2)))
  (let ((let30 (ff.mul let17 let2)))
  (let ((let31 c_n2_alt))
  (let ((let32 (ff.mul let31 let2)))
  (let ((let33 (ff.mul let19 let2)))
  (let ((let34 (ff.add let33 let32 let30 let29 let27 let25)))
  (let ((let35 (ff.mul let21 let34)))
  (let ((let36 (= let35 let24)))
  (let ((let37 (ff.mul let21 let2)))
  (let ((let38 (ff.add let37 let1)))
  (let ((let39 is_zero_inv_n10_alt))
  (let ((let40 (ff.mul let39 let34)))
  (let ((let41 (= let40 let38)))
  (let ((let42 mul_n8_alt))
  (let ((let43 (ff.mul let42 let12)))
  (let ((let44 (= let43 let28)))
  (let ((let45 (ff.mul let26 let3)))
  (let ((let46 (= let45 let42)))
  (let ((let47 (ff.add let33 let31)))
  (let ((let48 (ff.mul let19 let47)))
  (let ((let49 (= let48 let17)))
  (let ((let50 (and let49 let46 let44 let41 let36 let23 let16 let10)))
  (let ((let51 mul_n14))
  (let ((let52 b_n4))
  (let ((let53 (ff.mul let52 let2)))
  (let ((let54 (ff.add let53 let1)))
  (let ((let55 f_n5))
  (let ((let56 (ff.mul let55 let6)))
  (let ((let57 (ff.mul let56 let54)))
  (let ((let58 (= let57 let51)))
  (let ((let59 mul_n13))
  (let ((let60 d_n1))
  (let ((let61 mul_n12))
  (let ((let62 (ff.add let61 let60)))
  (let ((let63 (ff.mul let56 let62)))
  (let ((let64 (= let63 let59)))
  (let ((let65 mul_n7))
  (let ((let66 (ff.mul let60 let2)))
  (let ((let67 e_n0))
  (let ((let68 (ff.add let67 let66 let65)))
  (let ((let69 is_zero_n11))
  (let ((let70 (ff.mul let69 let68)))
  (let ((let71 (= let70 let61)))
  (let ((let72 a_n6))
  (let ((let73 (ff.mul let72 let2)))
  (let ((let74 mul_n9))
  (let ((let75 (ff.mul let74 let2)))
  (let ((let76 (ff.mul let65 let2)))
  (let ((let77 c_n2))
  (let ((let78 (ff.mul let77 let2)))
  (let ((let79 (ff.mul let67 let2)))
  (let ((let80 (ff.add let79 let78 let76 let75 let73 let25)))
  (let ((let81 (ff.mul let69 let80)))
  (let ((let82 (= let81 let24)))
  (let ((let83 (ff.mul let69 let2)))
  (let ((let84 (ff.add let83 let1)))
  (let ((let85 is_zero_inv_n10))
  (let ((let86 (ff.mul let85 let80)))
  (let ((let87 (= let86 let84)))
  (let ((let88 mul_n8))
  (let ((let89 (ff.mul let88 let60)))
  (let ((let90 (= let89 let74)))
  (let ((let91 (ff.mul let72 let52)))
  (let ((let92 (= let91 let88)))
  (let ((let93 (ff.add let79 let77)))
  (let ((let94 (ff.mul let67 let93)))
  (let ((let95 (= let94 let65)))
  (let ((let96 (and let95 let92 let90 let87 let82 let71 let64 let58)))
  (let ((let97 return_n3_alt))
  (let ((let98 return_n3))
  (let ((let99 (= let98 let97)))
  (let ((let100 (not let99)))
  (let ((let101 (= let52 let3)))
  (let ((let102 (= let67 let19)))
  (let ((let103 (= let72 let26)))
  (let ((let104 (= let55 let7)))
  (let ((let105 (= let77 let31)))
  (let ((let106 (= let60 let12)))
  (let ((let107 (and let106 let105 let104 let103 let102 let101)))
  (let ((let108 (and let107 let100 let96 let50)))
  let108
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
