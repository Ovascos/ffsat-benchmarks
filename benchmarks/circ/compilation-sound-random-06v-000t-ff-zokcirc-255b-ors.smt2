(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun x5 () Bool)
(declare-fun x4 () Bool)
(declare-fun x3 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1 () Bool)
(declare-fun x0 () Bool)
(declare-fun return_n6 () FF0)
(declare-fun x5_n0 () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun x4_n1 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun mul_n8 () FF0)
(declare-fun x2_n5 () FF0)
(declare-fun mul_n7 () FF0)
(declare-fun x1_n2 () FF0)
(declare-fun x0_n4 () FF0)
(declare-fun x3_n3 () FF0)
(assert 
  (let ((let0 x5))
  (let ((let1 x4))
  (let ((let2 x3))
  (let ((let3 x2))
  (let ((let4 x1))
  (let ((let5 x0))
  (let ((let6 (or let5 let4 let3 let2 let1 let0)))
  (let ((let7 return_n6))
  (let ((let8 (as ff1 FF0)))
  (let ((let9 (= let8 let7)))
  (let ((let10 (= let9 let6)))
  (let ((let11 (as ff0 FF0)))
  (let ((let12 (= let11 let7)))
  (let ((let13 (or let9 let12)))
  (let ((let14 (and let13 let10)))
  (let ((let15 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let16 (ff.mul let7 let15)))
  (let ((let17 (ff.add let16 let8)))
  (let ((let18 x5_n0))
  (let ((let19 (ff.mul let18 let15)))
  (let ((let20 (ff.add let19 let8)))
  (let ((let21 mul_n10))
  (let ((let22 (ff.mul let21 let20)))
  (let ((let23 (= let22 let17)))
  (let ((let24 x4_n1))
  (let ((let25 (ff.mul let24 let15)))
  (let ((let26 (ff.add let25 let8)))
  (let ((let27 mul_n9))
  (let ((let28 (ff.mul let27 let26)))
  (let ((let29 (= let28 let21)))
  (let ((let30 mul_n8))
  (let ((let31 x2_n5))
  (let ((let32 (ff.mul let31 let15)))
  (let ((let33 (ff.add let32 let8)))
  (let ((let34 mul_n7))
  (let ((let35 (ff.mul let34 let33)))
  (let ((let36 (= let35 let30)))
  (let ((let37 x1_n2))
  (let ((let38 (ff.mul let37 let15)))
  (let ((let39 (ff.add let38 let8)))
  (let ((let40 x0_n4))
  (let ((let41 (ff.mul let40 let15)))
  (let ((let42 (ff.add let41 let8)))
  (let ((let43 (ff.mul let42 let39)))
  (let ((let44 (= let43 let34)))
  (let ((let45 (and let44 let36 let29 let23)))
  (let ((let46 (ite let4 let8 let11)))
  (let ((let47 (= let37 let46)))
  (let ((let48 (ite let5 let8 let11)))
  (let ((let49 (= let40 let48)))
  (let ((let50 (ite let1 let8 let11)))
  (let ((let51 (= let24 let50)))
  (let ((let52 (ite let0 let8 let11)))
  (let ((let53 (= let18 let52)))
  (let ((let54 (ite let3 let8 let11)))
  (let ((let55 (= let31 let54)))
  (let ((let56 (ite let2 let8 let11)))
  (let ((let57 x3_n3))
  (let ((let58 (= let57 let56)))
  (let ((let59 (and let58 let55 let53 let51 let49 let47)))
  (let ((let60 (and let59 let45)))
  (let ((let61 (=> let60 let14)))
  (let ((let62 (not let61)))
  let62
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
