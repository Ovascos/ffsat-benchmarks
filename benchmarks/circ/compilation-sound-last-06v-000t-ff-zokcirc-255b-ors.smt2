(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun x5 () Bool)
(declare-fun x4 () Bool)
(declare-fun x3 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1 () Bool)
(declare-fun x0 () Bool)
(declare-fun return_n6 () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun x4_n1 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun x3_n3 () FF0)
(declare-fun mul_n8 () FF0)
(declare-fun x2_n5 () FF0)
(declare-fun mul_n7 () FF0)
(declare-fun x1_n2 () FF0)
(declare-fun x0_n4 () FF0)
(declare-fun x5_n0 () FF0)
(assert 
  (let ((let0 x5))
  (let ((let1 x4))
  (let ((let2 x3))
  (let ((let3 x2))
  (let ((let4 x1))
  (let ((let5 x0))
  (let ((let6 (or let5 let4 let3 let2 let1 let0)))
  (let ((let7 return_n6))
  (let ((let8 (as ff1 FF0)))
  (let ((let9 (= let8 let7)))
  (let ((let10 (= let9 let6)))
  (let ((let11 (as ff0 FF0)))
  (let ((let12 (= let11 let7)))
  (let ((let13 (or let9 let12)))
  (let ((let14 (and let13 let10)))
  (let ((let15 mul_n10))
  (let ((let16 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let17 x4_n1))
  (let ((let18 (ff.mul let17 let16)))
  (let ((let19 (ff.add let18 let8)))
  (let ((let20 mul_n9))
  (let ((let21 (ff.mul let20 let19)))
  (let ((let22 (= let21 let15)))
  (let ((let23 x3_n3))
  (let ((let24 (ff.mul let23 let16)))
  (let ((let25 (ff.add let24 let8)))
  (let ((let26 mul_n8))
  (let ((let27 (ff.mul let26 let25)))
  (let ((let28 (= let27 let20)))
  (let ((let29 x2_n5))
  (let ((let30 (ff.mul let29 let16)))
  (let ((let31 (ff.add let30 let8)))
  (let ((let32 mul_n7))
  (let ((let33 (ff.mul let32 let31)))
  (let ((let34 (= let33 let26)))
  (let ((let35 x1_n2))
  (let ((let36 (ff.mul let35 let16)))
  (let ((let37 (ff.add let36 let8)))
  (let ((let38 x0_n4))
  (let ((let39 (ff.mul let38 let16)))
  (let ((let40 (ff.add let39 let8)))
  (let ((let41 (ff.mul let40 let37)))
  (let ((let42 (= let41 let32)))
  (let ((let43 (and let42 let34 let28 let22)))
  (let ((let44 (ite let5 let8 let11)))
  (let ((let45 (= let38 let44)))
  (let ((let46 (ite let1 let8 let11)))
  (let ((let47 (= let17 let46)))
  (let ((let48 (ite let0 let8 let11)))
  (let ((let49 x5_n0))
  (let ((let50 (= let49 let48)))
  (let ((let51 (ite let2 let8 let11)))
  (let ((let52 (= let23 let51)))
  (let ((let53 (ite let3 let8 let11)))
  (let ((let54 (= let29 let53)))
  (let ((let55 (ite let4 let8 let11)))
  (let ((let56 (= let35 let55)))
  (let ((let57 (and let56 let54 let52 let50 let47 let45)))
  (let ((let58 (and let57 let43)))
  (let ((let59 (=> let58 let14)))
  (let ((let60 (not let59)))
  let60
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
