(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun x3 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1 () Bool)
(declare-fun x0 () Bool)
(declare-fun return_n1 () FF0)
(declare-fun x2_n3 () FF0)
(declare-fun x0_n4 () FF0)
(declare-fun x3_n2 () FF0)
(declare-fun x1_n0 () FF0)
(declare-fun is_zero_inv_n5 () FF0)
(assert 
  (let ((let0 x3))
  (let ((let1 x2))
  (let ((let2 x1))
  (let ((let3 x0))
  (let ((let4 (and let3 let2 let1 let0)))
  (let ((let5 return_n1))
  (let ((let6 (as ff1 FF0)))
  (let ((let7 (= let6 let5)))
  (let ((let8 (= let7 let4)))
  (let ((let9 (as ff0 FF0)))
  (let ((let10 (= let9 let5)))
  (let ((let11 (or let7 let10)))
  (let ((let12 (and let11 let8)))
  (let ((let13 (as ff4 FF0)))
  (let ((let14 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let15 x2_n3))
  (let ((let16 (ff.mul let15 let14)))
  (let ((let17 x0_n4))
  (let ((let18 (ff.mul let17 let14)))
  (let ((let19 x3_n2))
  (let ((let20 (ff.mul let19 let14)))
  (let ((let21 x1_n0))
  (let ((let22 (ff.mul let21 let14)))
  (let ((let23 (ff.add let22 let20 let18 let16 let13)))
  (let ((let24 (ff.mul let5 let23)))
  (let ((let25 (= let24 let9)))
  (let ((let26 (ff.mul let5 let14)))
  (let ((let27 (ff.add let26 let6)))
  (let ((let28 is_zero_inv_n5))
  (let ((let29 (ff.mul let28 let23)))
  (let ((let30 (= let29 let27)))
  (let ((let31 (and let30 let25)))
  (let ((let32 (ite let0 let6 let9)))
  (let ((let33 (= let19 let32)))
  (let ((let34 (ite let1 let6 let9)))
  (let ((let35 (= let15 let34)))
  (let ((let36 (ite let3 let6 let9)))
  (let ((let37 (= let17 let36)))
  (let ((let38 (ite let2 let6 let9)))
  (let ((let39 (= let21 let38)))
  (let ((let40 (and let39 let37 let35 let33)))
  (let ((let41 (and let40 let31)))
  (let ((let42 (=> let41 let12)))
  (let ((let43 (not let42)))
  let43
))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
