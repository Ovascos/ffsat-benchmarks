(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun out_alt () FF0)
(declare-fun _6_alt () FF0)
(declare-fun _5_alt () FF0)
(declare-fun _3_alt () FF0)
(declare-fun _4_alt () FF0)
(declare-fun _2_alt () FF0)
(declare-fun _1_alt () FF0)
(declare-fun _0_alt () FF0)
(declare-fun out () FF0)
(declare-fun _6 () FF0)
(declare-fun _5 () FF0)
(declare-fun _3 () FF0)
(declare-fun _4 () FF0)
(declare-fun _2 () FF0)
(declare-fun _1 () FF0)
(declare-fun _0 () FF0)
(assert 
  (let ((let0 out_alt))
  (let ((let1 _6_alt))
  (let ((let2 (= let1 let0)))
  (let ((let3 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let4 (ff.mul let1 let3)))
  (let ((let5 _5_alt))
  (let ((let6 _3_alt))
  (let ((let7 (ff.add let6 let5 let4)))
  (let ((let8 (ff.mul let5 let6)))
  (let ((let9 (= let8 let7)))
  (let ((let10 (ff.mul let5 let3)))
  (let ((let11 _4_alt))
  (let ((let12 _2_alt))
  (let ((let13 (ff.add let12 let11 let10)))
  (let ((let14 (ff.mul let11 let12)))
  (let ((let15 (= let14 let13)))
  (let ((let16 (ff.mul let11 let3)))
  (let ((let17 _1_alt))
  (let ((let18 _0_alt))
  (let ((let19 (ff.add let18 let17 let16)))
  (let ((let20 (ff.mul let18 let17)))
  (let ((let21 (= let20 let19)))
  (let ((let22 (ff.mul let6 let6)))
  (let ((let23 (= let22 let6)))
  (let ((let24 (ff.mul let12 let12)))
  (let ((let25 (= let24 let12)))
  (let ((let26 (ff.mul let17 let17)))
  (let ((let27 (= let26 let17)))
  (let ((let28 (ff.mul let18 let18)))
  (let ((let29 (= let28 let18)))
  (let ((let30 (and let29 let27 let25 let23 let21 let15 let9 let2)))
  (let ((let31 out))
  (let ((let32 _6))
  (let ((let33 (= let32 let31)))
  (let ((let34 (ff.mul let32 let3)))
  (let ((let35 _5))
  (let ((let36 _3))
  (let ((let37 (ff.add let36 let35 let34)))
  (let ((let38 (ff.mul let35 let36)))
  (let ((let39 (= let38 let37)))
  (let ((let40 (ff.mul let35 let3)))
  (let ((let41 _4))
  (let ((let42 _2))
  (let ((let43 (ff.add let42 let41 let40)))
  (let ((let44 (ff.mul let41 let42)))
  (let ((let45 (= let44 let43)))
  (let ((let46 (ff.mul let41 let3)))
  (let ((let47 _1))
  (let ((let48 _0))
  (let ((let49 (ff.add let48 let47 let46)))
  (let ((let50 (ff.mul let48 let47)))
  (let ((let51 (= let50 let49)))
  (let ((let52 (ff.mul let36 let36)))
  (let ((let53 (= let52 let36)))
  (let ((let54 (ff.mul let42 let42)))
  (let ((let55 (= let54 let42)))
  (let ((let56 (ff.mul let47 let47)))
  (let ((let57 (= let56 let47)))
  (let ((let58 (ff.mul let48 let48)))
  (let ((let59 (= let58 let48)))
  (let ((let60 (and let59 let57 let55 let53 let51 let45 let39 let33)))
  (let ((let61 (= let31 let0)))
  (let ((let62 (not let61)))
  (let ((let63 (= let42 let12)))
  (let ((let64 (= let48 let18)))
  (let ((let65 (= let47 let17)))
  (let ((let66 (= let36 let6)))
  (let ((let67 (and let66 let65 let64 let63)))
  (let ((let68 (and let67 let62 let60 let30)))
  let68
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
