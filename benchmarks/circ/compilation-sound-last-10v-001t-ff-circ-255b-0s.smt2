(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun j () Bool)
(declare-fun i () Bool)
(declare-fun h () Bool)
(declare-fun g () Bool)
(declare-fun f () Bool)
(declare-fun e () Bool)
(declare-fun d () Bool)
(declare-fun c () Bool)
(declare-fun b () Bool)
(declare-fun a () Bool)
(declare-fun return_n7 () FF0)
(declare-fun j_n3 () FF0)
(declare-fun c_n6 () FF0)
(declare-fun g_n9 () FF0)
(declare-fun e_n2 () FF0)
(declare-fun i_n5 () FF0)
(declare-fun h_n8 () FF0)
(declare-fun f_n1 () FF0)
(declare-fun d_n4 () FF0)
(declare-fun a_n10 () FF0)
(declare-fun b_n0 () FF0)
(declare-fun is_zero_inv_n11 () FF0)
(assert 
  (let ((let0 j))
  (let ((let1 i))
  (let ((let2 h))
  (let ((let3 g))
  (let ((let4 f))
  (let ((let5 e))
  (let ((let6 d))
  (let ((let7 c))
  (let ((let8 b))
  (let ((let9 a))
  (let ((let10 (or let9 let8 let7 let6 let5 let4 let3 let2 let1 let0)))
  (let ((let11 return_n7))
  (let ((let12 (as ff1 FF0)))
  (let ((let13 (= let12 let11)))
  (let ((let14 (= let13 let10)))
  (let ((let15 (as ff0 FF0)))
  (let ((let16 (= let15 let11)))
  (let ((let17 (or let13 let16)))
  (let ((let18 (and let17 let14)))
  (let ((let19 j_n3))
  (let ((let20 c_n6))
  (let ((let21 g_n9))
  (let ((let22 e_n2))
  (let ((let23 i_n5))
  (let ((let24 h_n8))
  (let ((let25 f_n1))
  (let ((let26 d_n4))
  (let ((let27 a_n10))
  (let ((let28 b_n0))
  (let ((let29 (ff.add let28 let27 let26 let25 let24 let23 let22 let21 let20 let19)))
  (let ((let30 is_zero_inv_n11))
  (let ((let31 (ff.mul let30 let29)))
  (let ((let32 (= let31 let11)))
  (let ((let33 (ite let7 let12 let15)))
  (let ((let34 (= let20 let33)))
  (let ((let35 (ite let5 let12 let15)))
  (let ((let36 (= let22 let35)))
  (let ((let37 (ite let1 let12 let15)))
  (let ((let38 (= let23 let37)))
  (let ((let39 (ite let2 let12 let15)))
  (let ((let40 (= let24 let39)))
  (let ((let41 (ite let9 let12 let15)))
  (let ((let42 (= let27 let41)))
  (let ((let43 (ite let8 let12 let15)))
  (let ((let44 (= let28 let43)))
  (let ((let45 (ite let3 let12 let15)))
  (let ((let46 (= let21 let45)))
  (let ((let47 (ite let0 let12 let15)))
  (let ((let48 (= let19 let47)))
  (let ((let49 (ite let6 let12 let15)))
  (let ((let50 (= let26 let49)))
  (let ((let51 (ite let4 let12 let15)))
  (let ((let52 (= let25 let51)))
  (let ((let53 (and let52 let50 let48 let46 let44 let42 let40 let38 let36 let34)))
  (let ((let54 (and let53 let32)))
  (let ((let55 (=> let54 let18)))
  (let ((let56 (not let55)))
  let56
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
