(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun b_n3_alt () FF0)
(declare-fun c_n1_alt () FF0)
(declare-fun a_n4_alt () FF0)
(declare-fun mul_n5_alt () FF0)
(declare-fun d_n0_alt () FF0)
(declare-fun return_n2_alt () FF0)
(declare-fun b_n3 () FF0)
(declare-fun c_n1 () FF0)
(declare-fun a_n4 () FF0)
(declare-fun mul_n5 () FF0)
(declare-fun d_n0 () FF0)
(declare-fun return_n2 () FF0)
(assert 
  (let ((let0 (as ff0 FF0)))
  (let ((let1 (as ff6 FF0)))
  (let ((let2 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184511 FF0)))
  (let ((let3 b_n3_alt))
  (let ((let4 (ff.mul let3 let2)))
  (let ((let5 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let6 c_n1_alt))
  (let ((let7 (ff.mul let6 let5)))
  (let ((let8 a_n4_alt))
  (let ((let9 (ff.mul let8 let5)))
  (let ((let10 mul_n5_alt))
  (let ((let11 d_n0_alt))
  (let ((let12 (ff.mul let11 let2)))
  (let ((let13 (ff.add let12 let10 let9 let7 let4 let1)))
  (let ((let14 (as ff1 FF0)))
  (let ((let15 return_n2_alt))
  (let ((let16 (ff.mul let15 let5)))
  (let ((let17 (ff.add let16 let14)))
  (let ((let18 (ff.mul let17 let13)))
  (let ((let19 (= let18 let0)))
  (let ((let20 (ff.add let9 let14)))
  (let ((let21 (ff.mul let6 let20)))
  (let ((let22 (= let21 let10)))
  (let ((let23 (and let22 let19)))
  (let ((let24 b_n3))
  (let ((let25 (ff.mul let24 let2)))
  (let ((let26 c_n1))
  (let ((let27 (ff.mul let26 let5)))
  (let ((let28 a_n4))
  (let ((let29 (ff.mul let28 let5)))
  (let ((let30 mul_n5))
  (let ((let31 d_n0))
  (let ((let32 (ff.mul let31 let2)))
  (let ((let33 (ff.add let32 let30 let29 let27 let25 let1)))
  (let ((let34 return_n2))
  (let ((let35 (ff.mul let34 let5)))
  (let ((let36 (ff.add let35 let14)))
  (let ((let37 (ff.mul let36 let33)))
  (let ((let38 (= let37 let0)))
  (let ((let39 (ff.add let29 let14)))
  (let ((let40 (ff.mul let26 let39)))
  (let ((let41 (= let40 let30)))
  (let ((let42 (and let41 let38)))
  (let ((let43 (= let34 let15)))
  (let ((let44 (not let43)))
  (let ((let45 (= let24 let3)))
  (let ((let46 (= let31 let11)))
  (let ((let47 (= let26 let6)))
  (let ((let48 (= let28 let8)))
  (let ((let49 (and let48 let47 let46 let45)))
  (let ((let50 (and let49 let44 let42 let23)))
  let50
)))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
