(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun b () Bool)
(declare-fun e () Bool)
(declare-fun d () Bool)
(declare-fun a () Bool)
(declare-fun c () Bool)
(declare-fun f () Bool)
(declare-fun g () Bool)
(declare-fun j () Bool)
(declare-fun i () Bool)
(declare-fun h () Bool)
(declare-fun return_n8 () FF0)
(declare-fun h_n7 () FF0)
(declare-fun mul_n15 () FF0)
(declare-fun is_zero_n13 () FF0)
(declare-fun i_n5 () FF0)
(declare-fun is_zero_inv_n16 () FF0)
(declare-fun g_n10 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun j_n3 () FF0)
(declare-fun e_n2 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun b_n9 () FF0)
(declare-fun f_n1 () FF0)
(declare-fun d_n4 () FF0)
(declare-fun is_zero_inv_n12 () FF0)
(declare-fun a_n0 () FF0)
(declare-fun c_n6 () FF0)
(assert 
  (let ((let0 b))
  (let ((let1 e))
  (let ((let2 d))
  (let ((let3 a))
  (let ((let4 c))
  (let ((let5 (=> let4 let3)))
  (let ((let6 f))
  (let ((let7 (or let6 let5 let2 let1 let0)))
  (let ((let8 g))
  (let ((let9 j))
  (let ((let10 (or let1 let9 let8)))
  (let ((let11 i))
  (let ((let12 h))
  (let ((let13 (and let12 let11 let10 let7)))
  (let ((let14 return_n8))
  (let ((let15 (as ff1 FF0)))
  (let ((let16 (= let15 let14)))
  (let ((let17 (= let16 let13)))
  (let ((let18 (as ff0 FF0)))
  (let ((let19 (= let18 let14)))
  (let ((let20 (or let16 let19)))
  (let ((let21 (and let20 let17)))
  (let ((let22 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let23 (ff.mul let14 let22)))
  (let ((let24 (ff.add let23 let15)))
  (let ((let25 (as ff2 FF0)))
  (let ((let26 h_n7))
  (let ((let27 (ff.mul let26 let22)))
  (let ((let28 mul_n15))
  (let ((let29 is_zero_n13))
  (let ((let30 i_n5))
  (let ((let31 (ff.mul let30 let22)))
  (let ((let32 (ff.add let31 let29 let28 let27 let25)))
  (let ((let33 is_zero_inv_n16))
  (let ((let34 (ff.mul let33 let32)))
  (let ((let35 (= let34 let24)))
  (let ((let36 g_n10))
  (let ((let37 (ff.mul let36 let22)))
  (let ((let38 (ff.add let37 let15)))
  (let ((let39 mul_n14))
  (let ((let40 (ff.mul let39 let38)))
  (let ((let41 (= let40 let28)))
  (let ((let42 j_n3))
  (let ((let43 (ff.mul let42 let22)))
  (let ((let44 (ff.add let43 let15)))
  (let ((let45 e_n2))
  (let ((let46 (ff.mul let45 let22)))
  (let ((let47 (ff.add let46 let15)))
  (let ((let48 (ff.mul let47 let44)))
  (let ((let49 (= let48 let39)))
  (let ((let50 mul_n11))
  (let ((let51 (ff.mul let50 let22)))
  (let ((let52 b_n9))
  (let ((let53 f_n1))
  (let ((let54 d_n4))
  (let ((let55 (ff.add let45 let54 let53 let52 let51 let15)))
  (let ((let56 (ff.mul let29 let55)))
  (let ((let57 (= let56 let18)))
  (let ((let58 (ff.mul let29 let22)))
  (let ((let59 (ff.add let58 let15)))
  (let ((let60 is_zero_inv_n12))
  (let ((let61 (ff.mul let60 let55)))
  (let ((let62 (= let61 let59)))
  (let ((let63 a_n0))
  (let ((let64 (ff.mul let63 let22)))
  (let ((let65 (ff.add let64 let15)))
  (let ((let66 c_n6))
  (let ((let67 (ff.mul let66 let65)))
  (let ((let68 (= let67 let50)))
  (let ((let69 (and let68 let62 let57 let49 let41 let35)))
  (let ((let70 (ite let6 let15 let18)))
  (let ((let71 (= let53 let70)))
  (let ((let72 (ite let3 let15 let18)))
  (let ((let73 (= let63 let72)))
  (let ((let74 (ite let2 let15 let18)))
  (let ((let75 (= let54 let74)))
  (let ((let76 (ite let4 let15 let18)))
  (let ((let77 (= let66 let76)))
  (let ((let78 (ite let0 let15 let18)))
  (let ((let79 (= let52 let78)))
  (let ((let80 (ite let1 let15 let18)))
  (let ((let81 (= let45 let80)))
  (let ((let82 (ite let9 let15 let18)))
  (let ((let83 (= let42 let82)))
  (let ((let84 (ite let11 let15 let18)))
  (let ((let85 (= let30 let84)))
  (let ((let86 (ite let12 let15 let18)))
  (let ((let87 (= let26 let86)))
  (let ((let88 (ite let8 let15 let18)))
  (let ((let89 (= let36 let88)))
  (let ((let90 (and let89 let87 let85 let83 let81 let79 let77 let75 let73 let71)))
  (let ((let91 (and let90 let69)))
  (let ((let92 (=> let91 let21)))
  (let ((let93 (not let92)))
  let93
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
