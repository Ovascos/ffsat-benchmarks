(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun c () Bool)
(declare-fun a () Bool)
(declare-fun d () Bool)
(declare-fun b () Bool)
(declare-fun return_n2 () FF0)
(declare-fun c_n1 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun a_n4 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun d_n0 () FF0)
(declare-fun mul_n12 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun b_n3 () FF0)
(declare-fun mul_n8 () FF0)
(declare-fun mul_n7 () FF0)
(declare-fun mul_n6 () FF0)
(declare-fun mul_n5 () FF0)
(assert 
  (let ((let0 c))
  (let ((let1 a))
  (let ((let2 d))
  (let ((let3 b))
  (let ((let4 (=> let1 let3)))
  (let ((let5 (and let2 let4 let1 let3 let3)))
  (let ((let6 (or let4 let5 let5 let2 let2 let1 let0)))
  (let ((let7 return_n2))
  (let ((let8 (as ff1 FF0)))
  (let ((let9 (= let8 let7)))
  (let ((let10 (= let9 let6)))
  (let ((let11 (as ff0 FF0)))
  (let ((let12 (= let11 let7)))
  (let ((let13 (or let9 let12)))
  (let ((let14 (and let13 let10)))
  (let ((let15 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let16 (ff.mul let7 let15)))
  (let ((let17 (ff.add let16 let8)))
  (let ((let18 c_n1))
  (let ((let19 (ff.mul let18 let15)))
  (let ((let20 (ff.add let19 let8)))
  (let ((let21 mul_n14))
  (let ((let22 (ff.mul let21 let20)))
  (let ((let23 (= let22 let17)))
  (let ((let24 a_n4))
  (let ((let25 (ff.mul let24 let15)))
  (let ((let26 (ff.add let25 let8)))
  (let ((let27 mul_n13))
  (let ((let28 (ff.mul let27 let26)))
  (let ((let29 (= let28 let21)))
  (let ((let30 d_n0))
  (let ((let31 (ff.mul let30 let15)))
  (let ((let32 (ff.add let31 let8)))
  (let ((let33 mul_n12))
  (let ((let34 (ff.mul let33 let32)))
  (let ((let35 (= let34 let27)))
  (let ((let36 mul_n11))
  (let ((let37 (ff.mul let36 let32)))
  (let ((let38 (= let37 let33)))
  (let ((let39 mul_n9))
  (let ((let40 (ff.mul let39 let15)))
  (let ((let41 (ff.add let40 let8)))
  (let ((let42 mul_n10))
  (let ((let43 (ff.mul let42 let41)))
  (let ((let44 (= let43 let36)))
  (let ((let45 b_n3))
  (let ((let46 mul_n8))
  (let ((let47 (ff.mul let46 let45)))
  (let ((let48 (= let47 let39)))
  (let ((let49 mul_n7))
  (let ((let50 (ff.mul let49 let45)))
  (let ((let51 (= let50 let46)))
  (let ((let52 mul_n6))
  (let ((let53 (ff.mul let52 let24)))
  (let ((let54 (= let53 let49)))
  (let ((let55 mul_n5))
  (let ((let56 (ff.mul let55 let15)))
  (let ((let57 (ff.add let56 let8)))
  (let ((let58 (ff.mul let30 let57)))
  (let ((let59 (= let58 let52)))
  (let ((let60 (ff.mul let45 let15)))
  (let ((let61 (ff.add let60 let8)))
  (let ((let62 (ff.mul let24 let61)))
  (let ((let63 (= let62 let55)))
  (let ((let64 (and let63 let59 let54 let51 let48 let44 let38 let35 let29 let23)))
  (let ((let65 (ite let2 let8 let11)))
  (let ((let66 (= let30 let65)))
  (let ((let67 (ite let0 let8 let11)))
  (let ((let68 (= let18 let67)))
  (let ((let69 (ite let1 let8 let11)))
  (let ((let70 (= let24 let69)))
  (let ((let71 (ite let3 let8 let11)))
  (let ((let72 (= let45 let71)))
  (let ((let73 (and let72 let70 let68 let66)))
  (let ((let74 (and let73 let64)))
  (let ((let75 (=> let74 let14)))
  (let ((let76 (not let75)))
  let76
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
