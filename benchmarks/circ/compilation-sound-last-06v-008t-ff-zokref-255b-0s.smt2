(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun b () Bool)
(declare-fun c () Bool)
(declare-fun f () Bool)
(declare-fun a () Bool)
(declare-fun e () Bool)
(declare-fun d () Bool)
(declare-fun out () FF0)
(declare-fun _26 () FF0)
(declare-fun _18 () FF0)
(declare-fun _17 () FF0)
(declare-fun _25 () FF0)
(declare-fun _23 () FF0)
(declare-fun _3 () FF0)
(declare-fun _21 () FF0)
(declare-fun _5 () FF0)
(declare-fun _20 () FF0)
(declare-fun _2 () FF0)
(declare-fun _4 () FF0)
(declare-fun _0 () FF0)
(declare-fun _1 () FF0)
(declare-fun _12 () FF0)
(declare-fun _10 () FF0)
(declare-fun _9 () FF0)
(assert 
  (let ((let0 b))
  (let ((let1 c))
  (let ((let2 f))
  (let ((let3 a))
  (let ((let4 (ite let3 let2 let1)))
  (let ((let5 (=> let0 let4)))
  (let ((let6 (not let5)))
  (let ((let7 e))
  (let ((let8 (ite let7 let6 let0)))
  (let ((let9 (or let7 let3)))
  (let ((let10 (= let1 let9)))
  (let ((let11 (= let10 let2)))
  (let ((let12 d))
  (let ((let13 (and let12 let11 let8)))
  (let ((let14 out))
  (let ((let15 (as ff1 FF0)))
  (let ((let16 (= let15 let14)))
  (let ((let17 (= let16 let13)))
  (let ((let18 (as ff0 FF0)))
  (let ((let19 (= let18 let14)))
  (let ((let20 (or let16 let19)))
  (let ((let21 (and let20 let17)))
  (let ((let22 _26))
  (let ((let23 _18))
  (let ((let24 _17))
  (let ((let25 (ff.add let24 let23)))
  (let ((let26 _25))
  (let ((let27 (ff.mul let26 let25)))
  (let ((let28 (= let27 let22)))
  (let ((let29 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let30 _23))
  (let ((let31 (ff.mul let30 let29)))
  (let ((let32 (ff.add let31 let15)))
  (let ((let33 _3))
  (let ((let34 (ff.mul let33 let32)))
  (let ((let35 (= let34 let26)))
  (let ((let36 _21))
  (let ((let37 (ff.mul let36 let29)))
  (let ((let38 _5))
  (let ((let39 (ff.mul let38 let29)))
  (let ((let40 (ff.add let39 let37 let15)))
  (let ((let41 (ff.mul let40 let40)))
  (let ((let42 (= let41 let30)))
  (let ((let43 _20))
  (let ((let44 (ff.mul let43 let29)))
  (let ((let45 _2))
  (let ((let46 (ff.add let45 let44)))
  (let ((let47 (ff.mul let46 let46)))
  (let ((let48 (= let47 let36)))
  (let ((let49 _4))
  (let ((let50 _0))
  (let ((let51 (ff.add let50 let49 let44)))
  (let ((let52 (ff.mul let49 let50)))
  (let ((let53 (= let52 let51)))
  (let ((let54 _1))
  (let ((let55 (ff.mul let49 let29)))
  (let ((let56 (ff.add let55 let15)))
  (let ((let57 (ff.mul let56 let54)))
  (let ((let58 (= let57 let23)))
  (let ((let59 _12))
  (let ((let60 (ff.mul let59 let29)))
  (let ((let61 (ff.add let60 let15)))
  (let ((let62 (ff.mul let49 let61)))
  (let ((let63 (= let62 let24)))
  (let ((let64 _10))
  (let ((let65 _9))
  (let ((let66 (ff.mul let54 let29)))
  (let ((let67 (ff.add let66 let65 let64 let60 let15)))
  (let ((let68 (ff.add let65 let64)))
  (let ((let69 (ff.add let66 let15)))
  (let ((let70 (ff.mul let69 let68)))
  (let ((let71 (= let70 let67)))
  (let ((let72 (ff.mul let50 let29)))
  (let ((let73 (ff.add let72 let15)))
  (let ((let74 (ff.mul let73 let45)))
  (let ((let75 (= let74 let64)))
  (let ((let76 (ff.mul let50 let38)))
  (let ((let77 (= let76 let65)))
  (let ((let78 (ff.mul let38 let38)))
  (let ((let79 (= let78 let38)))
  (let ((let80 (ff.mul let49 let49)))
  (let ((let81 (= let80 let49)))
  (let ((let82 (ff.mul let33 let33)))
  (let ((let83 (= let82 let33)))
  (let ((let84 (ff.mul let45 let45)))
  (let ((let85 (= let84 let45)))
  (let ((let86 (ff.mul let54 let54)))
  (let ((let87 (= let86 let54)))
  (let ((let88 (ff.mul let50 let50)))
  (let ((let89 (= let88 let50)))
  (let ((let90 (and let89 let87 let85 let83 let81 let79 let77 let75 let71 let63 let58 let53 let48 let42 let35 let28)))
  (let ((let91 (ite let3 let15 let18)))
  (let ((let92 (= let50 let91)))
  (let ((let93 (ite let1 let15 let18)))
  (let ((let94 (= let45 let93)))
  (let ((let95 (ite let2 let15 let18)))
  (let ((let96 (= let38 let95)))
  (let ((let97 (ite let12 let15 let18)))
  (let ((let98 (= let33 let97)))
  (let ((let99 (ite let7 let15 let18)))
  (let ((let100 (= let49 let99)))
  (let ((let101 (ite let0 let15 let18)))
  (let ((let102 (= let54 let101)))
  (let ((let103 (and let102 let100 let98 let96 let94 let92)))
  (let ((let104 (and let103 let90)))
  (let ((let105 (=> let104 let21)))
  (let ((let106 (not let105)))
  let106
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
