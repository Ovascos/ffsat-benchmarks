(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun x1 () Bool)
(declare-fun x0 () Bool)
(declare-fun return_n0 () FF0)
(declare-fun x1_n2 () FF0)
(declare-fun x0_n1 () FF0)
(assert 
  (let ((let0 x1))
  (let ((let1 x0))
  (let ((let2 (or let1 let0)))
  (let ((let3 return_n0))
  (let ((let4 (as ff1 FF0)))
  (let ((let5 (= let4 let3)))
  (let ((let6 (= let5 let2)))
  (let ((let7 (as ff0 FF0)))
  (let ((let8 (= let7 let3)))
  (let ((let9 (or let5 let8)))
  (let ((let10 (and let9 let6)))
  (let ((let11 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let12 (ff.mul let3 let11)))
  (let ((let13 (ff.add let12 let4)))
  (let ((let14 x1_n2))
  (let ((let15 (ff.mul let14 let11)))
  (let ((let16 (ff.add let15 let4)))
  (let ((let17 x0_n1))
  (let ((let18 (ff.mul let17 let11)))
  (let ((let19 (ff.add let18 let4)))
  (let ((let20 (ff.mul let19 let16)))
  (let ((let21 (= let20 let13)))
  (let ((let22 (ite let1 let4 let7)))
  (let ((let23 (= let17 let22)))
  (let ((let24 (ite let0 let4 let7)))
  (let ((let25 (= let14 let24)))
  (let ((let26 (and let25 let23)))
  (let ((let27 (and let26 let21)))
  (let ((let28 (=> let27 let10)))
  (let ((let29 (not let28)))
  let29
))))))))))))))))))))))))))))))
)
(check-sat)
