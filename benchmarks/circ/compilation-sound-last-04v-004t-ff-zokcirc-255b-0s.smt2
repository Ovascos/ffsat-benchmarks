(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun c () Bool)
(declare-fun a () Bool)
(declare-fun d () Bool)
(declare-fun b () Bool)
(declare-fun return_n2 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun a_n4 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun d_n0 () FF0)
(declare-fun mul_n12 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun mul_n5 () FF0)
(declare-fun b_n3 () FF0)
(declare-fun mul_n8 () FF0)
(declare-fun mul_n7 () FF0)
(declare-fun mul_n6 () FF0)
(declare-fun c_n1 () FF0)
(assert 
  (let ((let0 c))
  (let ((let1 a))
  (let ((let2 d))
  (let ((let3 b))
  (let ((let4 (=> let1 let3)))
  (let ((let5 (and let2 let4 let1 let3 let3)))
  (let ((let6 (or let4 let5 let5 let2 let2 let1 let0)))
  (let ((let7 return_n2))
  (let ((let8 (as ff1 FF0)))
  (let ((let9 (= let8 let7)))
  (let ((let10 (= let9 let6)))
  (let ((let11 (as ff0 FF0)))
  (let ((let12 (= let11 let7)))
  (let ((let13 (or let9 let12)))
  (let ((let14 (and let13 let10)))
  (let ((let15 mul_n14))
  (let ((let16 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let17 a_n4))
  (let ((let18 (ff.mul let17 let16)))
  (let ((let19 (ff.add let18 let8)))
  (let ((let20 mul_n13))
  (let ((let21 (ff.mul let20 let19)))
  (let ((let22 (= let21 let15)))
  (let ((let23 d_n0))
  (let ((let24 (ff.mul let23 let16)))
  (let ((let25 (ff.add let24 let8)))
  (let ((let26 mul_n12))
  (let ((let27 (ff.mul let26 let25)))
  (let ((let28 (= let27 let20)))
  (let ((let29 mul_n11))
  (let ((let30 (ff.mul let29 let25)))
  (let ((let31 (= let30 let26)))
  (let ((let32 mul_n9))
  (let ((let33 (ff.mul let32 let16)))
  (let ((let34 (ff.add let33 let8)))
  (let ((let35 mul_n10))
  (let ((let36 (ff.mul let35 let34)))
  (let ((let37 (= let36 let29)))
  (let ((let38 mul_n5))
  (let ((let39 (ff.mul let38 let34)))
  (let ((let40 (= let39 let35)))
  (let ((let41 b_n3))
  (let ((let42 mul_n8))
  (let ((let43 (ff.mul let42 let41)))
  (let ((let44 (= let43 let32)))
  (let ((let45 mul_n7))
  (let ((let46 (ff.mul let45 let41)))
  (let ((let47 (= let46 let42)))
  (let ((let48 mul_n6))
  (let ((let49 (ff.mul let48 let17)))
  (let ((let50 (= let49 let45)))
  (let ((let51 (ff.mul let38 let16)))
  (let ((let52 (ff.add let51 let8)))
  (let ((let53 (ff.mul let23 let52)))
  (let ((let54 (= let53 let48)))
  (let ((let55 (ff.mul let41 let16)))
  (let ((let56 (ff.add let55 let8)))
  (let ((let57 (ff.mul let17 let56)))
  (let ((let58 (= let57 let38)))
  (let ((let59 (and let58 let54 let50 let47 let44 let40 let37 let31 let28 let22)))
  (let ((let60 (ite let2 let8 let11)))
  (let ((let61 (= let23 let60)))
  (let ((let62 (ite let1 let8 let11)))
  (let ((let63 (= let17 let62)))
  (let ((let64 (ite let3 let8 let11)))
  (let ((let65 (= let41 let64)))
  (let ((let66 (ite let0 let8 let11)))
  (let ((let67 c_n1))
  (let ((let68 (= let67 let66)))
  (let ((let69 (and let68 let65 let63 let61)))
  (let ((let70 (and let69 let59)))
  (let ((let71 (=> let70 let14)))
  (let ((let72 (not let71)))
  let72
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
