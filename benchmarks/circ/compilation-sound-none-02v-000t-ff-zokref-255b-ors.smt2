(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun x1 () Bool)
(declare-fun x0 () Bool)
(declare-fun out () FF0)
(declare-fun _2 () FF0)
(declare-fun _1 () FF0)
(declare-fun _0 () FF0)
(assert 
  (let ((let0 x1))
  (let ((let1 x0))
  (let ((let2 (or let1 let0)))
  (let ((let3 out))
  (let ((let4 (as ff1 FF0)))
  (let ((let5 (= let4 let3)))
  (let ((let6 (= let5 let2)))
  (let ((let7 (as ff0 FF0)))
  (let ((let8 (= let7 let3)))
  (let ((let9 (or let5 let8)))
  (let ((let10 (and let9 let6)))
  (let ((let11 _2))
  (let ((let12 (= let11 let3)))
  (let ((let13 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let14 (ff.mul let11 let13)))
  (let ((let15 _1))
  (let ((let16 _0))
  (let ((let17 (ff.add let16 let15 let14)))
  (let ((let18 (ff.mul let16 let15)))
  (let ((let19 (= let18 let17)))
  (let ((let20 (ff.mul let15 let15)))
  (let ((let21 (= let20 let15)))
  (let ((let22 (ff.mul let16 let16)))
  (let ((let23 (= let22 let16)))
  (let ((let24 (and let23 let21 let19 let12)))
  (let ((let25 (ite let0 let4 let7)))
  (let ((let26 (= let15 let25)))
  (let ((let27 (ite let1 let4 let7)))
  (let ((let28 (= let16 let27)))
  (let ((let29 (and let28 let26)))
  (let ((let30 (and let29 let24)))
  (let ((let31 (=> let30 let10)))
  (let ((let32 (not let31)))
  let32
)))))))))))))))))))))))))))))))))
)
(check-sat)
