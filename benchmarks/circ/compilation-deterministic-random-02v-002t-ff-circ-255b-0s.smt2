(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun mul_n3_alt () FF0)
(declare-fun b_n1_alt () FF0)
(declare-fun a_n2_alt () FF0)
(declare-fun mul_n3 () FF0)
(declare-fun b_n1 () FF0)
(declare-fun a_n2 () FF0)
(declare-fun return_n0_alt () FF0)
(declare-fun return_n0 () FF0)
(assert 
  (let ((let0 mul_n3_alt))
  (let ((let1 (as ff1 FF0)))
  (let ((let2 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let3 b_n1_alt))
  (let ((let4 (ff.mul let3 let2)))
  (let ((let5 (ff.add let4 let1)))
  (let ((let6 a_n2_alt))
  (let ((let7 (ff.mul let6 let2)))
  (let ((let8 (ff.add let7 let1)))
  (let ((let9 (ff.mul let8 let5)))
  (let ((let10 (= let9 let0)))
  (let ((let11 mul_n3))
  (let ((let12 b_n1))
  (let ((let13 (ff.mul let12 let2)))
  (let ((let14 (ff.add let13 let1)))
  (let ((let15 a_n2))
  (let ((let16 (ff.mul let15 let2)))
  (let ((let17 (ff.add let16 let1)))
  (let ((let18 (ff.mul let17 let14)))
  (let ((let19 (= let18 let11)))
  (let ((let20 return_n0_alt))
  (let ((let21 return_n0))
  (let ((let22 (= let21 let20)))
  (let ((let23 (not let22)))
  (let ((let24 (= let12 let3)))
  (let ((let25 (= let15 let6)))
  (let ((let26 (and let25 let24)))
  (let ((let27 (and let26 let23 let19 let10)))
  let27
))))))))))))))))))))))))))))
)
(check-sat)
