(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun b () Bool)
(declare-fun c () Bool)
(declare-fun f () Bool)
(declare-fun a () Bool)
(declare-fun e () Bool)
(declare-fun d () Bool)
(declare-fun return_n3 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun b_n4 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun mul_n12 () FF0)
(declare-fun c_n2 () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun f_n5 () FF0)
(declare-fun d_n1 () FF0)
(declare-fun a_n6 () FF0)
(declare-fun e_n0 () FF0)
(declare-fun mul_n8 () FF0)
(declare-fun mul_n7 () FF0)
(assert 
  (let ((let0 b))
  (let ((let1 c))
  (let ((let2 f))
  (let ((let3 a))
  (let ((let4 (ite let3 let2 let1)))
  (let ((let5 (=> let0 let4)))
  (let ((let6 (not let5)))
  (let ((let7 e))
  (let ((let8 (ite let7 let6 let0)))
  (let ((let9 (or let7 let3)))
  (let ((let10 (= let1 let9)))
  (let ((let11 (= let10 let2)))
  (let ((let12 d))
  (let ((let13 (and let12 let11 let8)))
  (let ((let14 return_n3))
  (let ((let15 (as ff1 FF0)))
  (let ((let16 (= let15 let14)))
  (let ((let17 (= let16 let13)))
  (let ((let18 (as ff0 FF0)))
  (let ((let19 (= let18 let14)))
  (let ((let20 (or let16 let19)))
  (let ((let21 (and let20 let17)))
  (let ((let22 mul_n9))
  (let ((let23 b_n4))
  (let ((let24 (ff.add let23 let22)))
  (let ((let25 mul_n13))
  (let ((let26 (ff.mul let25 let24)))
  (let ((let27 (= let26 let14)))
  (let ((let28 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let29 mul_n11))
  (let ((let30 (ff.mul let29 let28)))
  (let ((let31 mul_n12))
  (let ((let32 c_n2))
  (let ((let33 mul_n10))
  (let ((let34 (ff.mul let33 let28)))
  (let ((let35 f_n5))
  (let ((let36 (ff.mul let35 let28)))
  (let ((let37 (ff.add let36 let34 let32 let31 let30 let15)))
  (let ((let38 d_n1))
  (let ((let39 (ff.mul let38 let37)))
  (let ((let40 (= let39 let25)))
  (let ((let41 (as ff2 FF0)))
  (let ((let42 (ff.mul let29 let41)))
  (let ((let43 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184511 FF0)))
  (let ((let44 (ff.mul let32 let43)))
  (let ((let45 (ff.mul let33 let41)))
  (let ((let46 (ff.add let45 let44 let42)))
  (let ((let47 (ff.mul let46 let35)))
  (let ((let48 (= let47 let31)))
  (let ((let49 (ff.add let34 let15)))
  (let ((let50 (ff.mul let32 let41)))
  (let ((let51 (ff.mul let50 let49)))
  (let ((let52 (= let51 let29)))
  (let ((let53 a_n6))
  (let ((let54 (ff.mul let53 let28)))
  (let ((let55 (ff.add let54 let15)))
  (let ((let56 e_n0))
  (let ((let57 (ff.mul let56 let28)))
  (let ((let58 (ff.add let57 let15)))
  (let ((let59 (ff.mul let58 let55)))
  (let ((let60 (= let59 let33)))
  (let ((let61 (ff.mul let23 let28)))
  (let ((let62 mul_n8))
  (let ((let63 (ff.add let62 let61)))
  (let ((let64 (ff.mul let56 let63)))
  (let ((let65 (= let64 let22)))
  (let ((let66 mul_n7))
  (let ((let67 (ff.mul let66 let28)))
  (let ((let68 (ff.mul let32 let28)))
  (let ((let69 (ff.add let68 let67 let15)))
  (let ((let70 (ff.mul let23 let69)))
  (let ((let71 (= let70 let62)))
  (let ((let72 (ff.add let35 let68)))
  (let ((let73 (ff.mul let53 let72)))
  (let ((let74 (= let73 let66)))
  (let ((let75 (and let74 let71 let65 let60 let52 let48 let40 let27)))
  (let ((let76 (ite let7 let15 let18)))
  (let ((let77 (= let56 let76)))
  (let ((let78 (ite let0 let15 let18)))
  (let ((let79 (= let23 let78)))
  (let ((let80 (ite let2 let15 let18)))
  (let ((let81 (= let35 let80)))
  (let ((let82 (ite let3 let15 let18)))
  (let ((let83 (= let53 let82)))
  (let ((let84 (ite let1 let15 let18)))
  (let ((let85 (= let32 let84)))
  (let ((let86 (ite let12 let15 let18)))
  (let ((let87 (= let38 let86)))
  (let ((let88 (and let87 let85 let83 let81 let79 let77)))
  (let ((let89 (and let88 let75)))
  (let ((let90 (=> let89 let21)))
  (let ((let91 (not let90)))
  let91
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
