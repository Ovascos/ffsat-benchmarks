(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun j () Bool)
(declare-fun c () Bool)
(declare-fun l () Bool)
(declare-fun k () Bool)
(declare-fun i () Bool)
(declare-fun h () Bool)
(declare-fun g () Bool)
(declare-fun f () Bool)
(declare-fun e () Bool)
(declare-fun d () Bool)
(declare-fun b () Bool)
(declare-fun a () Bool)
(declare-fun return_n1 () FF0)
(declare-fun j_n5 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun c_n8 () FF0)
(declare-fun mul_n22 () FF0)
(declare-fun l_n0 () FF0)
(declare-fun mul_n21 () FF0)
(declare-fun k_n3 () FF0)
(declare-fun mul_n20 () FF0)
(declare-fun i_n7 () FF0)
(declare-fun mul_n19 () FF0)
(declare-fun h_n9 () FF0)
(declare-fun mul_n18 () FF0)
(declare-fun g_n11 () FF0)
(declare-fun mul_n17 () FF0)
(declare-fun f_n2 () FF0)
(declare-fun mul_n16 () FF0)
(declare-fun e_n4 () FF0)
(declare-fun mul_n15 () FF0)
(declare-fun d_n6 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun b_n10 () FF0)
(declare-fun a_n12 () FF0)
(assert 
  (let ((let0 j))
  (let ((let1 c))
  (let ((let2 (= let1 let0)))
  (let ((let3 l))
  (let ((let4 k))
  (let ((let5 i))
  (let ((let6 h))
  (let ((let7 g))
  (let ((let8 f))
  (let ((let9 e))
  (let ((let10 d))
  (let ((let11 b))
  (let ((let12 a))
  (let ((let13 (and let12 let11 let10 let9 let8 let7 let6 let5 let4 let3 let2)))
  (let ((let14 return_n1))
  (let ((let15 (as ff1 FF0)))
  (let ((let16 (= let15 let14)))
  (let ((let17 (= let16 let13)))
  (let ((let18 (as ff0 FF0)))
  (let ((let19 (= let18 let14)))
  (let ((let20 (or let16 let19)))
  (let ((let21 (and let20 let17)))
  (let ((let22 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let23 j_n5))
  (let ((let24 (ff.mul let23 let22)))
  (let ((let25 mul_n13))
  (let ((let26 c_n8))
  (let ((let27 (ff.mul let26 let22)))
  (let ((let28 (ff.add let27 let25 let24 let15)))
  (let ((let29 mul_n22))
  (let ((let30 (ff.mul let29 let28)))
  (let ((let31 (= let30 let14)))
  (let ((let32 l_n0))
  (let ((let33 mul_n21))
  (let ((let34 (ff.mul let33 let32)))
  (let ((let35 (= let34 let29)))
  (let ((let36 k_n3))
  (let ((let37 mul_n20))
  (let ((let38 (ff.mul let37 let36)))
  (let ((let39 (= let38 let33)))
  (let ((let40 i_n7))
  (let ((let41 mul_n19))
  (let ((let42 (ff.mul let41 let40)))
  (let ((let43 (= let42 let37)))
  (let ((let44 h_n9))
  (let ((let45 mul_n18))
  (let ((let46 (ff.mul let45 let44)))
  (let ((let47 (= let46 let41)))
  (let ((let48 g_n11))
  (let ((let49 mul_n17))
  (let ((let50 (ff.mul let49 let48)))
  (let ((let51 (= let50 let45)))
  (let ((let52 f_n2))
  (let ((let53 mul_n16))
  (let ((let54 (ff.mul let53 let52)))
  (let ((let55 (= let54 let49)))
  (let ((let56 e_n4))
  (let ((let57 mul_n15))
  (let ((let58 (ff.mul let57 let56)))
  (let ((let59 (= let58 let53)))
  (let ((let60 d_n6))
  (let ((let61 mul_n14))
  (let ((let62 (ff.mul let61 let60)))
  (let ((let63 (= let62 let57)))
  (let ((let64 b_n10))
  (let ((let65 a_n12))
  (let ((let66 (ff.mul let65 let64)))
  (let ((let67 (= let66 let61)))
  (let ((let68 (as ff2 FF0)))
  (let ((let69 (ff.mul let26 let68)))
  (let ((let70 (ff.mul let69 let23)))
  (let ((let71 (= let70 let25)))
  (let ((let72 (and let71 let67 let63 let59 let55 let51 let47 let43 let39 let35 let31)))
  (let ((let73 (ite let9 let15 let18)))
  (let ((let74 (= let56 let73)))
  (let ((let75 (ite let7 let15 let18)))
  (let ((let76 (= let48 let75)))
  (let ((let77 (ite let12 let15 let18)))
  (let ((let78 (= let65 let77)))
  (let ((let79 (ite let3 let15 let18)))
  (let ((let80 (= let32 let79)))
  (let ((let81 (ite let6 let15 let18)))
  (let ((let82 (= let44 let81)))
  (let ((let83 (ite let0 let15 let18)))
  (let ((let84 (= let23 let83)))
  (let ((let85 (ite let8 let15 let18)))
  (let ((let86 (= let52 let85)))
  (let ((let87 (ite let5 let15 let18)))
  (let ((let88 (= let40 let87)))
  (let ((let89 (ite let11 let15 let18)))
  (let ((let90 (= let64 let89)))
  (let ((let91 (ite let4 let15 let18)))
  (let ((let92 (= let36 let91)))
  (let ((let93 (ite let1 let15 let18)))
  (let ((let94 (= let26 let93)))
  (let ((let95 (ite let10 let15 let18)))
  (let ((let96 (= let60 let95)))
  (let ((let97 (and let96 let94 let92 let90 let88 let86 let84 let82 let80 let78 let76 let74)))
  (let ((let98 (and let97 let72)))
  (let ((let99 (=> let98 let21)))
  (let ((let100 (not let99)))
  let100
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
