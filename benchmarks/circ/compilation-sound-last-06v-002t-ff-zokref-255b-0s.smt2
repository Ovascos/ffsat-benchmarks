(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun c () Bool)
(declare-fun b () Bool)
(declare-fun d () Bool)
(declare-fun f () Bool)
(declare-fun e () Bool)
(declare-fun a () Bool)
(declare-fun out () FF0)
(declare-fun _14 () FF0)
(declare-fun _13 () FF0)
(declare-fun _10 () FF0)
(declare-fun _9 () FF0)
(declare-fun _12 () FF0)
(declare-fun _5 () FF0)
(declare-fun _4 () FF0)
(declare-fun _0 () FF0)
(declare-fun _2 () FF0)
(declare-fun _3 () FF0)
(declare-fun _1 () FF0)
(assert 
  (let ((let0 c))
  (let ((let1 b))
  (let ((let2 d))
  (let ((let3 (ite let2 let1 let0)))
  (let ((let4 f))
  (let ((let5 e))
  (let ((let6 a))
  (let ((let7 (or let6 let5 let4 let3)))
  (let ((let8 out))
  (let ((let9 (as ff1 FF0)))
  (let ((let10 (= let9 let8)))
  (let ((let11 (= let10 let7)))
  (let ((let12 (as ff0 FF0)))
  (let ((let13 (= let12 let8)))
  (let ((let14 (or let10 let13)))
  (let ((let15 (and let14 let11)))
  (let ((let16 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let17 _14))
  (let ((let18 (ff.mul let17 let16)))
  (let ((let19 _13))
  (let ((let20 _10))
  (let ((let21 _9))
  (let ((let22 (ff.add let21 let20 let19 let18)))
  (let ((let23 (ff.add let21 let20)))
  (let ((let24 (ff.mul let19 let23)))
  (let ((let25 (= let24 let22)))
  (let ((let26 (ff.mul let19 let16)))
  (let ((let27 _12))
  (let ((let28 _5))
  (let ((let29 (ff.add let28 let27 let26)))
  (let ((let30 (ff.mul let27 let28)))
  (let ((let31 (= let30 let29)))
  (let ((let32 (ff.mul let27 let16)))
  (let ((let33 _4))
  (let ((let34 _0))
  (let ((let35 (ff.add let34 let33 let32)))
  (let ((let36 (ff.mul let34 let33)))
  (let ((let37 (= let36 let35)))
  (let ((let38 _2))
  (let ((let39 _3))
  (let ((let40 (ff.mul let39 let16)))
  (let ((let41 (ff.add let40 let9)))
  (let ((let42 (ff.mul let41 let38)))
  (let ((let43 (= let42 let20)))
  (let ((let44 _1))
  (let ((let45 (ff.mul let39 let44)))
  (let ((let46 (= let45 let21)))
  (let ((let47 (ff.mul let28 let28)))
  (let ((let48 (= let47 let28)))
  (let ((let49 (ff.mul let33 let33)))
  (let ((let50 (= let49 let33)))
  (let ((let51 (ff.mul let39 let39)))
  (let ((let52 (= let51 let39)))
  (let ((let53 (ff.mul let38 let38)))
  (let ((let54 (= let53 let38)))
  (let ((let55 (ff.mul let44 let44)))
  (let ((let56 (= let55 let44)))
  (let ((let57 (ff.mul let34 let34)))
  (let ((let58 (= let57 let34)))
  (let ((let59 (and let58 let56 let54 let52 let50 let48 let46 let43 let37 let31 let25)))
  (let ((let60 (ite let0 let9 let12)))
  (let ((let61 (= let38 let60)))
  (let ((let62 (ite let6 let9 let12)))
  (let ((let63 (= let34 let62)))
  (let ((let64 (ite let1 let9 let12)))
  (let ((let65 (= let44 let64)))
  (let ((let66 (ite let4 let9 let12)))
  (let ((let67 (= let28 let66)))
  (let ((let68 (ite let5 let9 let12)))
  (let ((let69 (= let33 let68)))
  (let ((let70 (ite let2 let9 let12)))
  (let ((let71 (= let39 let70)))
  (let ((let72 (and let71 let69 let67 let65 let63 let61)))
  (let ((let73 (and let72 let59)))
  (let ((let74 (=> let73 let15)))
  (let ((let75 (not let74)))
  let75
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
