(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun mul_n6_alt () FF0)
(declare-fun c_n1_alt () FF0)
(declare-fun mul_n5_alt () FF0)
(declare-fun b_n3_alt () FF0)
(declare-fun a_n4_alt () FF0)
(declare-fun mul_n6 () FF0)
(declare-fun c_n1 () FF0)
(declare-fun mul_n5 () FF0)
(declare-fun b_n3 () FF0)
(declare-fun a_n4 () FF0)
(declare-fun return_n2_alt () FF0)
(declare-fun return_n2 () FF0)
(declare-fun d_n0_alt () FF0)
(declare-fun d_n0 () FF0)
(assert 
  (let ((let0 mul_n6_alt))
  (let ((let1 (as ff1 FF0)))
  (let ((let2 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let3 c_n1_alt))
  (let ((let4 (ff.mul let3 let2)))
  (let ((let5 (ff.add let4 let1)))
  (let ((let6 mul_n5_alt))
  (let ((let7 (ff.mul let6 let5)))
  (let ((let8 (= let7 let0)))
  (let ((let9 b_n3_alt))
  (let ((let10 (ff.mul let9 let2)))
  (let ((let11 (ff.add let10 let1)))
  (let ((let12 a_n4_alt))
  (let ((let13 (ff.mul let12 let2)))
  (let ((let14 (ff.add let13 let1)))
  (let ((let15 (ff.mul let14 let11)))
  (let ((let16 (= let15 let6)))
  (let ((let17 (and let16 let8)))
  (let ((let18 mul_n6))
  (let ((let19 c_n1))
  (let ((let20 (ff.mul let19 let2)))
  (let ((let21 (ff.add let20 let1)))
  (let ((let22 mul_n5))
  (let ((let23 (ff.mul let22 let21)))
  (let ((let24 (= let23 let18)))
  (let ((let25 b_n3))
  (let ((let26 (ff.mul let25 let2)))
  (let ((let27 (ff.add let26 let1)))
  (let ((let28 a_n4))
  (let ((let29 (ff.mul let28 let2)))
  (let ((let30 (ff.add let29 let1)))
  (let ((let31 (ff.mul let30 let27)))
  (let ((let32 (= let31 let22)))
  (let ((let33 (and let32 let24)))
  (let ((let34 return_n2_alt))
  (let ((let35 return_n2))
  (let ((let36 (= let35 let34)))
  (let ((let37 (not let36)))
  (let ((let38 d_n0_alt))
  (let ((let39 d_n0))
  (let ((let40 (= let39 let38)))
  (let ((let41 (= let28 let12)))
  (let ((let42 (= let19 let3)))
  (let ((let43 (= let25 let9)))
  (let ((let44 (and let43 let42 let41 let40)))
  (let ((let45 (and let44 let37 let33 let17)))
  let45
))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
