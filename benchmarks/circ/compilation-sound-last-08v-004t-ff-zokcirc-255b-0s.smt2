(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun g () Bool)
(declare-fun e () Bool)
(declare-fun a () Bool)
(declare-fun f () Bool)
(declare-fun b () Bool)
(declare-fun c () Bool)
(declare-fun h () Bool)
(declare-fun d () Bool)
(declare-fun return_n0 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun b_n6 () FF0)
(declare-fun c_n4 () FF0)
(declare-fun mul_n12 () FF0)
(declare-fun h_n5 () FF0)
(declare-fun d_n3 () FF0)
(declare-fun a_n8 () FF0)
(declare-fun f_n1 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun g_n7 () FF0)
(declare-fun e_n2 () FF0)
(assert 
  (let ((let0 g))
  (let ((let1 e))
  (let ((let2 (or let1 let0)))
  (let ((let3 a))
  (let ((let4 f))
  (let ((let5 (or let4 let3)))
  (let ((let6 b))
  (let ((let7 c))
  (let ((let8 (= let7 let6)))
  (let ((let9 h))
  (let ((let10 d))
  (let ((let11 (and let10 let9 let8 let5 let2)))
  (let ((let12 return_n0))
  (let ((let13 (as ff1 FF0)))
  (let ((let14 (= let13 let12)))
  (let ((let15 (= let14 let11)))
  (let ((let16 (as ff0 FF0)))
  (let ((let17 (= let16 let12)))
  (let ((let18 (or let14 let17)))
  (let ((let19 (and let18 let15)))
  (let ((let20 mul_n14))
  (let ((let21 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let22 mul_n10))
  (let ((let23 (ff.mul let22 let21)))
  (let ((let24 (ff.add let23 let13)))
  (let ((let25 mul_n13))
  (let ((let26 (ff.mul let25 let24)))
  (let ((let27 (= let26 let20)))
  (let ((let28 mul_n11))
  (let ((let29 b_n6))
  (let ((let30 (ff.mul let29 let21)))
  (let ((let31 c_n4))
  (let ((let32 (ff.mul let31 let21)))
  (let ((let33 (ff.add let32 let30 let28 let13)))
  (let ((let34 mul_n12))
  (let ((let35 (ff.mul let34 let33)))
  (let ((let36 (= let35 let25)))
  (let ((let37 h_n5))
  (let ((let38 d_n3))
  (let ((let39 (ff.mul let38 let37)))
  (let ((let40 (= let39 let34)))
  (let ((let41 (as ff2 FF0)))
  (let ((let42 (ff.mul let31 let41)))
  (let ((let43 (ff.mul let42 let29)))
  (let ((let44 (= let43 let28)))
  (let ((let45 a_n8))
  (let ((let46 (ff.mul let45 let21)))
  (let ((let47 (ff.add let46 let13)))
  (let ((let48 f_n1))
  (let ((let49 (ff.mul let48 let21)))
  (let ((let50 (ff.add let49 let13)))
  (let ((let51 (ff.mul let50 let47)))
  (let ((let52 (= let51 let22)))
  (let ((let53 mul_n9))
  (let ((let54 g_n7))
  (let ((let55 (ff.mul let54 let21)))
  (let ((let56 (ff.add let55 let13)))
  (let ((let57 e_n2))
  (let ((let58 (ff.mul let57 let21)))
  (let ((let59 (ff.add let58 let13)))
  (let ((let60 (ff.mul let59 let56)))
  (let ((let61 (= let60 let53)))
  (let ((let62 (and let61 let52 let44 let40 let36 let27)))
  (let ((let63 (ite let7 let13 let16)))
  (let ((let64 (= let31 let63)))
  (let ((let65 (ite let4 let13 let16)))
  (let ((let66 (= let48 let65)))
  (let ((let67 (ite let3 let13 let16)))
  (let ((let68 (= let45 let67)))
  (let ((let69 (ite let1 let13 let16)))
  (let ((let70 (= let57 let69)))
  (let ((let71 (ite let0 let13 let16)))
  (let ((let72 (= let54 let71)))
  (let ((let73 (ite let10 let13 let16)))
  (let ((let74 (= let38 let73)))
  (let ((let75 (ite let6 let13 let16)))
  (let ((let76 (= let29 let75)))
  (let ((let77 (ite let9 let13 let16)))
  (let ((let78 (= let37 let77)))
  (let ((let79 (and let78 let76 let74 let72 let70 let68 let66 let64)))
  (let ((let80 (and let79 let62)))
  (let ((let81 (=> let80 let19)))
  (let ((let82 (not let81)))
  let82
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
