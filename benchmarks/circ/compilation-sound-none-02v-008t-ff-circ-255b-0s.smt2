(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun a () Bool)
(declare-fun b () Bool)
(declare-fun return_n0 () FF0)
(declare-fun mul_n3 () FF0)
(declare-fun a_n2 () FF0)
(declare-fun mul_n7 () FF0)
(declare-fun b_n1 () FF0)
(declare-fun mul_n4 () FF0)
(declare-fun mul_n6 () FF0)
(declare-fun mul_n5 () FF0)
(assert 
  (let ((let0 a))
  (let ((let1 (not let0)))
  (let ((let2 (not let1)))
  (let ((let3 (= let2 let0)))
  (let ((let4 b))
  (let ((let5 (= let4 let4)))
  (let ((let6 (= let2 let4)))
  (let ((let7 (ite let1 let0 let6)))
  (let ((let8 (ite let6 let7 let5)))
  (let ((let9 (or let8 let3)))
  (let ((let10 return_n0))
  (let ((let11 (as ff1 FF0)))
  (let ((let12 (= let11 let10)))
  (let ((let13 (= let12 let9)))
  (let ((let14 (as ff0 FF0)))
  (let ((let15 (= let14 let10)))
  (let ((let16 (or let12 let15)))
  (let ((let17 (and let16 let13)))
  (let ((let18 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let19 (ff.mul let10 let18)))
  (let ((let20 (ff.add let19 let11)))
  (let ((let21 mul_n3))
  (let ((let22 (ff.mul let21 let18)))
  (let ((let23 (as ff2 FF0)))
  (let ((let24 a_n2))
  (let ((let25 (ff.mul let24 let23)))
  (let ((let26 (ff.add let25 let22)))
  (let ((let27 mul_n7))
  (let ((let28 (ff.mul let27 let18)))
  (let ((let29 b_n1))
  (let ((let30 (ff.mul let29 let23)))
  (let ((let31 mul_n4))
  (let ((let32 (ff.mul let31 let18)))
  (let ((let33 (ff.add let32 let30 let28)))
  (let ((let34 (ff.mul let33 let26)))
  (let ((let35 (= let34 let20)))
  (let ((let36 mul_n6))
  (let ((let37 (ff.mul let24 let18)))
  (let ((let38 mul_n5))
  (let ((let39 (ff.add let38 let37 let32 let29 let36)))
  (let ((let40 (ff.mul let29 let18)))
  (let ((let41 (ff.add let38 let37 let40 let11)))
  (let ((let42 (ff.mul let41 let39)))
  (let ((let43 (= let42 let27)))
  (let ((let44 (ff.mul let38 let18)))
  (let ((let45 (ff.add let44 let25 let29 let18)))
  (let ((let46 (ff.add let37 let11)))
  (let ((let47 (ff.mul let46 let45)))
  (let ((let48 (= let47 let36)))
  (let ((let49 (ff.mul let25 let29)))
  (let ((let50 (= let49 let38)))
  (let ((let51 (ff.mul let30 let29)))
  (let ((let52 (= let51 let31)))
  (let ((let53 (ff.mul let25 let24)))
  (let ((let54 (= let53 let21)))
  (let ((let55 (and let54 let52 let50 let48 let43 let35)))
  (let ((let56 (ite let0 let11 let14)))
  (let ((let57 (= let24 let56)))
  (let ((let58 (ite let4 let11 let14)))
  (let ((let59 (= let29 let58)))
  (let ((let60 (and let59 let57)))
  (let ((let61 (and let60 let55)))
  (let ((let62 (=> let61 let17)))
  (let ((let63 (not let62)))
  let63
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
