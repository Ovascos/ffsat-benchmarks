(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun return_n6_alt () FF0)
(declare-fun x5_n0_alt () FF0)
(declare-fun mul_n10_alt () FF0)
(declare-fun x4_n1_alt () FF0)
(declare-fun mul_n9_alt () FF0)
(declare-fun x3_n3_alt () FF0)
(declare-fun mul_n8_alt () FF0)
(declare-fun x2_n5_alt () FF0)
(declare-fun mul_n7_alt () FF0)
(declare-fun x1_n2_alt () FF0)
(declare-fun x0_n4_alt () FF0)
(declare-fun return_n6 () FF0)
(declare-fun x5_n0 () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun x4_n1 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun x3_n3 () FF0)
(declare-fun mul_n8 () FF0)
(declare-fun x2_n5 () FF0)
(declare-fun mul_n7 () FF0)
(declare-fun x1_n2 () FF0)
(declare-fun x0_n4 () FF0)
(assert 
  (let ((let0 return_n6_alt))
  (let ((let1 x5_n0_alt))
  (let ((let2 mul_n10_alt))
  (let ((let3 (ff.mul let2 let1)))
  (let ((let4 (= let3 let0)))
  (let ((let5 x4_n1_alt))
  (let ((let6 mul_n9_alt))
  (let ((let7 (ff.mul let6 let5)))
  (let ((let8 (= let7 let2)))
  (let ((let9 x3_n3_alt))
  (let ((let10 mul_n8_alt))
  (let ((let11 (ff.mul let10 let9)))
  (let ((let12 (= let11 let6)))
  (let ((let13 x2_n5_alt))
  (let ((let14 mul_n7_alt))
  (let ((let15 (ff.mul let14 let13)))
  (let ((let16 (= let15 let10)))
  (let ((let17 x1_n2_alt))
  (let ((let18 x0_n4_alt))
  (let ((let19 (ff.mul let18 let17)))
  (let ((let20 (= let19 let14)))
  (let ((let21 (and let20 let16 let12 let8 let4)))
  (let ((let22 return_n6))
  (let ((let23 x5_n0))
  (let ((let24 mul_n10))
  (let ((let25 (ff.mul let24 let23)))
  (let ((let26 (= let25 let22)))
  (let ((let27 x4_n1))
  (let ((let28 mul_n9))
  (let ((let29 (ff.mul let28 let27)))
  (let ((let30 (= let29 let24)))
  (let ((let31 x3_n3))
  (let ((let32 mul_n8))
  (let ((let33 (ff.mul let32 let31)))
  (let ((let34 (= let33 let28)))
  (let ((let35 x2_n5))
  (let ((let36 mul_n7))
  (let ((let37 (ff.mul let36 let35)))
  (let ((let38 (= let37 let32)))
  (let ((let39 x1_n2))
  (let ((let40 x0_n4))
  (let ((let41 (ff.mul let40 let39)))
  (let ((let42 (= let41 let36)))
  (let ((let43 (and let42 let38 let34 let30 let26)))
  (let ((let44 (= let22 let0)))
  (let ((let45 (not let44)))
  (let ((let46 (= let23 let1)))
  (let ((let47 (= let27 let5)))
  (let ((let48 (= let35 let13)))
  (let ((let49 (= let40 let18)))
  (let ((let50 (= let31 let9)))
  (let ((let51 (= let39 let17)))
  (let ((let52 (and let51 let50 let49 let48 let47 let46)))
  (let ((let53 (and let52 let45 let43 let21)))
  let53
))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
