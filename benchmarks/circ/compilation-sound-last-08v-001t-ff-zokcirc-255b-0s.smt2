(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun h () Bool)
(declare-fun g () Bool)
(declare-fun f () Bool)
(declare-fun e () Bool)
(declare-fun d () Bool)
(declare-fun c () Bool)
(declare-fun b () Bool)
(declare-fun a () Bool)
(declare-fun return_n0 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun g_n7 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun f_n1 () FF0)
(declare-fun mul_n12 () FF0)
(declare-fun e_n2 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun d_n3 () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun c_n4 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun b_n6 () FF0)
(declare-fun a_n8 () FF0)
(declare-fun h_n5 () FF0)
(assert 
  (let ((let0 h))
  (let ((let1 g))
  (let ((let2 f))
  (let ((let3 e))
  (let ((let4 d))
  (let ((let5 c))
  (let ((let6 b))
  (let ((let7 a))
  (let ((let8 (or let7 let6 let5 let4 let3 let2 let1 let0)))
  (let ((let9 return_n0))
  (let ((let10 (as ff1 FF0)))
  (let ((let11 (= let10 let9)))
  (let ((let12 (= let11 let8)))
  (let ((let13 (as ff0 FF0)))
  (let ((let14 (= let13 let9)))
  (let ((let15 (or let11 let14)))
  (let ((let16 (and let15 let12)))
  (let ((let17 mul_n14))
  (let ((let18 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let19 g_n7))
  (let ((let20 (ff.mul let19 let18)))
  (let ((let21 (ff.add let20 let10)))
  (let ((let22 mul_n13))
  (let ((let23 (ff.mul let22 let21)))
  (let ((let24 (= let23 let17)))
  (let ((let25 f_n1))
  (let ((let26 (ff.mul let25 let18)))
  (let ((let27 (ff.add let26 let10)))
  (let ((let28 mul_n12))
  (let ((let29 (ff.mul let28 let27)))
  (let ((let30 (= let29 let22)))
  (let ((let31 e_n2))
  (let ((let32 (ff.mul let31 let18)))
  (let ((let33 (ff.add let32 let10)))
  (let ((let34 mul_n11))
  (let ((let35 (ff.mul let34 let33)))
  (let ((let36 (= let35 let28)))
  (let ((let37 d_n3))
  (let ((let38 (ff.mul let37 let18)))
  (let ((let39 (ff.add let38 let10)))
  (let ((let40 mul_n10))
  (let ((let41 (ff.mul let40 let39)))
  (let ((let42 (= let41 let34)))
  (let ((let43 c_n4))
  (let ((let44 (ff.mul let43 let18)))
  (let ((let45 (ff.add let44 let10)))
  (let ((let46 mul_n9))
  (let ((let47 (ff.mul let46 let45)))
  (let ((let48 (= let47 let40)))
  (let ((let49 b_n6))
  (let ((let50 (ff.mul let49 let18)))
  (let ((let51 (ff.add let50 let10)))
  (let ((let52 a_n8))
  (let ((let53 (ff.mul let52 let18)))
  (let ((let54 (ff.add let53 let10)))
  (let ((let55 (ff.mul let54 let51)))
  (let ((let56 (= let55 let46)))
  (let ((let57 (and let56 let48 let42 let36 let30 let24)))
  (let ((let58 (ite let0 let10 let13)))
  (let ((let59 h_n5))
  (let ((let60 (= let59 let58)))
  (let ((let61 (ite let4 let10 let13)))
  (let ((let62 (= let37 let61)))
  (let ((let63 (ite let5 let10 let13)))
  (let ((let64 (= let43 let63)))
  (let ((let65 (ite let6 let10 let13)))
  (let ((let66 (= let49 let65)))
  (let ((let67 (ite let2 let10 let13)))
  (let ((let68 (= let25 let67)))
  (let ((let69 (ite let1 let10 let13)))
  (let ((let70 (= let19 let69)))
  (let ((let71 (ite let7 let10 let13)))
  (let ((let72 (= let52 let71)))
  (let ((let73 (ite let3 let10 let13)))
  (let ((let74 (= let31 let73)))
  (let ((let75 (and let74 let72 let70 let68 let66 let64 let62 let60)))
  (let ((let76 (and let75 let57)))
  (let ((let77 (=> let76 let16)))
  (let ((let78 (not let77)))
  let78
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
