(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun return_n2_alt () FF0)
(declare-fun b_n3_alt () FF0)
(declare-fun c_n1_alt () FF0)
(declare-fun a_n4_alt () FF0)
(declare-fun mul_n5_alt () FF0)
(declare-fun d_n0_alt () FF0)
(declare-fun is_zero_inv_n6_alt () FF0)
(declare-fun return_n2 () FF0)
(declare-fun b_n3 () FF0)
(declare-fun c_n1 () FF0)
(declare-fun a_n4 () FF0)
(declare-fun mul_n5 () FF0)
(declare-fun d_n0 () FF0)
(declare-fun is_zero_inv_n6 () FF0)
(assert 
  (let ((let0 return_n2_alt))
  (let ((let1 (as ff6 FF0)))
  (let ((let2 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184511 FF0)))
  (let ((let3 b_n3_alt))
  (let ((let4 (ff.mul let3 let2)))
  (let ((let5 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let6 c_n1_alt))
  (let ((let7 (ff.mul let6 let5)))
  (let ((let8 a_n4_alt))
  (let ((let9 (ff.mul let8 let5)))
  (let ((let10 mul_n5_alt))
  (let ((let11 d_n0_alt))
  (let ((let12 (ff.mul let11 let2)))
  (let ((let13 (ff.add let12 let10 let9 let7 let4 let1)))
  (let ((let14 is_zero_inv_n6_alt))
  (let ((let15 (ff.mul let14 let13)))
  (let ((let16 (= let15 let0)))
  (let ((let17 (as ff1 FF0)))
  (let ((let18 (ff.add let9 let17)))
  (let ((let19 (ff.mul let6 let18)))
  (let ((let20 (= let19 let10)))
  (let ((let21 (and let20 let16)))
  (let ((let22 return_n2))
  (let ((let23 b_n3))
  (let ((let24 (ff.mul let23 let2)))
  (let ((let25 c_n1))
  (let ((let26 (ff.mul let25 let5)))
  (let ((let27 a_n4))
  (let ((let28 (ff.mul let27 let5)))
  (let ((let29 mul_n5))
  (let ((let30 d_n0))
  (let ((let31 (ff.mul let30 let2)))
  (let ((let32 (ff.add let31 let29 let28 let26 let24 let1)))
  (let ((let33 is_zero_inv_n6))
  (let ((let34 (ff.mul let33 let32)))
  (let ((let35 (= let34 let22)))
  (let ((let36 (ff.add let28 let17)))
  (let ((let37 (ff.mul let25 let36)))
  (let ((let38 (= let37 let29)))
  (let ((let39 (and let38 let35)))
  (let ((let40 (= let22 let0)))
  (let ((let41 (not let40)))
  (let ((let42 (= let30 let11)))
  (let ((let43 (= let25 let6)))
  (let ((let44 (= let27 let8)))
  (let ((let45 (= let23 let3)))
  (let ((let46 (and let45 let44 let43 let42)))
  (let ((let47 (and let46 let41 let39 let21)))
  let47
))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
