(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun i () Bool)
(declare-fun b () Bool)
(declare-fun d () Bool)
(declare-fun g () Bool)
(declare-fun a () Bool)
(declare-fun j () Bool)
(declare-fun f () Bool)
(declare-fun l () Bool)
(declare-fun e () Bool)
(declare-fun h () Bool)
(declare-fun c () Bool)
(declare-fun k () Bool)
(declare-fun return_n10 () FF0)
(declare-fun mul_n19 () FF0)
(declare-fun h_n9 () FF0)
(declare-fun l_n12 () FF0)
(declare-fun mul_n18 () FF0)
(declare-fun j_n5 () FF0)
(declare-fun c_n8 () FF0)
(declare-fun mul_n17 () FF0)
(declare-fun e_n4 () FF0)
(declare-fun mul_n16 () FF0)
(declare-fun k_n3 () FF0)
(declare-fun is_zero_inv_n20 () FF0)
(declare-fun i_n7 () FF0)
(declare-fun mul_n15 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun a_n1 () FF0)
(declare-fun g_n0 () FF0)
(declare-fun b_n11 () FF0)
(declare-fun d_n6 () FF0)
(declare-fun f_n2 () FF0)
(assert 
  (let ((let0 i))
  (let ((let1 b))
  (let ((let2 d))
  (let ((let3 (=> let2 let1)))
  (let ((let4 g))
  (let ((let5 a))
  (let ((let6 (= let5 let4)))
  (let ((let7 (and let6 let3 let0)))
  (let ((let8 j))
  (let ((let9 (not let8)))
  (let ((let10 f))
  (let ((let11 (=> let10 let10)))
  (let ((let12 l))
  (let ((let13 e))
  (let ((let14 (= let13 let12)))
  (let ((let15 h))
  (let ((let16 c))
  (let ((let17 (= let16 let15)))
  (let ((let18 k))
  (let ((let19 (and let18 let17 let14 let11 let9 let7)))
  (let ((let20 return_n10))
  (let ((let21 (as ff1 FF0)))
  (let ((let22 (= let21 let20)))
  (let ((let23 (= let22 let19)))
  (let ((let24 (as ff0 FF0)))
  (let ((let25 (= let24 let20)))
  (let ((let26 (or let22 let25)))
  (let ((let27 (and let26 let23)))
  (let ((let28 (as ff2 FF0)))
  (let ((let29 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let30 mul_n19))
  (let ((let31 (ff.mul let30 let29)))
  (let ((let32 h_n9))
  (let ((let33 l_n12))
  (let ((let34 mul_n18))
  (let ((let35 (ff.mul let34 let29)))
  (let ((let36 j_n5))
  (let ((let37 c_n8))
  (let ((let38 mul_n17))
  (let ((let39 e_n4))
  (let ((let40 mul_n16))
  (let ((let41 (ff.mul let40 let29)))
  (let ((let42 k_n3))
  (let ((let43 (ff.mul let42 let29)))
  (let ((let44 (ff.add let43 let41 let39 let38 let37 let36 let35 let33 let32 let31 let28)))
  (let ((let45 (ff.mul let20 let44)))
  (let ((let46 (= let45 let24)))
  (let ((let47 (ff.mul let20 let29)))
  (let ((let48 (ff.add let47 let21)))
  (let ((let49 is_zero_inv_n20))
  (let ((let50 (ff.mul let49 let44)))
  (let ((let51 (= let50 let48)))
  (let ((let52 (ff.mul let37 let28)))
  (let ((let53 (ff.mul let52 let32)))
  (let ((let54 (= let53 let30)))
  (let ((let55 (ff.mul let39 let28)))
  (let ((let56 (ff.mul let55 let33)))
  (let ((let57 (= let56 let34)))
  (let ((let58 i_n7))
  (let ((let59 mul_n15))
  (let ((let60 (ff.mul let59 let58)))
  (let ((let61 (= let60 let40)))
  (let ((let62 mul_n13))
  (let ((let63 (ff.mul let62 let29)))
  (let ((let64 (ff.add let63 let21)))
  (let ((let65 mul_n14))
  (let ((let66 a_n1))
  (let ((let67 (ff.mul let66 let29)))
  (let ((let68 g_n0))
  (let ((let69 (ff.mul let68 let29)))
  (let ((let70 (ff.add let69 let67 let65 let21)))
  (let ((let71 (ff.mul let70 let64)))
  (let ((let72 (= let71 let59)))
  (let ((let73 (ff.mul let66 let28)))
  (let ((let74 (ff.mul let73 let68)))
  (let ((let75 (= let74 let65)))
  (let ((let76 b_n11))
  (let ((let77 (ff.mul let76 let29)))
  (let ((let78 (ff.add let77 let21)))
  (let ((let79 d_n6))
  (let ((let80 (ff.mul let79 let78)))
  (let ((let81 (= let80 let62)))
  (let ((let82 (and let81 let75 let72 let61 let57 let54 let51 let46)))
  (let ((let83 (ite let2 let21 let24)))
  (let ((let84 (= let79 let83)))
  (let ((let85 (ite let13 let21 let24)))
  (let ((let86 (= let39 let85)))
  (let ((let87 (ite let18 let21 let24)))
  (let ((let88 (= let42 let87)))
  (let ((let89 (ite let1 let21 let24)))
  (let ((let90 (= let76 let89)))
  (let ((let91 (ite let4 let21 let24)))
  (let ((let92 (= let68 let91)))
  (let ((let93 (ite let12 let21 let24)))
  (let ((let94 (= let33 let93)))
  (let ((let95 (ite let16 let21 let24)))
  (let ((let96 (= let37 let95)))
  (let ((let97 (ite let5 let21 let24)))
  (let ((let98 (= let66 let97)))
  (let ((let99 (ite let8 let21 let24)))
  (let ((let100 (= let36 let99)))
  (let ((let101 (ite let10 let21 let24)))
  (let ((let102 f_n2))
  (let ((let103 (= let102 let101)))
  (let ((let104 (ite let0 let21 let24)))
  (let ((let105 (= let58 let104)))
  (let ((let106 (ite let15 let21 let24)))
  (let ((let107 (= let32 let106)))
  (let ((let108 (and let107 let105 let103 let100 let98 let96 let94 let92 let90 let88 let86 let84)))
  (let ((let109 (and let108 let82)))
  (let ((let110 (=> let109 let27)))
  (let ((let111 (not let110)))
  let111
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
