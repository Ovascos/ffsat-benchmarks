(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun b_n3_alt () FF0)
(declare-fun c_n1_alt () FF0)
(declare-fun a_n4_alt () FF0)
(declare-fun mul_n5_alt () FF0)
(declare-fun d_n0_alt () FF0)
(declare-fun return_n2_alt () FF0)
(declare-fun is_zero_inv_n6_alt () FF0)
(declare-fun b_n3 () FF0)
(declare-fun c_n1 () FF0)
(declare-fun a_n4 () FF0)
(declare-fun mul_n5 () FF0)
(declare-fun d_n0 () FF0)
(declare-fun return_n2 () FF0)
(declare-fun is_zero_inv_n6 () FF0)
(assert 
  (let ((let0 (as ff0 FF0)))
  (let ((let1 (as ff6 FF0)))
  (let ((let2 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184511 FF0)))
  (let ((let3 b_n3_alt))
  (let ((let4 (ff.mul let3 let2)))
  (let ((let5 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let6 c_n1_alt))
  (let ((let7 (ff.mul let6 let5)))
  (let ((let8 a_n4_alt))
  (let ((let9 (ff.mul let8 let5)))
  (let ((let10 mul_n5_alt))
  (let ((let11 d_n0_alt))
  (let ((let12 (ff.mul let11 let2)))
  (let ((let13 (ff.add let12 let10 let9 let7 let4 let1)))
  (let ((let14 (as ff1 FF0)))
  (let ((let15 return_n2_alt))
  (let ((let16 (ff.mul let15 let5)))
  (let ((let17 (ff.add let16 let14)))
  (let ((let18 (ff.mul let17 let13)))
  (let ((let19 (= let18 let0)))
  (let ((let20 is_zero_inv_n6_alt))
  (let ((let21 (ff.mul let20 let13)))
  (let ((let22 (= let21 let15)))
  (let ((let23 (ff.add let9 let14)))
  (let ((let24 (ff.mul let6 let23)))
  (let ((let25 (= let24 let10)))
  (let ((let26 (and let25 let22 let19)))
  (let ((let27 b_n3))
  (let ((let28 (ff.mul let27 let2)))
  (let ((let29 c_n1))
  (let ((let30 (ff.mul let29 let5)))
  (let ((let31 a_n4))
  (let ((let32 (ff.mul let31 let5)))
  (let ((let33 mul_n5))
  (let ((let34 d_n0))
  (let ((let35 (ff.mul let34 let2)))
  (let ((let36 (ff.add let35 let33 let32 let30 let28 let1)))
  (let ((let37 return_n2))
  (let ((let38 (ff.mul let37 let5)))
  (let ((let39 (ff.add let38 let14)))
  (let ((let40 (ff.mul let39 let36)))
  (let ((let41 (= let40 let0)))
  (let ((let42 is_zero_inv_n6))
  (let ((let43 (ff.mul let42 let36)))
  (let ((let44 (= let43 let37)))
  (let ((let45 (ff.add let32 let14)))
  (let ((let46 (ff.mul let29 let45)))
  (let ((let47 (= let46 let33)))
  (let ((let48 (and let47 let44 let41)))
  (let ((let49 (= let37 let15)))
  (let ((let50 (not let49)))
  (let ((let51 (= let27 let3)))
  (let ((let52 (= let34 let11)))
  (let ((let53 (= let29 let6)))
  (let ((let54 (= let31 let8)))
  (let ((let55 (and let54 let53 let52 let51)))
  (let ((let56 (and let55 let50 let48 let26)))
  let56
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
