(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun f () Bool)
(declare-fun e () Bool)
(declare-fun d () Bool)
(declare-fun c () Bool)
(declare-fun b () Bool)
(declare-fun a () Bool)
(declare-fun out () FF0)
(declare-fun _10 () FF0)
(declare-fun _5 () FF0)
(declare-fun _9 () FF0)
(declare-fun _4 () FF0)
(declare-fun _8 () FF0)
(declare-fun _7 () FF0)
(declare-fun _2 () FF0)
(declare-fun _6 () FF0)
(declare-fun _1 () FF0)
(declare-fun _0 () FF0)
(declare-fun _3 () FF0)
(assert 
  (let ((let0 f))
  (let ((let1 e))
  (let ((let2 d))
  (let ((let3 c))
  (let ((let4 b))
  (let ((let5 a))
  (let ((let6 (and let5 let4 let3 let2 let1 let0)))
  (let ((let7 out))
  (let ((let8 (as ff1 FF0)))
  (let ((let9 (= let8 let7)))
  (let ((let10 (= let9 let6)))
  (let ((let11 (as ff0 FF0)))
  (let ((let12 (= let11 let7)))
  (let ((let13 (or let9 let12)))
  (let ((let14 (and let13 let10)))
  (let ((let15 _10))
  (let ((let16 (= let15 let7)))
  (let ((let17 _5))
  (let ((let18 _9))
  (let ((let19 (ff.mul let18 let17)))
  (let ((let20 (= let19 let15)))
  (let ((let21 _4))
  (let ((let22 _8))
  (let ((let23 (ff.mul let22 let21)))
  (let ((let24 (= let23 let18)))
  (let ((let25 _7))
  (let ((let26 _2))
  (let ((let27 _6))
  (let ((let28 (ff.mul let27 let26)))
  (let ((let29 (= let28 let25)))
  (let ((let30 _1))
  (let ((let31 _0))
  (let ((let32 (ff.mul let31 let30)))
  (let ((let33 (= let32 let27)))
  (let ((let34 (ff.mul let17 let17)))
  (let ((let35 (= let34 let17)))
  (let ((let36 (ff.mul let21 let21)))
  (let ((let37 (= let36 let21)))
  (let ((let38 _3))
  (let ((let39 (ff.mul let38 let38)))
  (let ((let40 (= let39 let38)))
  (let ((let41 (ff.mul let26 let26)))
  (let ((let42 (= let41 let26)))
  (let ((let43 (ff.mul let30 let30)))
  (let ((let44 (= let43 let30)))
  (let ((let45 (ff.mul let31 let31)))
  (let ((let46 (= let45 let31)))
  (let ((let47 (and let46 let44 let42 let40 let37 let35 let33 let29 let24 let20 let16)))
  (let ((let48 (ite let5 let8 let11)))
  (let ((let49 (= let31 let48)))
  (let ((let50 (ite let0 let8 let11)))
  (let ((let51 (= let17 let50)))
  (let ((let52 (ite let3 let8 let11)))
  (let ((let53 (= let26 let52)))
  (let ((let54 (ite let2 let8 let11)))
  (let ((let55 (= let38 let54)))
  (let ((let56 (ite let1 let8 let11)))
  (let ((let57 (= let21 let56)))
  (let ((let58 (ite let4 let8 let11)))
  (let ((let59 (= let30 let58)))
  (let ((let60 (and let59 let57 let55 let53 let51 let49)))
  (let ((let61 (and let60 let47)))
  (let ((let62 (=> let61 let14)))
  (let ((let63 (not let62)))
  let63
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
