(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun l () Bool)
(declare-fun k () Bool)
(declare-fun j () Bool)
(declare-fun i () Bool)
(declare-fun h () Bool)
(declare-fun g () Bool)
(declare-fun f () Bool)
(declare-fun e () Bool)
(declare-fun d () Bool)
(declare-fun c () Bool)
(declare-fun b () Bool)
(declare-fun a () Bool)
(declare-fun return_n1 () FF0)
(declare-fun l_n0 () FF0)
(declare-fun mul_n22 () FF0)
(declare-fun k_n3 () FF0)
(declare-fun mul_n21 () FF0)
(declare-fun j_n5 () FF0)
(declare-fun mul_n20 () FF0)
(declare-fun i_n7 () FF0)
(declare-fun mul_n19 () FF0)
(declare-fun h_n9 () FF0)
(declare-fun mul_n18 () FF0)
(declare-fun g_n11 () FF0)
(declare-fun mul_n17 () FF0)
(declare-fun f_n2 () FF0)
(declare-fun mul_n16 () FF0)
(declare-fun e_n4 () FF0)
(declare-fun mul_n15 () FF0)
(declare-fun d_n6 () FF0)
(declare-fun mul_n14 () FF0)
(declare-fun c_n8 () FF0)
(declare-fun mul_n13 () FF0)
(declare-fun b_n10 () FF0)
(declare-fun a_n12 () FF0)
(assert 
  (let ((let0 l))
  (let ((let1 k))
  (let ((let2 j))
  (let ((let3 i))
  (let ((let4 h))
  (let ((let5 g))
  (let ((let6 f))
  (let ((let7 e))
  (let ((let8 d))
  (let ((let9 c))
  (let ((let10 b))
  (let ((let11 a))
  (let ((let12 (and let11 let10 let9 let8 let7 let6 let5 let4 let3 let2 let1 let0)))
  (let ((let13 return_n1))
  (let ((let14 (as ff1 FF0)))
  (let ((let15 (= let14 let13)))
  (let ((let16 (= let15 let12)))
  (let ((let17 (as ff0 FF0)))
  (let ((let18 (= let17 let13)))
  (let ((let19 (or let15 let18)))
  (let ((let20 (and let19 let16)))
  (let ((let21 l_n0))
  (let ((let22 mul_n22))
  (let ((let23 (ff.mul let22 let21)))
  (let ((let24 (= let23 let13)))
  (let ((let25 k_n3))
  (let ((let26 mul_n21))
  (let ((let27 (ff.mul let26 let25)))
  (let ((let28 (= let27 let22)))
  (let ((let29 j_n5))
  (let ((let30 mul_n20))
  (let ((let31 (ff.mul let30 let29)))
  (let ((let32 (= let31 let26)))
  (let ((let33 i_n7))
  (let ((let34 mul_n19))
  (let ((let35 (ff.mul let34 let33)))
  (let ((let36 (= let35 let30)))
  (let ((let37 h_n9))
  (let ((let38 mul_n18))
  (let ((let39 (ff.mul let38 let37)))
  (let ((let40 (= let39 let34)))
  (let ((let41 g_n11))
  (let ((let42 mul_n17))
  (let ((let43 (ff.mul let42 let41)))
  (let ((let44 (= let43 let38)))
  (let ((let45 f_n2))
  (let ((let46 mul_n16))
  (let ((let47 (ff.mul let46 let45)))
  (let ((let48 (= let47 let42)))
  (let ((let49 e_n4))
  (let ((let50 mul_n15))
  (let ((let51 (ff.mul let50 let49)))
  (let ((let52 (= let51 let46)))
  (let ((let53 d_n6))
  (let ((let54 mul_n14))
  (let ((let55 (ff.mul let54 let53)))
  (let ((let56 (= let55 let50)))
  (let ((let57 c_n8))
  (let ((let58 mul_n13))
  (let ((let59 (ff.mul let58 let57)))
  (let ((let60 (= let59 let54)))
  (let ((let61 b_n10))
  (let ((let62 a_n12))
  (let ((let63 (ff.mul let62 let61)))
  (let ((let64 (= let63 let58)))
  (let ((let65 (and let64 let60 let56 let52 let48 let44 let40 let36 let32 let28 let24)))
  (let ((let66 (ite let3 let14 let17)))
  (let ((let67 (= let33 let66)))
  (let ((let68 (ite let1 let14 let17)))
  (let ((let69 (= let25 let68)))
  (let ((let70 (ite let8 let14 let17)))
  (let ((let71 (= let53 let70)))
  (let ((let72 (ite let0 let14 let17)))
  (let ((let73 (= let21 let72)))
  (let ((let74 (ite let6 let14 let17)))
  (let ((let75 (= let45 let74)))
  (let ((let76 (ite let5 let14 let17)))
  (let ((let77 (= let41 let76)))
  (let ((let78 (ite let9 let14 let17)))
  (let ((let79 (= let57 let78)))
  (let ((let80 (ite let2 let14 let17)))
  (let ((let81 (= let29 let80)))
  (let ((let82 (ite let4 let14 let17)))
  (let ((let83 (= let37 let82)))
  (let ((let84 (ite let11 let14 let17)))
  (let ((let85 (= let62 let84)))
  (let ((let86 (ite let10 let14 let17)))
  (let ((let87 (= let61 let86)))
  (let ((let88 (ite let7 let14 let17)))
  (let ((let89 (= let49 let88)))
  (let ((let90 (and let89 let87 let85 let83 let81 let79 let77 let75 let73 let71 let69 let67)))
  (let ((let91 (and let90 let65)))
  (let ((let92 (=> let91 let20)))
  (let ((let93 (not let92)))
  let93
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
