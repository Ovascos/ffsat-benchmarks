(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FF)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun x5 () Bool)
(declare-fun x4 () Bool)
(declare-fun x3 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1 () Bool)
(declare-fun x0 () Bool)
(declare-fun out () FF0)
(declare-fun _10 () FF0)
(declare-fun _9 () FF0)
(declare-fun _5 () FF0)
(declare-fun _8 () FF0)
(declare-fun _4 () FF0)
(declare-fun _7 () FF0)
(declare-fun _6 () FF0)
(declare-fun _2 () FF0)
(declare-fun _1 () FF0)
(declare-fun _0 () FF0)
(declare-fun _3 () FF0)
(assert 
  (let ((let0 x5))
  (let ((let1 x4))
  (let ((let2 x3))
  (let ((let3 x2))
  (let ((let4 x1))
  (let ((let5 x0))
  (let ((let6 (or let5 let4 let3 let2 let1 let0)))
  (let ((let7 out))
  (let ((let8 (as ff1 FF0)))
  (let ((let9 (= let8 let7)))
  (let ((let10 (= let9 let6)))
  (let ((let11 (as ff0 FF0)))
  (let ((let12 (= let11 let7)))
  (let ((let13 (or let9 let12)))
  (let ((let14 (and let13 let10)))
  (let ((let15 _10))
  (let ((let16 (= let15 let7)))
  (let ((let17 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let18 (ff.mul let15 let17)))
  (let ((let19 _9))
  (let ((let20 _5))
  (let ((let21 (ff.add let20 let19 let18)))
  (let ((let22 (ff.mul let19 let20)))
  (let ((let23 (= let22 let21)))
  (let ((let24 (ff.mul let19 let17)))
  (let ((let25 _8))
  (let ((let26 _4))
  (let ((let27 (ff.add let26 let25 let24)))
  (let ((let28 (ff.mul let25 let26)))
  (let ((let29 (= let28 let27)))
  (let ((let30 _7))
  (let ((let31 (ff.mul let30 let17)))
  (let ((let32 _6))
  (let ((let33 _2))
  (let ((let34 (ff.add let33 let32 let31)))
  (let ((let35 (ff.mul let32 let33)))
  (let ((let36 (= let35 let34)))
  (let ((let37 (ff.mul let32 let17)))
  (let ((let38 _1))
  (let ((let39 _0))
  (let ((let40 (ff.add let39 let38 let37)))
  (let ((let41 (ff.mul let39 let38)))
  (let ((let42 (= let41 let40)))
  (let ((let43 (ff.mul let20 let20)))
  (let ((let44 (= let43 let20)))
  (let ((let45 (ff.mul let26 let26)))
  (let ((let46 (= let45 let26)))
  (let ((let47 _3))
  (let ((let48 (ff.mul let47 let47)))
  (let ((let49 (= let48 let47)))
  (let ((let50 (ff.mul let33 let33)))
  (let ((let51 (= let50 let33)))
  (let ((let52 (ff.mul let38 let38)))
  (let ((let53 (= let52 let38)))
  (let ((let54 (ff.mul let39 let39)))
  (let ((let55 (= let54 let39)))
  (let ((let56 (and let55 let53 let51 let49 let46 let44 let42 let36 let29 let23 let16)))
  (let ((let57 (ite let0 let8 let11)))
  (let ((let58 (= let20 let57)))
  (let ((let59 (ite let5 let8 let11)))
  (let ((let60 (= let39 let59)))
  (let ((let61 (ite let1 let8 let11)))
  (let ((let62 (= let26 let61)))
  (let ((let63 (ite let2 let8 let11)))
  (let ((let64 (= let47 let63)))
  (let ((let65 (ite let3 let8 let11)))
  (let ((let66 (= let33 let65)))
  (let ((let67 (ite let4 let8 let11)))
  (let ((let68 (= let38 let67)))
  (let ((let69 (and let68 let66 let64 let62 let60 let58)))
  (let ((let70 (and let69 let56)))
  (let ((let71 (=> let70 let14)))
  (let ((let72 (not let71)))
  let72
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
