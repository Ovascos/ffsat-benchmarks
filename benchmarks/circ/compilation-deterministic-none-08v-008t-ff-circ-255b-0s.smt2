(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-logic QF_FFA)
(define-sort FF0 () (_ FiniteField 52435875175126190479447740508185965837690552500527637822603658699938581184513))
(declare-fun mul_n12_alt () FF0)
(declare-fun b_n6_alt () FF0)
(declare-fun mul_n9_alt () FF0)
(declare-fun c_n4_alt () FF0)
(declare-fun h_n7_alt () FF0)
(declare-fun g_n0_alt () FF0)
(declare-fun a_n8_alt () FF0)
(declare-fun return_n5_alt () FF0)
(declare-fun is_zero_inv_n13_alt () FF0)
(declare-fun mul_n11_alt () FF0)
(declare-fun mul_n10_alt () FF0)
(declare-fun f_n1_alt () FF0)
(declare-fun d_n3_alt () FF0)
(declare-fun e_n2_alt () FF0)
(declare-fun mul_n12 () FF0)
(declare-fun b_n6 () FF0)
(declare-fun mul_n9 () FF0)
(declare-fun c_n4 () FF0)
(declare-fun h_n7 () FF0)
(declare-fun g_n0 () FF0)
(declare-fun a_n8 () FF0)
(declare-fun return_n5 () FF0)
(declare-fun is_zero_inv_n13 () FF0)
(declare-fun mul_n11 () FF0)
(declare-fun mul_n10 () FF0)
(declare-fun f_n1 () FF0)
(declare-fun d_n3 () FF0)
(declare-fun e_n2 () FF0)
(assert 
  (let ((let0 (as ff0 FF0)))
  (let ((let1 (as ff5 FF0)))
  (let ((let2 (as ff52435875175126190479447740508185965837690552500527637822603658699938581184512 FF0)))
  (let ((let3 mul_n12_alt))
  (let ((let4 (ff.mul let3 let2)))
  (let ((let5 b_n6_alt))
  (let ((let6 (ff.mul let5 let2)))
  (let ((let7 mul_n9_alt))
  (let ((let8 c_n4_alt))
  (let ((let9 (ff.mul let8 let2)))
  (let ((let10 h_n7_alt))
  (let ((let11 (ff.mul let10 let2)))
  (let ((let12 g_n0_alt))
  (let ((let13 a_n8_alt))
  (let ((let14 (ff.mul let13 let2)))
  (let ((let15 (ff.add let14 let12 let11 let9 let7 let6 let4 let1)))
  (let ((let16 return_n5_alt))
  (let ((let17 (ff.mul let16 let15)))
  (let ((let18 (= let17 let0)))
  (let ((let19 (as ff1 FF0)))
  (let ((let20 (ff.mul let16 let2)))
  (let ((let21 (ff.add let20 let19)))
  (let ((let22 is_zero_inv_n13_alt))
  (let ((let23 (ff.mul let22 let15)))
  (let ((let24 (= let23 let21)))
  (let ((let25 (ff.mul let7 let2)))
  (let ((let26 (ff.add let25 let19)))
  (let ((let27 mul_n11_alt))
  (let ((let28 (ff.add let10 let27)))
  (let ((let29 (ff.mul let28 let26)))
  (let ((let30 (= let29 let3)))
  (let ((let31 mul_n10_alt))
  (let ((let32 f_n1_alt))
  (let ((let33 (ff.add let32 let31 let11)))
  (let ((let34 d_n3_alt))
  (let ((let35 (ff.mul let34 let33)))
  (let ((let36 (= let35 let27)))
  (let ((let37 e_n2_alt))
  (let ((let38 (ff.mul let32 let2)))
  (let ((let39 (ff.add let38 let37)))
  (let ((let40 (ff.mul let8 let39)))
  (let ((let41 (= let40 let31)))
  (let ((let42 (ff.mul let34 let2)))
  (let ((let43 (ff.add let42 let19)))
  (let ((let44 (ff.add let6 let19)))
  (let ((let45 (ff.mul let44 let43)))
  (let ((let46 (= let45 let7)))
  (let ((let47 (and let46 let41 let36 let30 let24 let18)))
  (let ((let48 mul_n12))
  (let ((let49 (ff.mul let48 let2)))
  (let ((let50 b_n6))
  (let ((let51 (ff.mul let50 let2)))
  (let ((let52 mul_n9))
  (let ((let53 c_n4))
  (let ((let54 (ff.mul let53 let2)))
  (let ((let55 h_n7))
  (let ((let56 (ff.mul let55 let2)))
  (let ((let57 g_n0))
  (let ((let58 a_n8))
  (let ((let59 (ff.mul let58 let2)))
  (let ((let60 (ff.add let59 let57 let56 let54 let52 let51 let49 let1)))
  (let ((let61 return_n5))
  (let ((let62 (ff.mul let61 let60)))
  (let ((let63 (= let62 let0)))
  (let ((let64 (ff.mul let61 let2)))
  (let ((let65 (ff.add let64 let19)))
  (let ((let66 is_zero_inv_n13))
  (let ((let67 (ff.mul let66 let60)))
  (let ((let68 (= let67 let65)))
  (let ((let69 (ff.mul let52 let2)))
  (let ((let70 (ff.add let69 let19)))
  (let ((let71 mul_n11))
  (let ((let72 (ff.add let55 let71)))
  (let ((let73 (ff.mul let72 let70)))
  (let ((let74 (= let73 let48)))
  (let ((let75 mul_n10))
  (let ((let76 f_n1))
  (let ((let77 (ff.add let76 let75 let56)))
  (let ((let78 d_n3))
  (let ((let79 (ff.mul let78 let77)))
  (let ((let80 (= let79 let71)))
  (let ((let81 e_n2))
  (let ((let82 (ff.mul let76 let2)))
  (let ((let83 (ff.add let82 let81)))
  (let ((let84 (ff.mul let53 let83)))
  (let ((let85 (= let84 let75)))
  (let ((let86 (ff.mul let78 let2)))
  (let ((let87 (ff.add let86 let19)))
  (let ((let88 (ff.add let51 let19)))
  (let ((let89 (ff.mul let88 let87)))
  (let ((let90 (= let89 let52)))
  (let ((let91 (and let90 let85 let80 let74 let68 let63)))
  (let ((let92 (= let61 let16)))
  (let ((let93 (not let92)))
  (let ((let94 (= let55 let10)))
  (let ((let95 (= let81 let37)))
  (let ((let96 (= let50 let5)))
  (let ((let97 (= let78 let34)))
  (let ((let98 (= let53 let8)))
  (let ((let99 (= let76 let32)))
  (let ((let100 (= let57 let12)))
  (let ((let101 (= let58 let13)))
  (let ((let102 (and let101 let100 let99 let98 let97 let96 let95 let94)))
  (let ((let103 (and let102 let93 let91 let47)))
  let103
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)
(check-sat)
